%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: DEVOPS1.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Chintu
%%CreationDate: 12/9/2016
%%BoundingBox: 0 0 1500 1000
%%HiResBoundingBox: 0 0 1500 1000
%%CropBox: 0 0 1500 1000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Basic RGB</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2016-12-09T15:35:16+05:30</xmp:CreateDate>
         <xmp:ModifyDate>2016-12-09T15:35:17+05:30</xmp:ModifyDate>
         <xmp:MetadataDate>2016-12-09T15:35:17+05:30</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>172</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgArAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8Al9nb9MVTm2g6bYqmlvDi&#xA;qYwxdMVRsUeKoqOPFUQiYqrKmKqqpiqoFxVcFxVeFxVumKt0xVumKupirqYq6mKtUxVqmKtFcVWl&#xA;cVWFcVWMmKqTJiqi6Yqh5I8VQsseKoKaLFUvnhxVLLmDrtiqT3lv12xVG2kPTFU2t4umKpnBF0xV&#xA;HRR4qi448VRSJiquq4qqquKqgXFV4XFVwGKrgMVbpirdMVdTFW6Yq6mKtUxV1MVapirRGKtEYqsK&#xA;4qsK4qpsuKqTLiqi6YqhpI8VQksfXFUDPF1xVLbiLriqU3UPXFUVaxdMVTW3j6YqmMMeKo2JMVRU&#xA;aYqiEXFVZVxVUVcVVAMVXAYquAxVsDFW6Yq3irqYq6mKupirqYq7FWqYq0RirRGKrSMVWkYqsZcV&#xA;UmXFVF1xVQkTFULKmKoOaPFUuuI+uKpXcxdcVRFtH0xVM4I+mKphEmKouJMVRKLiqui4qrKMVVAM&#xA;VXAYquAxVcBireKupireKuxV2KuxV2KuxV1MVaxVqmKtEYqtIxVYRiqmwxVSdcVUHXFUPIuKoOVM&#xA;VQM8eKpZcx9cVVrZOmKplAmKo6JcVRca4qiEXFVdFJ2AriqB1XzFoWjj/cjeJFJ1EC/HL/wC1I+n&#xA;MjDpcmT6Q4Oq7RwYP7yQB7uZ+TFb7839LjJFjp8tx4PM6xD50USZssfY0j9UgPt/U6LN7VYx9ECf&#xA;ea/Wlr/nFqVfg06BRXozOdvDtvl47Gh/OLhH2ry9IR+1Xt/zlmDf6TpaMvjHKVI+gq1cjLsUdJfY&#xA;2w9q5fxY/kf2Mg0v80vK94VSd5LGQ7fvlqlf9dC340zCy9lZY8vV7naaf2j02TaVwPny+YZZb3Fv&#xA;cQrNbyJNC+6SRsGU/IjbNfKJiaIou8hkjMXE2PJUyLN1MVbpirqYq6mKupirVMVdiqncXFvbxGW4&#xA;kWKIdXchR95yvLljjHFIiI82UIGRoCyx6+8/aHbkrD6l0w7oOK/e1PwGaLUe0umhtG5+7l9rssXZ&#xA;OWXOopTL+ZMxb91YKo/y5Cx/BRmrn7WS/hxj4n9jmR7EHWX2KafmRe/7ssom8eLMv665CPtXk6wj&#xA;8yyPYsOkijrX8xNNkNLq1lgr3RhIPprwOZ2H2qxH64Sj7t/1ONk7FmPpkD9n60+sdU0zUVrZXKTH&#xA;qY/suPmrUOb7S6/Dn/u5A+XX5c3W5tNkx/UKVnUjY5mNCi64qh5FxVCSriqCnTFUuuExVUt06Yqm&#xA;MK4qjYlxVFRriqs0kMEJnuHEUK0BY9yTQKoG5YnYAdclGJkaDCcxEWTswT8xvOt/ZX7aNpU3oCNF&#xA;+tzptJzYV4Bu1FI6b5u+zdDGUeOYvueR7f7YyQyeDiNUNz19zzR3d2LuxZ2NWYmpJPck5vQKePJJ&#xA;NlKPMmpXlhbW0luCI5bmOG7uAhkMELhqy8R/lBVqdhWuUajIYgV37+QcvRYY5JEHmIkgXVnuSafz&#xA;jqFrJPaixkvFgVaah8USsHaJRIyLFJxQeufiXlXg3wjKDqpCxV11+Xl5/YdnMj2dCQEuIRv+Hn/O&#xA;2uxv6etfUN0T5S8y6lqZjtbyzeN47O3mmvXIX1JpIkaQCIKKAM5Fa9QRktLqJT2I/hG/n7mvtDRQ&#xA;xXKMuc5AR7gCa3/HNk2Zjq2V2GmfmF5buBLaWl1Hy3dIl9eJv9dY+a5r8mXTZxUiPuLu8On1+klc&#xA;IzHu9Q+NWHovlbz3a6rKLDUIjp+rjrbyAqsh/wCK+W9f8k7/ADzS6rQHGOKJ4od71nZ3bMc54Mg4&#xA;Mvcevu/V97Ks17u3Yq7FXYq7FXYqxvX/ADhFZyGy06P63qHQqoLKh9+O7H2Gc/2l25HEfDxDjy/Y&#xA;P1nydnpOzjMcUzwwYXqtv5muon1DUo5vSQirSjgF5GgCoadz2GcjrcWsyROXMJcI79q9w/UHeaee&#xA;CB4MZF+X60nzUua83h1Xz9Zw/WIIrvUJIfrxvLS6gKpx+t+nZtCUjWR2EFXZUJqB2YjOglh0szRM&#xA;Y3wUQf6Nyveh6trP3OsGTNEWLP1XY89q27nL5u85alPPaLYtEtndWaXU9lHPyjBks5JkPqJ8fKG4&#xA;lqOIZQlWA5DE6HT4wJcV8UZUJEb7TAOx74x8je3Ir+YyyJFciOV/0b+wn5Jhp/m3zlPdabBdaTFb&#xA;G/uGiZXEivGixpM7Mr8TRF9WPmPhZ1FNm2oy6LTiMjGZPCL6b7kfb6TXMAm+TZDUZSQDGrP7f1j3&#xA;+9nMcjxuHjYo6mqspoQfYjNRGRibBoucQCKLO/JnmW5v5H0/UH9WRU528pHxnj9pTT7RpuM7b2f7&#xA;YnlkcWU2asHr5jzef7T0MYDjgK72RcopYkmhdZYZBWORTUEZ1OPJGcRKJsF004GJoiioyDJsULKu&#xA;KoOZeuKpfcJ1xVfbriqYQriqMiXFVaSe2tbaW7upBFa2685pD2A8Pc9snCBkREcy15csccTKRoBg&#xA;th5jk17XLnW7wenofl+M3FvabUMpqIeXi7EVHgRm7nphixjHH68m1/f8Hl4a458ss0/7rCLA8+nx&#xA;ef3t5Pe3k93O3Ka4dpJD/lManN1CAjERHIPG5ssskzOXORtQyTWmmleV/MGqgNYWMs0Z6S0CR/8A&#xA;BvxX8coy6rHj+qQDm6bs7Pn+iBI7+nzOyfx/lP5rdat9XjP8rS7/APCqwzDPa2Hz+Ts4+zWqI/hH&#xA;xQt7+Wnm+1UsLQXCDqYXVj/wJKsfuyyHaeGXWve05fZ/Vw34eL3H8FjVxbXFtK0NxE8My/ajkUqw&#xA;+YNDmdGQkLBsOonjlA1IEHzZ3rWuax+gdB1iyvJ4PUgNrchJGAMtuePJlBoS+5zU4MEPEnCQB3se&#xA;4u/7Q1mYYMObHOUbjwnfrHv96Ag/MTzTGAstwlyg/YniRvxAU/jl0uzcJ5CvcXCx+0OrjsZCQ8wG&#xA;Y+UfzIGp3f1LVUitp5KC3lj5KjN/IQxahPbffNZrOzPDjxQsjq9H2T7R+PPw8wEZHkRyPluznNS9&#xA;U7FXYq7FWMav50it53trSFZ+PwvKx+GvQgAdR71znNb29GEjCA4q69Hb6bssyAlI0kLeadUCenbe&#xA;laRdkgjVR+Nc0p7YzVUOGA7ogB2I7Px3crkfMta1e3LeU7f6xO0kt5dM/wAbEkxxjiQK9g1Me0NR&#xA;M6GPFImWSZO/cNvvY6fFEak8IoRj9pYzb21xcyCK3ieWQ9ERSx+4ZzmLFPIeGAMj5O0nOMRcjQTu&#xA;28jeYplDGBYQenqOoP3Dkc3GL2d1cxfCI+8uBPtTBHrfuU7TyBqhikuLSK3PqyOJDEwUuyOULE0W&#xA;u698tl7PauQsVKv6X60HtLDGVGxy6d+6W6h5fv7CYT3lkYpFBRbgqDRSQSokFRQkdK5q9TotRgFZ&#xA;IyiPs/U5WLUYshuJBP2obMJyERp19LY30F3F9uFw1PEdx9I2zI0uoOHLHIOcS1ZsQyQMT1ZXNrB0&#xA;LXC61l0TU1FyqdePqbsyeBDdvDOqlrzo9TY30+X1fPu+PTudSNMNTho7ZYen5d7KH9NkWSJhJDIA&#xA;8cg3DKdwc7CExKIlE2C6CUTE0eYQ0gyTFByriqAuFxVdbjpiqPiGKoyJSSAOp2GKvPfzR8xGW7XQ&#xA;rZ/9HtCHuyP25iK0+SA/f8s6HsrTcMfEPM8vc8j29reKfhR+mPP3/sSnRvNmk2Xl99Gu9HN7FNL6&#xA;1w/1l4ebCnHZErRQBty675k5tLOWTjjPhoVytwMGtxRwnFPHxAmz6iL+QVLbV/KNzPHb2/lFpZ5W&#xA;Cxxrf3BLE9ABxwSxZoizl2/qhEJaSRAGCyf6cnoek+QfLcIhu59KSG7+0bVp3uY0J7HlRWp8s02b&#xA;tDKbiJWO+qej03YemjUzjqXdxGQHz5pl5w+HyfrgX4QunXXEDalIGzEwf3kfePvd0RQYVJp2iRzu&#xA;P+VV27wJK0IK21gZTxkVQ4Xj6fAo3Ovq+3WtJfmsv86XzK8Ia0S309tQ0W5TyLH5YvFnhZ7tYLWL&#xA;45IZOcKtGFlIp7f63E7Gcc05CQlIkV3ooPQdY0HSdYtzBqFuswoQjkUdK91YbjK8OonjNxNOPqtF&#xA;izx4ckb+8e4sJ1XyZcaZ5S1WxWT6xaW8yX9jKftjbjKjDp8KCtR1rm1w60TzRlyJHCf0PM63siWL&#xA;R5IXxRiROPf3SB9webZvXh2iyhgCQGP2R3NPDAmnqPkDz0br09I1WT/SAONrcsf7zwRz/N4Hv8+u&#xA;h7Q0HD64cuoe57A7c46w5T6v4Zd/kfP7/fzn+aZ652KsQ80+ZyS9hYtQCqzzD8VX+Jzle2O1+eLG&#xA;fef0D9Lu+z9BynP4BiOcw7t2Kswl8qy6lHpUMzelY2tuGkK/baSU1ZR4UoN86mfY0tQMUZGscIb9&#xA;5MuY/a6Ia8YjMjecpfYGSWOm2NhCIbOFYU78Rufdj1P050Gm0mPBHhxxEQ6vLmnkNyNoLzVqkml+&#xA;XdQv4zSWCFjEetHb4UP/AARGOqy+HjlIdA36DAMueEDyJ+zqxH8pNU1N4dQ0rUmkM1s0dxEJSS/G&#xA;4Bduu9CaN/ss1/ZOWREoS5jf5u59ocGMGGTHVSsbf0dv2fB6A6qylWAZGFGUioI9wc28ogijyebB&#xA;rcMe1LyloojlubfTRcTj4vqwmeFW8QtKgfLNDq+w9OAZwxcUv5vEY/J2WDtDKSIynQ76BYe2reWk&#xA;Yq3l8qymjKbuYEEdjtnLHVaMGjp/+lkndjTZz/lf9iFms6/Y3+m29jBp/wBVW1YmFzM0pCtXkvxK&#xA;DQmnftkdb2jjzYo444+DgO3q4ufMbj9LPTaOeOZmZ8XFz2pOPImslw2jztWtZLMnsRuyfT1+/Nx7&#xA;Ndob+BI+cf0j9Pzdf2zpNvFHx/WyWQZ2TzyDlGKoGcdcVbgHTFUdEMVVrq+j03TbvUpKFbSJpFU9&#xA;C9KIv0ttluDFxzEe8tGpzDFjlM9A8HnmlnmknlYvLKxeRz1LMakn6c7KMQBQfOJSMiSeZWZJD1n8&#xA;r/KsdpYrrd0gN3dD/RAw/u4unIe7/q+Zzne1NWZS8Mchz9713YegEI+LIeqXLyH7fuZ6M1D0KE1r&#xA;TzqWi3+nK4ia9tprcSEVCmVCnKm1aVyeOXDIHuKC8K80eR/z10tok0fzJqmuOxPqmNzAiCgI+KSb&#xA;4ifYZucOo00vqjGP49zWYyZN5B8gfmN+kNK1nzH5mvJo7V/WudFvFZqSGJloHEsiNxL7NT7sx9Tq&#xA;cVGMIjfqP7Exier1/NW2NSRpIjRyKHRwVdWFQQdiCDhBrcIlEEUeReReefI76PI1/YqX0xz8S9TC&#xA;xOwP+Sex+g+/SaDX+IOGX1/e+d9udiHTnxMf90f9j+zu+Twu3/L3WbGSO/082seqmW9eV2lkEarP&#xA;6voKnCJW+H1viJ322NAAGOinH1Rri9X23XTzTPtfFkBhPiOOodBe3DxXcvLb+2zny/o/na11S3uN&#xA;T1FJ7ZIhHPEsrPyYRIodVMMdG9RGbr3y7DiyiQMjY/Z7nC1ep0soEY4GMrsGvM/0j0r5PoD8vvOz&#xA;6iF0rUWLXyKfQmO/qooqQx/mA79/n11XaOh4PXH6fueo9n+2jm/c5PrHI948/P7/AHo3zT5mKF7C&#xA;xf4+k8ynp4qp8fE5wXbHa1Xixnfqf0D9L6H2foL9c/gGHZyrvHYqmVgNEsil5rtykEB+KK3NS7/C&#xA;zAsq1IU+m1K/aOwzc9naGG2TMah0Hf8As+9xMxyzuGEWep7uX27/AAeh2GoWN/bieynSeD7PKM1A&#xA;IAPE+BFdwc7XHkjIXE2HmcuGeOVTFFEZNqeefmvqmqPb/oCytPUiuYPrV1csQAscMgY0JKhaFBUn&#xA;xpmn7VyzI8OI5iyfc9J2BgxiXjSlRieEDzIY15S8x67D5l/Sj2kc9vqD2un3bRMG4EqscRHFmofg&#xA;rv1zC0mpyDLx1YlUT9wdp2hosMsHhiREoCUxfXqfvey50rw7RxVhXn7QEaL9L260dSFu1HcHZX/g&#xA;c5H2k7NFePAb/wAX63f9j6w34Uvh+pguca9Cq2lzLa3UVzEaSQurofdTXLMOU45icecTbDJATiYn&#xA;kXq0kkc8cdzF/dXCLKnycVz1jDlGSAmOUhbwuSBhIxPMIOUZYwQM4xV0GKo6LtiqQ/mVdm38prAp&#xA;3vLlEYeKRgv/AMSAzadkwvLfcHR9v5eHAI/zpfteTZ0rxiM0fT21HVbSxXY3MyRE+AZgCfoG+VZs&#xA;nBAy7g3afF4mSMP5xp7dqHmzynoupWuiXuowWV5MkYs7SRuJKMxjjpXbdkIG+ciMOSYMwCR1fRxU&#xA;QAFLzV+YPlHyoYU1zUFt57jeG3VXllZa8eXCMM3Gvc/Rhw6bJl+kJMgGQW88VxCk0RPBwCAylGHs&#xA;ysAysO4IqO+UkUlVwK4Yq3irx7WPzE80fpYC01BYLdjIHtFtSZAyTyRIkPOOT1SyRhixYAsdv8nY&#xA;R0kjHiEbHfbjT1eOM+An1HoraL5p8+tKF8yJ/olxc29olq9pI0cqXF7HaSiR/QgEZRZeQPIgnY5T&#xA;GPUbEb7HytunASBBFgqHnjyVJok31y0BfTJWoO5iY/ssfD+U/R895oNcMo4ZfX9751232KdNLjhv&#xA;iP8AsfL9R/BjNnZ3V7dR2trGZZ5TxjjXqTmfOYiLOwDo8OGeWYhAXIs8t7S28tWjWlq4l1eZeN9e&#xA;L0jH++oj+s/5jzT2l9ojM+FiNd/l+37ve+xey/szHTR8TJvM/j5fel2cI9w7FU40vTbKG3/SusyC&#xA;301GATmaeq3YD2zddm9nCQ8XLtj/AN1+xwNRnmZeHiF5PuUrHzroNr5uv7y7SUxXNvD9SkaN2eFF&#xA;TlIgQiqKxP7Pw1XN5j1mOOYk3RArbkyy9mZp6aMY1cZHi3G5vY31+O+6bfl/q2nXc+qPbSrFBc3H&#xA;qWdizMGRSXrRCTGObKzUT3rmRoMsZGVHYnYfjb5OF2vp5wEBIWYx3l38uvPbYbs0zZujUrmIPG5V&#xA;QZSjKpIFd+2/vkZCwzhKiO60t0O3lWO5W5T4hLEQGA2K20JJH/PTkfnlOCJo33j7h+lydVMEjh7j&#xA;/upfoQnmHzrpWhajZ2F3HM8t4RxaNQyqC3GpqQTv2Fcr1GthikIm/U3aPszJqISnEio96fHMx1ql&#xA;cW8dzBLbSisc6NG49mFMrzYhkgYHlIUzxzMJCQ5h4zcQPb3EsEmzxOyP81NDnk2XGYSMTzBr5Pdw&#xA;kJRBHVTyDJ6N5WuDP5ZtqmrW7yQk+1eQ+4Nnovs9l49KB/NJH6f0vI9rY+HOfOiipc3brUFMMVah&#xA;6YqjYsVed/8AOQl3q9t5O0ttJEhvGvlX91H6h9NmVZCf3c1KKxNeBp4Hpmx0BmOIw57ff8XT9rRx&#xA;y4Bk+n1fdt1H3vFv8T+aPqqW0mnXK3Qgile4W3k5FisJb4Qksali8g41JHHt22/5jJVUbodPd7x3&#xA;vP8A5TDxWJR4bO1j+l5g92/myb8rta8xyfmN5Zsri3uRb/Wrg3dxJbsPUjMd2IuVIgsYRo4t6ivI&#xA;dsxdZlyHHRBrrt7/AC93zc7s7T4Rm4gRe1C+RqN9d+cvkzn/AJyP8j6deabF5te+W1u7FEs3gkIp&#xA;PGXZlWId5VLs1O4r0plPZWoIPh1YO70uSPV5D5XuvzE82+bNNfSpDf65pdsEtLicRMIYIK8XdpQV&#xA;qpk2Zvi5UpvTNpmGLFA8W0SWAsl9R/ll5Qv/ACr5XTTtRu/rupTTy3V7PyZlMszVPEtRjsBUnqan&#xA;Oc1ecZJ2BQ5N0RQZZmMybGKuxV4Vd6bot491Fc3ENreQGTkzPGsisLm+dkZJLhaFuC9Ur028Ydqd&#xA;mx1UBY3j9PPqIuPPR6bLMSz4xk4boEkc/cj7K30+3TSrKH6q8y6hZcDBcLNNI8epWpkYosx6JGW+&#xA;FacQTSm4xeyNPnwgwlAQhwk7En1V597LDpcOEGOIcMSbrfr77exXFvBcQPBOgkhkBWSNhUEHscz4&#xA;yMTY5s8mOM4mMhYLyXz7YroPlXXrHyf67eYbmGRbe7ik4TQt1jiikBSlG+0a/PNb2r7R8WSOKxQP&#xA;qPTz+P3J7H9mcenjLJEHilyvn5D3fe8vuH/NRdHn0mGzlKta6iHv2nL3JuWMptPq83qq6IOUXEyV&#xA;bqrbiucyPypmJk9Y7VtW3FYrnz5PTHxuHhA6S999K39yZy69+aaXzgaLC1mdREcZQAkWHqcTIxMy&#xA;ksYjzFF67HwygYNLw/Ub4f8AZfLvbDkz39O3F9nzZF+XEP5k6lr2m/4q062stClhk9aZCA8t0JJe&#xA;McdZKhfTRDTiTuffjt9F2NgzXOPEYA/ZQ8u/q67VdpzxERlwiUvv3/R0er+btPung0+4s7b6yun3&#xA;Mcr2aVHNFYbAc0T4act1O4FM3OqxGomIsRI2/GzX2dmiDOMjw8cSOLuPyvfl0Yn5zbUPMyQ3Vlpl&#xA;zDaafE73bTqEklSRY39JUUuxqp267+FK5gaziz0YxIEed9eWzt+zRDSkxnOJlM7VyBFi79/2d6Ov&#xA;Lny/qV9o0Xlu24ahbXCs8sUDQejAA6ukj+mwHIqV6EVB3GWzljnKAxD1A91UPk0Y4ZsUMhzn0Sj1&#xA;ldnaiBfxegZt3nHHFWsVeLfmp5g1H/FcUETmH9FhXtyvUSMefOvjTjnM9qaiXjADbhe57A0cPy5J&#xA;38Tn7uVfezRdZ/MDTLYSajpdvqNvDE0s93bzLC1FFasknHeg34rm0GbUQFyiJADmDTojptFllUJy&#xA;hImgCL+0fpKlq3mDzbB5Z13X7HQ3GqRWAl0u0Z0uFlMSu60SF/UZv3hPAKC1KVrmRp5zmTKUeGwO&#xA;oP45uFrMWPGBCExOib2I7u8eXe8S8xfmFrGn+YLyEW66/BPdvHZ30avZPOwi9WVUi9OQO/KoFOIr&#xA;8JNQTnIa3s3HkzTlxcBsk9f4qvmKvn173b6bWThjiK4htXTpy81H/lZOpcpS2hNDFE12Ky3HxlbU&#xA;JxPpxxSsGkZ/snoBy3GYP8lQ2/eWTw8h/OvqSOX7NnJ/PS/m9/Xu+DKfIP5t+YTFb2DeWnlttT1K&#xA;1jikWb0jbRz2cUkzStIgSRldmEaqQX4sKAr8XYdiaaOHCYxPF6pX933AF0HaWY5MlkV6R+v73scu&#xA;bd16Bm74qthxVHRYqxv80oGfy3ZzjpDdcW/2aE1/4XNv2PL94R5PP+0ULxRPdL9DyzOieQTfyler&#xA;ZeZtNuWNEWdFdvBXPBj9zZjauHFikPJy9Bl4M8Jf0mY/nV+WWu+d30VNLmtoY7FrkXJuWkWgnEXF&#xA;1CK3Lj6R6+OaDQauOHi4r3p9BnG3P+Rmj2fle0sfL92+meYrB/rEGvoKTyTFaMshU19J9vgB299+&#xA;SO0ZGZMxcD/D+Oq8Gz0jTBqI061GpGI6iIk+uGDl6Rl4jmY+QDceXSozAnVmuTMOvNU06ylt4ru5&#xA;jgku39O2R2ALv4D6SB8yB1IxjAm6HJbRYyKuxVRlsbKVy8tvHI56syKx29yMNlXRWNlE4eK3jjcd&#xA;GVFU7+4GNlUg8z+Zhaq9lZtW5IpLIP8AdYPYf5X6s53tftbwwceM+vqe79v3O20Gg4/XP6fv/Ywc&#xA;kk1PXOPegdiqY2VlaRWj6rqrmHTYTQAfbmftHGP8/wCm+7E7Enq5gkej7/2d5+AdJ2z2zj0eMykd&#xA;/wAfb/admJ695kvdV1BLn/eeK3oLKCM0WFV6caU+Lbc56/pNFDBj4IjZ8P7S7Vy6rN4kjVfT5ft8&#xA;3pHkXzwmsRrYXxC6nGuzdBMo/aHgw7j6R7abX6HwjxR+j7nsuw+2xqB4eT+9H+y/b3swzWPRrEgh&#xA;jJMcaoTsSoA6kt29yTgEQGRkTzK/CxccVaxV5t588mQX2uJeeo9bmRDdGO2uJjFCsXDkWiJXrF0o&#xA;Dvml12jE8nF389iaFeXueo7J7TOPCY19I29URZvz9/2O0zS73QbbzVZ+he3VrLFDFp/GOSVpHkhk&#xA;DsqgHYMw5eHfHFiliGWNSIoV16FGfUQ1EsErhGQJMtwKoiv2M08v3P1jSbR2hmtykao8VxG0TqUU&#xA;A1Vqbbdc2mCdwBojbrs6HWY+HLIWJb9DYeSa1FZ6jrTalLEsk8c00trKRVo/VJB4ntVds8w1OplP&#xA;JMg7TkT9th7DDhEYRBG8R+hbmI3vQvJsRj8tBj/u+4eQfIAJ/wAa56B7NY+HS3/OkT9w/Q8r2zK8&#xA;1dwH60fLnQOpQM3fFVkBxVHRHFVDzLpx1LyxqNoo5SiP14R35wnnQf6wFMy9Fl4MsT+N3A7TweLg&#xA;lHrV/Ld4hnXPn7sCvePJfmGPXNChnLVvIAIbxe/NRs/ycb5yeu05xZCOh5PfdmawZ8QP8Q2P480/&#xA;GYbsW8VedfnV5nTy3pWlao1oHkivohBfGGG49Jt3ZFSR42BkSNviHh2biwz9Bh8SRjfTlyYTNMv8&#xA;n6j+kvLen6gsdxHFeRLcQC7dJJjFN+8jZ2jLLurDbtmLnjwzI227mQ5JzlSXYqx3zN5mWyVrS0YN&#xA;dsKO43EYP/G2aHtbtYYh4eP6/u/a7TQaDxPVL6fvYKzMzFmJLE1JO5JOcYSSbL0IFNYpTzy35dk1&#xA;GUTzgrZIfiPQuR+yv8Tm47K7LOeXFL+7H2+X63X67WjEKH1/clH5m6frUN/HNMQ2kgBLIRjjHFtu&#xA;jL2bbr3/AAHrPZBxDHwQFSH4+T437U49QcvHM8WM/T5e/wA/Pr9ghGbh5VfDNLBKk0LmOWMhkdTQ&#xA;gjcEEYJRBFFlCZiRKJoh6/5I87xa1ELO8Ij1SMfITAftL/leI+ke3Na7QnEeKP0fc+i9idtjUjgn&#xA;tlH+y8x594/Alua16F2KsJ0vzR531eyjv7HSrM201WjD3BDheRHxCntmsxanPkjxRjGj5u91Gh0m&#xA;GZhOc+If0UU+qfmIiM7aTY8VBJ/0hug38MmcupH8Mfm1DBoia8Sf+lTfy3rB1nQ7TUzF6LXKFmjB&#xA;5AEMVNDt4Zk6bN4mMS5W4Ot03gZpY7vhTE5e4qQecdYXTtIkjRqXV2DFEO4U/bb7vxzSdu64YMBi&#xA;PrnsP0l2XZel8TKCfpjv+p5fnnT1zgCTQbk9Bir1S0tPqWmWdkdmgiHqD/Lb4n/E56p2fp/BwQh1&#xA;A+3r9rw+ry+JllLvKnKczHHQMxxVTgPTFUdCcVR1tIUkVx2xV49558vHRddlSNf9Cuqz2jAbcGNS&#xA;n+wO3ypnWaHUeLjB/iHN4HtTR+BmIH0ncfjyY9ma65mf5Yak1jqGqzBDL6enzTrCDQu0JVgo67nf&#xA;NZ2nj44xH9ID5u77Dy8GSZ5+gn5U9T0LXtL1yxW802YSxmgkjOzxsf2XXsf8xmgz6eeKXDIPW6fU&#xA;wzR4oFMhlDe8G/5yi8zWh0/TfLK0a59UahMQd0AV4ox78g7k+FF8c3XZGI2Z/BqyHoz/APJLzTaa&#xA;/wDl5pYiotxpUSaddRA7hrdFRG/2cfFvnUdswu0MJhlPnv8ANnA2Ge5hMmO6z5x8vQLJaLrNtbXY&#xA;JVmJ9QoRsdl6N88sy9n6nJj/AHY4SetNEe0NNjn65A10thJ1byIWLSeYWdm3J+qXFanuSRmk/wBA&#xA;+oJsy+7/AIpz/wDRdphy/T/xKOvrLSk0q0v7G5knS8LGL1EMdUWoLcWo1Centmi7Y7IjoqiZXO/J&#xA;3PZvaJ1Q4gPSreXfL0upzepIClkh+N+7H+Vf45R2X2ZLUSs7Yx9vkG7W60YhQ+p6FFFHFGsUShI0&#xA;FFUbAAZ3MICIAAoB5mUjI2ealfWVrfWktpdRiWCZeMiHuP4Hwy3HMwkJDmGnPhhlgYTFxLxjzd5R&#xA;u9Au6isunyn/AEe4/Hg9OjD8c6jR6yOaPdIcw+Z9rdkz0k+/GeR/QfP70Voflvy9e+Xn1S9uriB4&#xA;ZvQn9NVdVJoVbjTlQggfPNf2t2x+TNyHo273b9gezmPtDHtIjICdtvxyXx6D5WjnSa18xyW8kZDR&#xA;s1rIWDDcEMpFM049tNLIVL/ff8SXeH/ge6iMhKEyK8h/xQej6N5j0u4jhtG1OK6vacS4Qw+ofEK3&#xA;f5HMGPaemyzrHIb8h/bT0kez9TixjxRZHM1+izSdZltLzbyQ9/pOhaZd20LXh1ZWRoOVOJtyzKEJ&#xA;2BaJZD7tTNLojLHjiQL4/wBH7Len7UEM2acZHh8Pr/Wrn8eH4Mjtm1SwW9intZ7t7uP65LJGY+Ec&#xA;sgKvEDI8eycBxpXbM2JnCwQTe/T5busmMeThIlGPCeHe9wOR2B53u1+XP/KFaX/qP/ydbHs7+4j+&#xA;Oq9tf43P3j7gmms61YaRbGe7fcg+lCPtufBR/HDrNdj08eKZ9w6lxNLpJ5pVEfHuYF5+maTXqHb0&#xA;4Y14+FQWp/w2cT7R5OLU+6I/W9H2RGsPxLHM0LtGQeS9I+vaqLiVf9FsqSyHsWH2F+/fN52DofHz&#xA;iR+iG59/QOt7U1Ph4qH1S2/WzqdyzFj1JrnojyKDlPXFUDOcVUbdsVR8JxVGRnFUPrvl+z8w6Z9Q&#xA;uW9KVG52tyByMb99tqg9xXMnS6qWGVj5OFrtFHUQ4Tseh7nm+p/ln5itXk+qelqKRGj/AFdx6i7V&#xA;+KNqGvsK5v8AF2ljlzuPveUz9i5oXw1Ou7n8l35fWlzB5rNjdwvBJcW08LRSqUahQncEA/s4O0Jg&#xA;4eIG6IT2RCUdRwyBBMSN/cwvTNW1LS7pbrT7h7adf20NKjwYdGHsc2uXFHIKkLDi4s08Z4omi9C0&#xA;b867yNVj1ixW4psbi3Ppv8yhqpPyIzTZuxIneBryLu8HbshtkjfmHnnmzyz5c82eYb3XL7zRc28t&#xA;3IWSBtMD+nGNo4+S3RB4IAtdq5k4cWXFEREQa/pf8dcv+V8B3PEPh+1M/wAubrSvy81C9uLDU7nW&#xA;be9iEctm9qlpGZEascnqevO1VBYfY/ayGp0U84AkBGvO/wBA+9rPbWKP0gn7Ey8xfmh5l1mN7dHW&#xA;ws32aK3qGYeDyH4j9FBlum7LxY9/ql5/qdXqe1suUV9MfL9bEM2TrETptjNqGoW1jB/fXMqRJ4Au&#xA;QKn2GQyZBCJkeQDZixmchEcyXuQ0AahqKWsVY9I0uNLRG7t6QoVX3rsTnkGq089fq5Sl/dxNX3nr&#xA;XxfWNPkjpNPGMfqI+zoy2GGKCJIYUCRIKKo6AZv8eOMIiMRQDq5zMjZ5r8mxdiqhf2Fpf2klpdxi&#xA;WCUcXQ/rHgR2OTx5JQkJR5hpz4IZYGExcSwHT/K9zo2qXmiSky6XrULJaXJHSeIF4w/YMo5fPMzt&#xA;QR1ulI5SH6evzp0PYmDJ2ZrgOeLJyPmN6Pw4vewySN45GjccXQlWU9iNiM8blEg0eb7OCCLDQNNx&#xA;gSyXSPP2tWCrFMReQLsFlqHA8A43++ubrSdu58QqXrj58/n+u3VansjFk3HpPly+TDYfLWmOf3mo&#xA;SQ77Vtw4A+YkH6srhqcJ5mQ+F/pd3LW5BygD/nfsVJfK2kItV1V5D4La0/4lKMnLPgHKRP8Am/tY&#xA;x12U84Af53/HWWWPnK60vRLbSdMjCLbpx+tS0Z2JJYkIPhXc965ce3pwxiGIVXU7n5cvvdPl7Mjl&#xA;ynJkP1dBy/HySVprvUb5DcSvLPO6p6jVY/EaCn39M05nPNkHESZSLniMcUPSKAT3zXDc3vmq8S2i&#xA;eZwUUJGC5HGNR298ye2ITy6yYgDI7ct+gdf2fKOPTxMjXP719h5E1ed0W6aOyEn2VkYGRgNzxRf4&#xA;kZZp/Z7PMjjqF9/P5Bhl7WxRB4bl7uXzZpYadbaVYJY2x5BfimlpQu56sf4Z2ug0UNNjEI/E95eb&#xA;1WplmnxH+xqQ5muOhJjiqAuG64qoW79MVTCFumKo2JsVRMZxVLPM3leLXI0uLe4bT9atwRa6hESj&#xA;U/kcrQ8f1frzdJrDi2I4oHmHB1miGXeJ4ZjkWBTedvP3le+S11uFLv0j+5e5QElehaKdOJNR3Nff&#xA;N0NFp88bxmvd+kOilrtTp5VkHFXK/wBBeeuVLEqOKkmi9aDwrm5DpSsl9X0n9LiZeJ9MPXjyptWm&#xA;9K4DdbKKvfkxW288ekoOpQFjJ9ZMYtI3kKraSyROZATtyMY407mh8c18ddX1Dv5f0SQ7Gegv6D3c&#xA;/wCkAdvnumugeY4dae79CFoorYxBXdlJf1Yll3VSeJXlQ/r8MjT6kZbocq+0W4+p0pxVZ3N/YaTf&#xA;MlxXYq9O/KjyVqaapHr1/AYLWFG+ph/hd3cceXAj7IVjue9KZou1tbHg8OJsnm9B2PoZifiSFAcn&#xA;rccaRoERQqjoBnNRiIihyenJJNldkkOxV2KuxVbJFHIAJFDBWDAEVoymqn6CMIJHJjKIlzea+d/K&#xA;97b6hcalbxc7KY+o5TcoxHxch4Ft65xHbXZk4ZJZYi4Hf3d9vW9la+EoDHI+sfaxHOfdyxnzhr2r&#xA;6RdaXLYwNdwNI5v7SNQ0skXwJWOv7SGTl16A5n6LTwyCQkaPQ9L8/fTh6rNPGYmIsdQkFl+YvmG3&#xA;00G90o316sd1NO8TmGP9zJdcEiHpvUcbVBUmtZE2PLMyfZuKU/TLhj6R38+Hnv8A0j/pT3OLDXZB&#xA;HeNnf7OLy8vtCq/5ga815GItMoFlSG6tlZpqBZ7mKRonEcZPP0Y+Jbb4hsOpiOzsfDvLpYPLpEi9&#xA;z3m/cyOtne0ff16yG23kPmmnlvzpqWs6hBayaStnG8LzSzNcMxHBuNI1MKcxyNKkr0O22+PqtDDF&#xA;EkT4t65ffv8ArbtPq5ZJAcNbd/7GZWdx9Wu4Ljjz9GRZOBNK8GBpX6MwsOTgmJc6IPycvJDiiY94&#xA;plVtrvm/X7h4NOC2sTH988K8FWv7TyHk1fka5vcet1mrkY4qiDzrb5nn8nTz0ml00eLJ6j0vf5Bl&#xA;mk6Pb6VC/GRri9mp9ZvJDV2PgCakLnTaHQRwC74pnnI8y6LV6yWY8uGA5BXc5nuGhpWxVBzNiqX3&#xA;DYqh7d+mKpjC+Ko2JsVRcbYqiEbFWryzsdQtja39vHdW7dY5VDAHxHgfcZPHllA3E0WvJijMVIWG&#xA;B63+TVjOzS6JeG2Y7i2uavGPZZB8QHzDZusHbchtkF+YdHqOwonfGa8j+P1sM1D8tPOdkTXT2uE7&#xA;SW7LKD/sQef4ZtMfaeCX8Ve91OTsvUQ/hv3bpBL5J1HaOXQJvg5URrRtuY+LYp+0OuW+JgPWH2NX&#xA;hagHlP7UXYeRvMTtSz0S4TkApYQNGpC7KORCjbE6rBD+KI+SRpM8/wCGR+bKNJ/J3zPdMrXzxafE&#xA;ftcmEslPZUPH72GYebtnFH6bl9jm4exM0vqqI+f4+b0Ly5+WflrRXScxm+vU3FxcUIU+KR/ZHsdz&#xA;75ptT2nly7fTHyd3peysWLf6pd5/Uyyua52TdcVdirsVdirsVdXFWq4qxzWPImi6gzSxKbO4bcvE&#xA;BwJ906fdTNNq+w8GXceiXly+X9jtNN2tlx7H1Dz/AFsSv/y7163Ym3Ed3H2KMFanur0/AnOez+z+&#xA;oh9NTHl+13WHtnDL6rifx3JNN5e12E0k0+4HuI2I+8AjNdPQZ484S+Rc2Oswy5Tj81iaJrLnilhc&#xA;MfARP/TIjRZjyhL/AEpZHVYhzlH5hMrPyP5kuSK2voIf25mCU+jdvwzMw9iamf8ADw+/b9ri5O1c&#xA;EP4r9zJNM/LqwgKyalObpxuYY6pH8i32j+GbzS+zkI75TxeQ2H6/udTqO3Jy2xjh8+v4+bKI44Le&#xA;FYLeNYYV+zGgCj8M6LHijCPDEUHSzySmbkbKm5ybBQkbFULK2KoKZsVS64friqFtpOmKplA+Ko+J&#xA;8VRcbYqiUbFVZWxVVU4qqKx7YqvDHxxVdyOKuxVuuKt4q7FXYq6uKurirsVdirsVarirsVa5HFVp&#xA;Y+OKrCcVWMcVUmbFVB2xVDyNiqElfFUDO+KpbcydcVQdtL0xVM7eTpiqYwviqMifFUUjYqro2Kqy&#xA;tiqorYqvBxVcDiq4HFW64q3irq4q3XFXYq7FXVxVquKuxVquKtE4q0TiqwnFVjHFVNmxVSdsVUHb&#xA;FULK+KoOZ8VQE8nXFUruZeuKoC1m6Yqm1vL0xVMYJOmKo6KTFUXG+KolHxVWVsVVVbFVQNiq8HFV&#xA;wOKtg4q3XFW64q6uKurirq4q6uKurirVcVaJxVonFVpOKrC2KrGbFVJmxVQd8VQ8j4qhZZMVQM8m&#xA;KpdcS9cVSq6m64qltpP03xVOLabpiqZwS9MVTCGXFUZFJiqKjfFVdHxVWV8VVFbFVQNiq4Niq4HF&#xA;V1cVdXFW64q6uKurirq4q6uKtVxVaTirRbFVhbFVjNiqkz4qpO+KqEj4qhZJMVQc0vXFUBPL1xVL&#xA;bmbriqUXc/XFU4t/+VebcP0j9Pp4qmMP+Cv2Prv08MVR0X+Ff2frf08cVRcf+Hv2frP08cVRSfoX&#xA;t6/4Yqrp+iu3q/hiqsv6P7ep+GKqi/Uu3P8ADFVQfVe3P8MVXj6v/lYq2PQ/ysVXD0v8rFW/3Xvi&#xA;rf7v3xV3we+Ku+D3xV3we+Ku+D3xV37v3xVr9174q0fS98VaPo/5WKrT9X/ysVWH6r35/hiqxvqf&#xA;fn+GKqbfo/v6n4Yqov8Aovv6v4YqoP8Aobv634YqhpP8P78vrH0ccVQkv+Fv2vrX0ccVQM3+C/2v&#xA;rv0cMVS64/5V9vz/AEh9HDFX/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:4906DD5CF3BDE611AA1899BB54670D6C</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:4906DD5CF3BDE611AA1899BB54670D6C</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:4606DD5CF3BDE611AA1899BB54670D6C</stRef:instanceID>
            <stRef:documentID>xmp.did:4606DD5CF3BDE611AA1899BB54670D6C</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F6A7655EAFBBE6118787C72D0A030DD7</stEvt:instanceID>
                  <stEvt:when>2016-12-06T17:57:35+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4606DD5CF3BDE611AA1899BB54670D6C</stEvt:instanceID>
                  <stEvt:when>2016-12-09T15:14:42+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4906DD5CF3BDE611AA1899BB54670D6C</stEvt:instanceID>
                  <stEvt:when>2016-12-09T15:35:17+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1500.000000</stDim:w>
            <stDim:h>1000.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=20 G=196 B=234</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>20</xmpG:red>
                           <xmpG:green>196</xmpG:green>
                           <xmpG:blue>234</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=19 G=183 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>19</xmpG:red>
                           <xmpG:green>183</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226 3</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=151 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>151</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=56 M=0 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>101</xmpG:red>
                           <xmpG:green>200</xmpG:green>
                           <xmpG:blue>208</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=51 M=43 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>131</xmpG:red>
                           <xmpG:green>139</xmpG:green>
                           <xmpG:blue>197</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=26 M=41 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>186</xmpG:red>
                           <xmpG:green>155</xmpG:green>
                           <xmpG:blue>201</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=244 G=163 B=16</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>244</xmpG:red>
                           <xmpG:green>163</xmpG:green>
                           <xmpG:blue>16</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=157 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>157</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30 4</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30 2</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1000 li
1500 1000 li
1500 0 li
cp
clp
1500 1000 mo
0 1000 li
0 0 li
1500 0 li
1500 1000 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
level3{
gsave
clp
[968.999 0 0 968.999 750 500 ]ct
/0 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 1 ]
/C1 [.4 .4 .4 ]
/N 4.97729 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[968.999 0 0 968.999 750 500 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8N#srr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2or
rr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2lprVc]nrVc]nrVc]nr;?Kjr;?Kjr;6Bgqtp9fqYL'b
qYBs_q>'g\q"XUXp\4CTp@\+Oo^qeIoCMPDnaZ/=nF,i6md9E.m-F!&l07EpkN:mfjQ#7ZiS`VMhVHuA
g=b-1f%&:!da?Cdc-4AQaN)9<_nj.&]t:kc\$`QJYcb(-WMcSfTq@mFR$Nu"OH#0SL4k,,I!KpXEGfQ*
~>
<~s8N#srr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2or
rr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2lprVc]nrVc]nrVc]nr;?Kjr;?Kjr;6Bgqtp9fqYL'b
qYBs_q>'g\q"XUXp\4CTp@\+Oo^qeIoCMPDnaZ/=nF,i6md9E.m-F!&l07EpkN:mfjQ#7ZiS`VMhVHuA
g=b-1f%&:!da?Cdc-4AQaN)9<_nj.&]t:kc\$`QJYcb(-WMcSfTq@mFR$Nu"OH#0SL4k,,I!KpXEGfQ*
~>
<~s8N#srr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2or
rr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2lprVc]nrVc]nrVc]nr;?Kjr;?Kjr;6Bgqtp9fqYL'b
qYBs_q>'g\q"XUXp\4CTp@\+Oo^qeIoCMPDnaZ/=nF,i6md9E.m-F!&l07EpkN:mfjQ#7ZiS`VMhVHuA
g=b-1f%&:!da?Cdc-4AQaN)9<_nj.&]t:kc\$`QJYcb(-WMcSfTq@mFR$Nu"OH#0SL4k,,I!KpXEGfQ*
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
527.068 641.495 mo
526.421 641.98 525.708 642.501 524.955 643.042 cv
522.293 644.955 519.036 647.176 515.583 649.445 cv
512.379 651.529 li
507.051 654.959 501.582 658.309 497.391 660.656 cv
484.39 667.529 470.388 672.218 454.834 677.097 cv
415.894 686.759 378.008 683.693 342.206 667.976 cv
340.722 667.348 li
310.339 655.005 286.521 637.077 267.908 612.542 cv
267.269 613.026 li
276.014 716.089 li
176.249 683.643 li
175.99 683.316 175.743 682.985 175.485 682.658 cv
206.458 723.484 247.107 754.39 296.314 774.523 cv
332.964 790.493 371.785 798.543 411.154 798.542 cv
435.682 798.541 460.427 795.416 484.979 789.136 cv
486.454 788.758 li
487.906 788.304 li
508.279 781.938 530.042 774.722 552.425 762.783 cv
553.295 762.309 li
561.799 757.586 572.506 750.945 582.12 744.522 cv
586.477 741.575 li
590.212 739.015 593.688 736.542 596.672 734.305 cv
598.801 728.314 li
631.802 635.453 li
527.068 641.495 li
cp
.160784 .592157 .886275 rgb
f
190.821 693.64 mo
219.593 726.87 255.639 752.479 298.208 769.896 cv
298.311 769.939 li
334.256 785.602 372.222 793.543 411.154 793.542 cv
435.326 793.541 459.748 790.429 483.74 784.292 cv
485.085 783.947 li
486.414 783.531 li
506.558 777.237 528.065 770.109 550.072 758.371 cv
550.901 757.919 li
558.924 753.463 569.569 746.895 579.343 740.365 cv
583.675 737.434 li
586.931 735.202 589.888 733.106 592.469 731.2 cv
624.568 640.879 li
528.842 646.401 li
528.528 646.63 528.204 646.864 527.873 647.103 cv
525.235 648.999 521.935 651.254 518.33 653.623 cv
515.106 655.721 li
509.362 659.418 503.946 662.715 499.835 665.019 cv
499.728 665.076 li
486.075 672.295 471.409 677.138 456.331 681.867 cv
456.038 681.949 li
440.922 685.7 425.754 687.602 410.956 687.602 cv
386.748 687.602 362.941 682.539 340.196 672.554 cv
338.774 671.952 li
312.561 661.304 291.06 646.559 273.481 627.107 cv
281.633 723.174 li
190.821 693.64 li
cp
411.154 803.542 mo
411.154 803.542 li
370.859 803.543 331.565 795.329 294.369 779.13 cv
244.35 758.653 203.009 727.211 171.502 685.681 cv
176.957 681.466 li
177.795 678.888 li
270.395 709.004 li
262.054 610.705 li
268.871 605.538 li
271.891 609.52 li
289.947 633.32 313.078 650.721 342.604 662.715 cv
344.154 663.371 li
365.686 672.823 388.14 677.602 410.956 677.602 cv
424.896 677.602 439.204 675.812 453.484 672.28 cv
468.03 667.716 482.152 663.049 495.001 656.265 cv
498.878 654.09 504.221 650.834 509.673 647.325 cv
512.856 645.254 li
516.328 642.973 519.509 640.799 522.037 638.982 cv
522.76 638.462 523.445 637.963 524.066 637.497 cv
525.273 636.59 li
639.037 630.027 li
600.878 737.4 li
599.671 738.305 li
596.708 740.527 593.219 743.016 589.303 745.699 cv
584.922 748.664 li
574.761 755.451 564.127 762.013 555.723 766.68 cv
554.819 767.173 li
532.007 779.341 509.993 786.641 489.397 793.076 cv
487.695 793.602 li
486.221 793.979 li
461.417 800.324 436.162 803.541 411.154 803.542 cv
cp
1 1 1 rgb
f
229.917 480.875 mo
230.79 466.177 234.959 450.102 243.349 429.038 cv
257.453 395.795 280.597 368.75 314.078 346.373 cv
314.003 346.421 313.927 346.468 313.853 346.517 cv
208.947 345.727 li
250.175 249.988 li
249.971 249.682 li
197.409 284.723 159.143 330.077 136.235 384.481 cv
135.838 385.448 li
127.299 406.797 115.742 439.466 113.977 476.532 cv
113.911 477.912 li
113.911 479.292 li
113.911 483.253 113.843 487.336 113.771 491.658 cv
113.528 506.19 113.254 522.663 115.605 540.295 cv
115.647 540.607 li
122.351 588.877 138.749 631.18 165.612 669.396 cv
168.638 673.622 li
170.852 676.659 173.137 679.671 175.485 682.658 cv
175.743 682.985 175.99 683.316 176.249 683.643 cv
276.014 716.089 li
267.269 613.026 li
267.144 611.557 li
264.205 607.851 261.468 604.095 258.887 600.29 cv
256.758 597.111 li
242.829 575.593 234.406 552.226 230.579 524.828 cv
229.393 515.816 229.573 505.02 229.764 493.591 cv
229.833 489.479 229.903 485.242 229.917 480.875 cv
cp
.160784 .670588 .886275 rgb
f
179.254 679.362 mo
270.395 709.004 li
262.288 613.471 li
259.717 610.172 257.185 606.688 254.749 603.097 cv
252.604 599.894 li
238.357 577.886 229.547 553.579 225.627 525.52 cv
224.387 516.101 224.571 505.127 224.765 493.508 cv
224.833 489.37 224.903 485.166 224.917 480.859 cv
224.926 480.579 li
225.833 465.299 230.083 448.833 238.704 427.188 cv
238.746 427.085 li
251.36 397.355 270.967 372.475 298.459 351.401 cv
201.375 350.67 li
238.879 263.576 li
194.239 296.579 161.301 337.836 140.844 386.422 cv
140.463 387.348 li
132.075 408.319 120.701 440.456 118.971 476.77 cv
118.911 478.031 li
118.911 479.292 li
118.911 483.292 118.843 487.392 118.771 491.733 cv
118.531 506.098 118.259 522.368 120.562 539.634 cv
120.603 539.941 li
127.208 587.506 143.271 628.918 169.703 666.521 cv
172.703 670.711 li
174.761 673.533 176.972 676.453 179.254 679.362 cv
cp
281.633 723.174 mo
173.269 687.932 li
172.332 686.75 li
172.176 686.554 172.024 686.356 171.872 686.158 cv
171.555 685.749 li
169.14 682.677 166.799 679.588 164.598 676.567 cv
161.547 672.308 li
134.153 633.337 117.528 590.494 110.695 541.295 cv
110.65 540.961 li
108.248 522.949 108.526 506.28 108.772 491.575 cv
108.843 487.269 108.911 483.209 108.911 479.292 cv
108.917 477.673 li
108.982 476.293 li
110.784 438.476 122.523 405.275 131.196 383.591 cv
131.61 382.582 li
154.922 327.216 193.805 281.116 247.197 245.521 cv
251.358 242.748 li
255.84 249.473 li
216.52 340.784 li
313.89 341.517 li
313.856 346.041 li
316.856 350.529 li
284.22 372.342 261.688 398.646 247.974 430.94 cv
239.805 451.456 235.775 466.916 234.917 481.033 cv
234.902 485.357 234.832 489.547 234.765 493.602 cv
234.576 504.913 234.398 515.529 235.536 524.176 cv
239.245 550.721 247.561 573.702 260.956 594.395 cv
263.042 597.508 li
265.618 601.306 268.322 604.995 271.062 608.449 cv
271.999 609.631 li
281.633 723.174 li
cp
1 1 1 rgb
f
630.255 295.254 mo
624.052 289.729 614.343 281.965 602.295 272.389 cv
598.051 269.015 593.663 265.527 591.891 264.051 cv
590.75 263.1 li
589.562 262.208 li
492.979 189.772 367.664 181.749 265.609 240.098 cv
261.115 242.725 li
257.526 244.86 253.965 247.071 250.439 249.373 cv
250.175 249.988 li
208.947 345.727 li
313.853 346.517 li
313.927 346.468 314.003 346.421 314.078 346.373 cv
317.939 343.86 321.865 341.512 325.849 339.331 cv
329.215 337.539 li
389.466 306.212 462.064 312.173 518.948 354.265 cv
521.701 356.521 525.491 359.533 530.11 363.205 cv
537.561 369.127 548.818 378.075 553.091 381.879 cv
553.094 381.876 li
552.881 381.659 552.667 381.44 552.453 381.222 cv
523.3 277.652 li
630.252 295.258 li
630.255 295.254 li
cp
.0745098 .717647 .901961 rgb
f
410.146 312.713 mo
450.088 312.713 488.739 325.692 521.922 350.246 cv
522.117 350.397 li
524.816 352.609 528.47 355.514 533.096 359.191 cv
533.222 359.291 li
536.218 361.673 539.828 364.542 543.361 367.377 cv
516.357 271.442 li
613.007 287.352 li
608.874 284.014 604.236 280.319 599.184 276.303 cv
598.991 276.149 li
594.807 272.823 590.479 269.383 588.69 267.892 cv
587.646 267.022 li
586.562 266.208 li
534.442 227.12 473.467 206.458 410.228 206.458 cv
360.699 206.458 311.549 219.592 268.091 244.438 cv
263.638 247.042 li
260.494 248.913 257.396 250.832 254.433 252.743 cv
216.52 340.784 li
312.397 341.505 li
316.045 339.168 319.744 336.973 323.449 334.945 cv
326.865 333.125 li
352.563 319.764 381.346 312.713 410.146 312.713 cv
cp
553.293 388.749 mo
549.766 385.614 li
545.596 381.9 534.405 373.005 527 367.119 cv
526.873 367.019 li
522.269 363.359 518.622 360.459 515.875 358.211 cv
484.449 334.987 447.892 322.713 410.146 322.713 cv
382.945 322.713 355.757 329.374 331.521 341.975 cv
328.199 343.744 li
324.394 345.828 320.543 348.131 316.805 350.563 cv
315.37 351.499 li
313.815 351.517 li
201.375 350.67 li
246.443 246.011 li
247.706 245.186 li
251.162 242.931 254.813 240.657 258.558 238.428 cv
263.085 235.782 li
308.094 210.048 358.961 196.458 410.228 196.458 cv
475.648 196.458 538.698 217.811 592.562 258.208 cv
593.951 259.259 li
595.092 260.21 li
596.792 261.627 601.074 265.03 605.214 268.322 cv
605.406 268.475 li
617.518 278.102 627.283 285.911 633.581 291.521 cv
637.256 294.794 li
632.209 300.644 li
629.44 300.191 li
530.242 283.862 li
556.918 378.635 li
560.134 381.908 li
553.293 388.749 li
cp
1 1 1 rgb
f
971.845 643.038 mo
933.58 607.913 900.55 573.522 865.634 537.156 cv
841.869 512.404 817.313 486.83 791.095 461.162 cv
790.069 460.105 li
766.894 436.219 746.776 415.285 727.321 395.041 cv
700.504 367.137 675.042 340.642 643.499 308.39 cv
636.307 301.043 li
635.965 300.695 635.635 300.357 635.292 300.007 cv
634.888 299.599 li
633.544 298.256 632.031 296.836 630.261 295.259 cv
630.252 295.258 li
523.3 277.652 li
552.453 381.222 li
552.667 381.44 552.881 381.659 553.094 381.876 cv
553.091 381.879 li
553.14 381.923 li
555.512 384.344 557.843 386.725 560.147 389.08 cv
566.144 395.217 li
582.648 412.121 597.548 427.511 611.993 442.493 cv
706.899 541.057 li
708.085 542.247 li
733.701 567.247 758.229 592.795 781.95 617.501 cv
817.27 654.287 853.79 692.325 895.807 730.72 cv
898.005 728.314 li
865.002 635.454 li
969.736 641.494 li
970.382 641.979 971.094 642.498 971.845 643.038 cv
cp
.0784314 .768627 .917647 rgb
f
560.128 381.914 mo
569.72 391.722 li
584.386 406.744 598.961 421.773 615.592 439.022 cv
710.501 537.589 li
711.627 538.718 li
737.24 563.714 761.785 589.279 785.523 614.003 cv
817.901 647.727 851.243 682.453 888.855 717.501 cv
857.768 630.028 li
956.629 635.729 li
923.103 604.231 893.343 573.235 862.027 540.619 cv
838.307 515.914 813.779 490.367 787.597 464.734 cv
786.482 463.588 li
763.409 439.808 743.375 418.961 724 398.801 cv
723.716 398.505 li
696.844 370.545 671.463 344.134 639.924 311.886 cv
631.335 303.118 li
630.35 302.132 629.25 301.087 628.005 299.955 cv
530.242 283.862 li
556.918 378.635 li
560.133 381.909 li
560.128 381.914 li
cp
896.125 737.783 mo
892.434 734.411 li
850.304 695.912 813.73 657.82 778.361 620.982 cv
754.628 596.263 730.139 570.757 704.593 545.825 cv
703.357 544.586 li
608.391 445.961 li
591.777 428.729 577.216 413.714 562.566 398.71 cv
549.678 385.534 li
545.879 382.114 li
547.144 380.816 li
516.357 271.442 li
632.496 290.56 li
633.587 291.526 li
635.428 293.166 637.01 294.65 638.423 296.063 cv
639.877 297.542 li
647.072 304.892 li
678.643 337.174 704.039 363.599 730.926 391.576 cv
731.209 391.872 li
750.577 412.023 770.603 432.862 793.658 456.624 cv
794.638 457.633 li
820.914 483.359 845.48 508.946 869.24 533.693 cv
904.078 569.979 936.984 604.251 975.226 639.354 cv
969.448 646.486 li
969.425 646.484 li
968.926 647.098 li
968.597 646.861 968.274 646.628 967.962 646.4 cv
872.236 640.88 li
903.722 729.471 li
896.125 737.783 li
cp
1 1 1 rgb
f
1320.55 683.644 mo
1220.79 716.088 li
1229.54 613.029 li
1228.9 612.543 li
1210.28 637.077 1186.47 655.004 1156.08 667.348 cv
1154.6 667.976 li
1118.8 683.693 1080.91 686.759 1041.97 677.097 cv
1026.42 672.219 1012.42 667.53 999.414 660.656 cv
995.225 658.31 989.755 654.96 984.425 651.529 cv
981.221 649.444 li
977.767 647.173 974.508 644.951 971.845 643.038 cv
971.094 642.498 970.382 641.979 969.736 641.494 cv
865.002 635.454 li
898.005 728.314 li
900.134 734.306 li
903.118 736.543 906.594 739.015 910.329 741.576 cv
914.686 744.522 li
924.303 750.947 935.01 757.588 943.513 762.311 cv
944.38 762.783 li
966.765 774.723 988.526 781.938 1008.9 788.304 cv
1010.35 788.758 li
1011.83 789.136 li
1036.38 795.417 1061.12 798.542 1085.65 798.541 cv
1125.02 798.541 1163.84 790.493 1200.49 774.525 cv
1249.68 754.397 1290.32 723.506 1321.29 682.697 cv
1321.04 683.012 1320.8 683.33 1320.55 683.644 cv
cp
.968627 .576471 .117647 rgb
f
1011.72 783.946 mo
1013.07 784.292 li
1037.06 790.43 1061.48 793.542 1085.65 793.541 cv
1085.65 793.541 li
1124.59 793.541 1162.55 785.601 1198.49 769.941 cv
1198.59 769.897 li
1241.16 752.481 1277.21 726.869 1305.98 693.64 cv
1215.17 723.173 li
1223.32 627.107 li
1205.75 646.56 1184.24 661.307 1157.96 671.979 cv
1156.55 672.58 li
1133.86 682.539 1110.06 687.602 1085.85 687.602 cv
1071.05 687.602 1055.88 685.7 1040.77 681.949 cv
1040.47 681.867 li
1025.4 677.14 1010.74 672.297 997.077 665.076 cv
996.971 665.019 li
992.862 662.718 987.446 659.42 981.719 655.733 cv
978.493 653.635 li
974.872 651.254 971.571 648.998 968.928 647.099 cv
968.598 646.861 968.275 646.628 967.962 646.4 cv
872.236 640.88 li
904.337 731.2 li
906.911 733.102 909.871 735.2 913.157 737.452 cv
917.486 740.381 li
927.235 746.893 937.881 753.463 945.94 757.939 cv
946.772 758.393 li
968.738 770.108 990.246 777.236 1010.39 783.531 cv
1011.72 783.946 li
cp
1085.65 803.541 mo
1085.65 803.541 li
1060.65 803.542 1035.39 800.325 1010.59 793.979 cv
1008.86 793.53 li
1007.41 793.076 li
986.811 786.64 964.796 779.34 942.026 767.195 cv
941.12 766.701 li
932.677 762.012 922.043 755.45 911.908 748.68 cv
907.528 745.718 li
903.576 743.008 900.088 740.521 897.135 738.307 cv
895.928 737.401 li
857.768 630.028 li
971.53 636.589 li
972.737 637.495 li
973.357 637.961 974.042 638.46 974.764 638.979 cv
977.296 640.798 980.479 642.973 983.968 645.267 cv
987.152 647.339 li
992.587 650.837 997.931 654.092 1001.8 656.265 cv
1014.66 663.053 1028.78 667.717 1043.32 672.28 cv
1057.6 675.812 1071.91 677.602 1085.85 677.602 cv
1108.67 677.602 1131.12 672.823 1152.59 663.397 cv
1154.13 662.743 li
1183.73 650.719 1206.86 633.319 1224.91 609.521 cv
1227.93 605.536 li
1234.75 610.711 li
1226.41 709.003 li
1319.01 678.889 li
1319.87 681.54 li
1325.27 685.72 li
1293.77 727.232 1252.44 758.661 1202.43 779.131 cv
1165.24 795.329 1125.95 803.541 1085.65 803.541 cv
1085.65 803.541 li
cp
1 1 1 rgb
f
1383.03 491.659 mo
1382.96 487.337 1382.89 483.253 1382.89 479.292 cv
1382.89 477.912 li
1382.83 476.534 li
1381.06 439.469 1369.51 406.799 1360.97 385.449 cv
1360.57 384.481 li
1337.66 330.076 1299.4 284.723 1246.83 249.682 cv
1246.63 249.988 li
1287.86 345.727 li
1182.95 346.517 li
1182.87 346.466 1182.8 346.417 1182.72 346.367 cv
1216.2 368.744 1239.35 395.793 1253.46 429.037 cv
1261.85 450.101 1266.01 466.174 1266.89 480.871 cv
1266.9 485.239 1266.97 489.479 1267.04 493.593 cv
1267.23 505.014 1267.41 515.804 1266.23 524.811 cv
1262.4 552.218 1253.98 575.589 1240.05 597.11 cv
1237.92 600.288 li
1235.34 604.093 1232.6 607.85 1229.66 611.557 cv
1229.54 613.029 li
1220.79 716.088 li
1320.55 683.644 li
1320.8 683.33 1321.04 683.012 1321.29 682.697 cv
1323.65 679.697 1325.94 676.673 1328.17 673.622 cv
1331.19 669.396 li
1358.06 631.182 1374.45 588.88 1381.16 540.609 cv
1381.2 540.295 li
1383.55 522.662 1383.28 506.191 1383.03 491.659 cv
cp
.968627 .615686 .0745098 rgb
f
1234.52 613.471 mo
1226.41 709.003 li
1317.55 679.363 li
1319.83 676.456 1322.04 673.533 1324.13 670.677 cv
1327.13 666.485 li
1353.53 628.92 1369.6 587.509 1376.21 539.922 cv
1376.25 539.617 li
1378.54 522.372 1378.27 506.1 1378.04 491.743 cv
1377.97 487.617 1377.89 483.351 1377.89 479.292 cv
1377.89 478.033 li
1377.83 476.774 li
1376.11 440.459 1364.73 408.321 1356.32 387.306 cv
1355.94 386.375 li
1335.5 337.832 1302.57 296.579 1257.92 263.576 cv
1295.43 350.67 li
1198.34 351.401 li
1225.84 372.473 1245.44 397.352 1258.06 427.083 cv
1258.1 427.187 li
1266.72 448.831 1270.97 465.296 1271.88 480.574 cv
1271.89 480.855 li
1271.9 485.129 1271.97 489.301 1272.04 493.336 cv
1272.04 493.51 li
1272.23 505.12 1272.42 516.087 1271.19 525.462 cv
1267.26 553.572 1258.45 577.884 1244.24 599.827 cv
1242.07 603.07 li
1239.62 606.683 1237.09 610.17 1234.52 613.471 cv
cp
1215.17 723.173 mo
1224.81 609.632 li
1225.74 608.45 li
1228.48 604.993 1231.19 601.303 1233.78 597.481 cv
1235.89 594.328 li
1249.25 573.7 1257.56 550.714 1261.28 524.119 cv
1262.41 515.517 1262.23 504.907 1262.04 493.676 cv
1262.04 493.503 li
1261.97 489.479 1261.9 485.319 1261.89 481.029 cv
1261.03 466.912 1257 451.455 1248.83 430.938 cv
1235.11 398.639 1212.58 372.335 1179.94 350.524 cv
1182.95 345.938 li
1182.91 341.517 li
1280.29 340.784 li
1240.96 249.473 li
1245.45 242.748 li
1249.61 245.521 li
1303 281.117 1341.88 327.216 1365.18 382.541 cv
1365.59 383.555 li
1374.28 405.277 1386.02 438.479 1387.82 476.296 cv
1387.89 477.912 li
1387.89 479.292 li
1387.89 483.268 1387.96 487.491 1388.03 491.576 cv
1388.28 506.283 1388.56 522.952 1386.16 540.956 cv
1386.11 541.287 li
1379.28 590.497 1362.65 633.34 1335.28 672.272 cv
1332.23 676.533 li
1330 679.599 1327.65 682.701 1325.22 685.787 cv
1324.91 686.189 li
1324.76 686.378 1324.62 686.566 1324.47 686.753 cv
1323.53 687.933 li
1215.17 723.173 li
cp
1 1 1 rgb
f
1246.63 249.988 mo
1246.37 249.373 li
1242.84 247.071 1239.28 244.86 1235.69 242.725 cv
1231.2 240.098 li
1129.14 181.748 1003.83 189.773 907.244 262.208 cv
906.057 263.099 li
904.916 264.05 li
903.145 265.526 898.756 269.014 894.514 272.386 cv
876.009 287.094 867.39 294.125 861.915 299.601 cv
862.18 299.866 li
964.128 278.194 li
944.353 381.222 li
944.133 381.446 943.92 381.664 943.701 381.887 cv
947.436 378.512 960.387 368.219 966.696 363.203 cv
971.314 359.533 975.104 356.521 977.856 354.266 cv
1034.74 312.173 1107.34 306.211 1167.59 337.539 cv
1170.96 339.331 li
1174.94 341.51 1178.86 343.856 1182.72 346.367 cv
1182.8 346.417 1182.87 346.466 1182.95 346.517 cv
1287.86 345.727 li
1246.63 249.988 li
cp
.956863 .639216 .0627451 rgb
f
970.459 271.737 mo
951.856 368.654 li
956.016 365.306 960.365 361.848 963.479 359.374 cv
963.585 359.289 li
968.075 355.72 971.953 352.638 974.688 350.398 cv
974.882 350.247 li
1008.06 325.692 1046.72 312.713 1086.66 312.713 cv
1115.46 312.713 1144.24 319.764 1169.9 333.103 cv
1173.3 334.917 li
1177.07 336.979 1180.79 339.186 1184.41 341.505 cv
1280.29 340.784 li
1242.37 252.743 li
1239.4 250.826 1236.3 248.905 1233.13 247.022 cv
1228.67 244.415 li
1185.26 219.591 1136.11 206.458 1086.58 206.458 cv
1023.34 206.458 962.363 227.119 910.244 266.208 cv
909.159 267.022 li
908.117 267.891 li
906.332 269.378 902.021 272.806 897.851 276.121 cv
897.625 276.3 li
889.871 282.463 883.871 287.263 879.128 291.151 cv
970.459 271.737 li
cp
947.054 385.597 mo
942.515 380.869 li
939.442 380.28 li
957.797 284.652 li
860.562 305.321 li
854.848 299.598 li
858.379 296.065 li
864.027 290.417 872.74 283.305 891.402 268.472 cv
891.627 268.293 li
895.753 265.013 900.02 261.622 901.715 260.208 cv
903.057 259.099 li
904.244 258.208 li
958.107 217.811 1021.16 196.458 1086.58 196.458 cv
1137.84 196.458 1188.71 210.047 1233.68 235.757 cv
1238.21 238.409 li
1241.98 240.649 1245.63 242.923 1249.1 245.186 cv
1250.36 246.011 li
1295.43 350.67 li
1181.49 351.528 li
1180.01 350.572 li
1176.26 348.129 1172.41 345.828 1168.55 343.717 cv
1165.24 341.952 li
1141.05 329.374 1113.86 322.713 1086.66 322.713 cv
1048.91 322.713 1012.35 334.988 980.929 358.213 cv
978.144 360.492 974.276 363.565 969.808 367.117 cv
969.701 367.202 li
963.518 372.118 950.65 382.346 947.054 385.597 cv
cp
1 1 1 rgb
f
862.18 299.866 mo
861.513 300.007 li
858.411 303.171 855.391 306.258 852.404 309.312 cv
849.083 312.71 li
819.461 343.038 795.089 368.397 769.473 395.053 cv
750.021 415.293 729.906 436.224 706.735 460.106 cv
705.726 461.146 li
679.5 486.82 654.939 512.4 631.169 537.158 cv
596.252 573.525 563.221 607.917 524.955 643.042 cv
525.708 642.501 526.421 641.98 527.068 641.495 cv
631.802 635.453 li
598.801 728.314 li
600.998 730.72 li
643.014 692.326 679.535 654.288 714.853 617.503 cv
738.574 592.796 763.104 567.248 788.72 542.247 cv
789.201 541.777 li
884.813 442.493 li
899.623 427.131 914.914 411.339 931.923 393.924 cv
935.22 390.551 li
937.998 387.708 940.824 384.822 943.701 381.887 cv
943.92 381.664 944.133 381.446 944.353 381.222 cv
964.128 278.194 li
862.18 299.866 li
cp
.984314 .690196 .231373 rgb
f
639.037 630.027 mo
607.95 717.5 li
645.565 682.449 678.905 647.725 711.238 614.048 cv
734.993 589.307 759.549 563.73 785.228 538.669 cv
785.654 538.253 li
881.211 439.024 li
898.272 421.328 913.249 405.888 928.346 390.431 cv
931.644 387.056 li
934.294 384.345 936.987 381.594 939.727 378.799 cv
957.797 284.652 li
864.027 304.584 li
861.296 307.372 858.624 310.103 855.979 312.808 cv
852.659 316.205 li
822.996 346.574 798.749 371.805 773.078 398.517 cv
772.936 398.666 li
753.521 418.866 733.447 439.755 710.323 463.588 cv
709.224 464.719 li
683.033 490.358 658.501 515.91 634.776 540.621 cv
603.46 573.238 573.702 604.232 540.175 635.73 cv
639.037 630.027 li
cp
600.679 737.784 mo
593.084 729.47 li
624.568 640.879 li
528.842 646.401 li
528.528 646.63 528.204 646.864 527.873 647.103 cv
527.371 646.486 li
527.356 646.487 li
527.354 646.466 li
521.574 639.358 li
559.817 604.255 592.724 569.981 627.563 533.695 cv
651.326 508.945 675.898 483.351 702.182 457.619 cv
703.145 456.625 li
726.253 432.809 746.319 411.929 765.726 391.736 cv
765.867 391.588 li
791.553 364.861 815.814 339.616 845.506 309.216 cv
848.829 305.817 li
851.817 302.761 854.839 299.672 857.942 296.507 cv
858.999 295.43 li
970.459 271.737 li
948.979 383.648 li
947.272 385.387 li
944.396 388.32 941.572 391.205 938.795 394.046 cv
935.499 397.419 li
920.418 412.859 905.456 428.285 888.412 445.963 cv
792.692 545.356 li
792.211 545.826 li
766.649 570.773 742.151 596.29 718.459 620.966 cv
683.081 657.814 646.505 695.909 604.371 734.411 cv
600.679 737.784 li
cp
1 1 1 rgb
f
523.961 509.248 mo
523.961 500.127 li
537.428 500.127 li
537.428 514.129 li
529.682 514.129 li
526.532 514.129 523.961 511.941 523.961 509.248 cv
cp
529.682 439.827 mo
537.428 439.827 li
537.428 458.459 li
523.961 458.459 li
523.961 444.714 li
523.961 442.02 526.532 439.827 529.682 439.827 cv
cp
599.727 444.714 mo
599.727 458.459 li
586.261 458.459 li
586.261 439.827 li
594.006 439.827 li
597.162 439.827 599.727 442.02 599.727 444.714 cv
cp
574.121 500.127 mo
585.984 500.127 li
585.984 514.129 li
574.121 514.129 li
574.121 500.127 li
cp
561.987 500.127 mo
573.844 500.127 li
573.844 514.129 li
561.987 514.129 li
561.987 500.127 li
cp
549.842 500.127 mo
561.707 500.127 li
561.707 514.129 li
549.842 514.129 li
549.842 500.127 li
cp
549.568 500.127 mo
549.568 514.129 li
537.704 514.129 li
537.704 500.127 li
549.568 500.127 li
cp
537.704 489.769 mo
549.568 489.769 li
549.568 499.886 li
537.704 499.886 li
537.704 489.769 li
cp
537.428 489.769 mo
537.428 499.886 li
523.961 499.886 li
523.961 489.769 li
537.428 489.769 li
cp
537.428 479.411 mo
537.428 489.534 li
523.961 489.534 li
523.961 479.411 li
537.428 479.411 li
cp
537.428 469.059 mo
537.428 479.175 li
523.961 479.175 li
523.961 469.059 li
537.428 469.059 li
cp
537.428 468.816 mo
523.961 468.816 li
523.961 458.694 li
537.428 458.694 li
537.428 468.816 li
cp
549.568 458.694 mo
549.568 468.816 li
537.704 468.816 li
537.704 458.694 li
549.568 458.694 li
cp
549.568 458.459 mo
537.704 458.459 li
537.704 439.827 li
549.568 439.827 li
549.568 458.459 li
cp
561.707 458.459 mo
549.842 458.459 li
549.842 439.827 li
561.707 439.827 li
561.707 458.459 li
cp
573.844 458.459 mo
561.987 458.459 li
561.987 439.827 li
573.844 439.827 li
573.844 458.459 li
cp
574.121 458.459 mo
574.121 439.827 li
585.984 439.827 li
585.984 458.459 li
574.121 458.459 li
cp
585.984 468.816 mo
574.121 468.816 li
574.121 458.694 li
585.984 458.694 li
585.984 468.816 li
cp
586.261 468.816 mo
586.261 458.694 li
599.727 458.694 li
599.727 468.816 li
586.261 468.816 li
cp
586.261 479.175 mo
586.261 469.059 li
599.727 469.059 li
599.727 479.175 li
586.261 479.175 li
cp
586.261 489.534 mo
586.261 479.411 li
599.727 479.411 li
599.727 489.534 li
586.261 489.534 li
cp
586.261 489.769 mo
599.727 489.769 li
599.727 499.886 li
586.261 499.886 li
586.261 489.769 li
cp
574.121 489.769 mo
585.984 489.769 li
585.984 499.886 li
574.121 499.886 li
574.121 489.769 li
cp
561.987 489.769 mo
573.844 489.769 li
573.844 499.886 li
561.987 499.886 li
561.987 489.769 li
cp
561.707 489.769 mo
561.707 499.886 li
549.842 499.886 li
549.842 489.769 li
561.707 489.769 li
cp
549.842 479.411 mo
561.707 479.411 li
561.707 489.534 li
549.842 489.534 li
549.842 479.411 li
cp
549.568 479.411 mo
549.568 489.534 li
537.704 489.534 li
537.704 479.411 li
549.568 479.411 li
cp
549.568 479.175 mo
537.704 479.175 li
537.704 469.059 li
549.568 469.059 li
549.568 479.175 li
cp
561.707 469.059 mo
561.707 479.175 li
549.842 479.175 li
549.842 469.059 li
561.707 469.059 li
cp
561.707 468.816 mo
549.842 468.816 li
549.842 458.694 li
561.707 458.694 li
561.707 468.816 li
cp
561.987 468.816 mo
561.987 458.694 li
573.844 458.694 li
573.844 468.816 li
561.987 468.816 li
cp
573.844 479.175 mo
561.987 479.175 li
561.987 469.059 li
573.844 469.059 li
573.844 479.175 li
cp
574.121 479.175 mo
574.121 469.059 li
585.984 469.059 li
585.984 479.175 li
574.121 479.175 li
cp
573.844 489.534 mo
561.987 489.534 li
561.987 479.411 li
573.844 479.411 li
573.844 489.534 li
cp
574.121 479.411 mo
585.984 479.411 li
585.984 489.534 li
574.121 489.534 li
574.121 479.411 li
cp
594.006 514.129 mo
586.261 514.129 li
586.261 500.127 li
599.727 500.127 li
599.727 509.248 li
599.727 511.941 597.162 514.129 594.006 514.129 cv
cp
602.236 509.248 mo
602.236 444.714 li
602.236 440.837 598.549 437.687 594.006 437.687 cv
529.682 437.687 li
525.145 437.687 521.452 440.837 521.452 444.714 cv
521.452 509.248 li
521.452 513.124 525.145 516.274 529.682 516.274 cv
594.006 516.274 li
598.549 516.274 602.236 513.124 602.236 509.248 cv
cp
.105882 .0784314 .392157 rgb
f
530.657 468.796 mo
530.657 458.648 li
556.627 458.648 li
556.627 468.796 li
530.657 468.796 li
cp
.192157 .615686 .866667 rgb
f
539.308 479.339 mo
539.308 469.073 li
577.412 469.073 li
577.412 479.339 li
539.308 479.339 li
cp
0 .866667 0 rgb
f
547.985 489.539 mo
547.985 479.272 li
567.266 479.272 li
567.266 489.539 li
547.985 489.539 li
cp
.866667 .384314 .164706 rgb
f
559.877 500.025 mo
559.877 489.626 li
590.484 489.626 li
590.484 500.025 li
559.877 500.025 li
cp
.737255 .760784 .113725 rgb
f
542.829 448.046 mo
543.023 448.097 543.254 448.112 543.577 448.112 cv
544.76 448.112 545.49 447.449 545.49 446.331 cv
545.49 445.325 544.862 444.724 543.752 444.724 cv
543.3 444.724 542.991 444.77 542.829 444.821 cv
542.829 448.046 li
cp
540.629 443.087 mo
541.313 442.954 542.28 442.854 543.633 442.854 cv
545.01 442.854 545.986 443.148 546.641 443.733 cv
547.27 444.284 547.695 445.196 547.695 446.262 cv
547.695 447.337 547.37 448.24 546.789 448.861 cv
546.032 449.65 544.908 450.012 543.592 450.012 cv
543.3 450.012 543.037 449.995 542.829 449.958 cv
542.829 453.871 li
540.629 453.871 li
540.629 443.087 li
cp
0 0 0 rgb
f
553.798 442.938 mo
556.032 442.938 li
556.032 451.792 li
559.945 451.792 li
559.945 453.871 li
553.798 453.871 li
553.798 442.938 li
cp
f
569.432 449.215 mo
568.818 446.895 li
568.641 446.248 568.471 445.437 568.322 444.786 cv
568.29 444.786 li
568.148 445.437 567.999 446.262 567.842 446.895 cv
567.255 449.215 li
569.432 449.215 li
cp
566.938 451.063 mo
566.234 453.871 li
563.929 453.871 li
566.938 442.938 li
569.852 442.938 li
572.907 453.871 li
570.514 453.871 li
569.755 451.063 li
566.938 451.063 li
cp
f
576.072 453.871 mo
576.072 442.938 li
578.668 442.938 li
580.717 446.946 li
581.298 448.097 581.881 449.457 582.319 450.694 cv
582.367 450.694 li
582.218 449.245 582.172 447.772 582.172 446.136 cv
582.172 442.938 li
584.219 442.938 li
584.219 453.871 li
581.881 453.871 li
579.778 449.65 li
579.196 448.486 578.554 447.075 578.072 445.792 cv
578.026 445.813 li
578.087 447.254 578.116 448.794 578.116 450.575 cv
578.116 453.871 li
576.072 453.871 li
cp
f
383.417 273.618 mo
382.519 275.61 li
379.771 277.12 376.698 277.875 373.3 277.875 cv
366.503 277.875 361.854 275.428 359.354 270.532 cv
358.195 268.266 357.616 265.812 357.616 263.168 cv
357.616 258.898 359.035 255.493 361.874 252.954 cv
364.777 250.336 368.742 249.028 373.769 249.028 cv
376.958 249.028 380.077 249.607 383.124 250.766 cv
383.378 251.059 li
382.935 252.856 382.662 254.959 382.558 257.368 cv
382.382 257.563 li
381.229 257.563 li
381.034 257.348 li
380.995 255.773 380.923 254.679 380.819 254.067 cv
379.191 252.231 376.841 251.313 373.769 251.313 cv
370.604 251.313 368.124 252.316 366.327 254.321 cv
364.53 256.326 363.632 259.047 363.632 262.485 cv
363.632 267.133 365.233 270.701 368.437 273.188 cv
370.142 274.516 372.427 275.18 375.292 275.18 cv
377.896 275.18 380.441 274.51 382.929 273.168 cv
383.417 273.618 li
cp
f
399.901 268.95 mo
399.901 265.708 399.546 263.387 398.837 261.987 cv
398.127 260.587 397.043 259.887 395.585 259.887 cv
392.994 259.887 391.698 262.225 391.698 266.899 cv
391.698 272.902 393.15 275.903 396.054 275.903 cv
397.863 275.903 399.016 274.907 399.511 272.915 cv
399.771 271.873 399.901 270.551 399.901 268.95 cv
cp
405.312 267.348 mo
405.312 271.958 403.762 275.076 400.663 276.704 cv
399.152 277.498 397.427 277.895 395.487 277.895 cv
392.492 277.895 390.21 277.029 388.642 275.297 cv
387.072 273.566 386.288 271.085 386.288 267.856 cv
386.288 263.39 387.812 260.415 390.858 258.93 cv
392.355 258.201 394.094 257.836 396.073 257.836 cv
400.227 257.836 402.98 259.275 404.335 262.153 cv
404.986 263.533 405.312 265.265 405.312 267.348 cv
cp
f
422.636 266.782 mo
422.636 263.11 li
421.698 261.99 420.8 261.274 419.94 260.961 cv
419.354 260.753 418.729 260.649 418.065 260.649 cv
416.269 260.649 415.109 261.574 414.589 263.422 cv
414.302 264.451 414.159 265.597 414.159 266.86 cv
414.159 269.555 414.791 271.554 416.054 272.856 cv
416.718 273.546 417.609 273.891 418.729 273.891 cv
419.654 273.891 420.513 273.598 421.308 273.012 cv
422.023 272.492 422.447 271.932 422.577 271.333 cv
422.616 271.15 422.636 269.633 422.636 266.782 cv
cp
430.351 276.977 mo
430.155 277.172 li
428.879 277.081 427.727 277.036 426.698 277.036 cv
425.722 277.036 424.4 277.081 422.733 277.172 cv
422.558 277.036 li
422.609 276.398 422.636 275.33 422.636 273.833 cv
422.167 274.223 421.496 274.822 420.624 275.629 cv
419.543 276.632 418.84 277.231 418.515 277.426 cv
418.098 277.622 417.421 277.719 416.483 277.719 cv
414.257 277.719 412.46 276.879 411.093 275.2 cv
409.726 273.52 409.042 271.346 409.042 268.676 cv
409.042 266.085 409.569 264.067 410.624 262.622 cv
410.897 262.244 411.705 261.574 413.046 260.61 cv
414.608 259.49 415.748 258.781 416.464 258.481 cv
417.089 258.221 417.883 258.09 418.847 258.09 cv
420.201 258.09 421.464 258.377 422.636 258.95 cv
422.636 257.856 li
422.636 254.432 422.551 252.414 422.382 251.801 cv
422.291 251.463 422.023 251.254 421.581 251.176 cv
421.373 251.137 420.773 251.098 419.784 251.059 cv
419.589 250.844 li
419.589 249.77 li
419.784 249.555 li
422.284 249.295 424.804 248.754 427.343 247.934 cv
427.772 248.168 li
427.772 248.221 427.746 248.865 427.694 250.102 cv
427.577 252.902 427.519 257.107 427.519 262.719 cv
427.519 269.028 li
427.519 272.687 427.603 274.699 427.772 275.063 cv
427.876 275.285 428.02 275.421 428.202 275.473 cv
428.488 275.564 429.14 275.649 430.155 275.727 cv
430.351 275.922 li
430.351 276.977 li
cp
f
444.843 265.571 mo
444.843 262.055 443.749 260.297 441.562 260.297 cv
439.257 260.297 438.104 262.042 438.104 265.532 cv
438.104 265.961 li
438.859 266.079 440.201 266.137 442.128 266.137 cv
443.13 266.137 444.029 266.079 444.823 265.961 cv
444.836 265.779 444.843 265.649 444.843 265.571 cv
cp
449.94 266.079 mo
449.94 266.3 449.934 266.632 449.921 267.075 cv
449.706 267.348 li
447.987 267.817 445.708 268.051 442.87 268.051 cv
442.362 268.051 441.594 268.061 440.565 268.081 cv
439.537 268.1 438.762 268.11 438.241 268.11 cv
438.319 270.024 438.912 271.606 440.019 272.856 cv
441.177 274.197 442.688 274.868 444.55 274.868 cv
445.8 274.868 447.284 274.438 449.003 273.579 cv
449.472 274.145 li
448.612 276.079 li
446.711 277.29 444.647 277.895 442.421 277.895 cv
439.491 277.895 437.216 277.068 435.595 275.415 cv
433.974 273.761 433.163 271.404 433.163 268.344 cv
433.163 264.711 434.029 262.225 435.761 260.883 cv
438.156 259.035 440.429 258.11 442.577 258.11 cv
444.908 258.11 446.711 258.781 447.987 260.122 cv
449.289 261.502 449.94 263.488 449.94 266.079 cv
cp
f
633.177 381.592 mo
633.177 384.274 632.262 386.367 630.433 387.871 cv
628.603 389.375 626.536 390.127 624.231 390.127 cv
623.45 390.127 622.662 390.036 621.868 389.854 cv
621.751 389.502 621.523 389.033 621.185 388.447 cv
621.595 388.018 li
622.142 388.2 622.643 388.291 623.099 388.291 cv
624.414 388.291 625.468 387.826 626.263 386.895 cv
627.057 385.964 627.454 384.658 627.454 382.979 cv
627.454 379.346 625.82 377.529 622.552 377.529 cv
622.161 377.529 621.38 377.607 620.208 377.764 cv
620.091 378.076 620.032 380.205 620.032 384.15 cv
620.032 394.482 li
620.032 397.582 620.117 399.6 620.286 400.537 cv
620.351 400.915 620.572 401.156 620.95 401.26 cv
621.067 401.286 621.959 401.351 623.626 401.455 cv
623.841 401.67 li
623.841 402.959 li
623.646 403.154 li
621.861 403.076 619.726 403.037 617.239 403.037 cv
614.439 403.037 612.435 403.076 611.224 403.154 cv
611.028 402.979 li
611.028 401.67 li
611.243 401.455 li
612.558 401.377 613.313 401.312 613.509 401.26 cv
613.886 401.156 614.107 400.915 614.173 400.537 cv
614.342 399.6 614.427 397.582 614.427 394.482 cv
614.427 384.15 li
614.427 381.052 614.342 379.033 614.173 378.096 cv
614.107 377.718 613.886 377.478 613.509 377.373 cv
613.313 377.321 612.552 377.256 611.224 377.178 cv
611.028 376.963 li
611.028 375.674 li
611.243 375.479 li
612.519 375.557 614.479 375.596 617.122 375.596 cv
618.216 375.596 619.791 375.576 621.849 375.537 cv
623.906 375.498 625.091 375.479 625.403 375.479 cv
628.971 375.479 631.289 376.384 632.356 378.193 cv
632.903 379.131 633.177 380.264 633.177 381.592 cv
cp
f
645.13 402.979 mo
644.935 403.174 li
643.697 403.083 641.914 403.037 639.583 403.037 cv
637.252 403.037 635.475 403.083 634.251 403.174 cv
634.056 402.979 li
634.056 401.787 li
634.251 401.592 li
635.501 401.553 636.275 401.455 636.575 401.299 cv
636.835 401.182 636.979 400.869 637.005 400.361 cv
637.096 398.669 637.142 395.707 637.142 391.475 cv
637.142 384.932 li
637.142 382.197 637.096 379.984 637.005 378.291 cv
636.979 377.81 636.835 377.494 636.575 377.344 cv
636.314 377.194 635.56 377.1 634.31 377.061 cv
634.114 376.846 li
634.114 375.771 li
634.31 375.557 li
636.822 375.283 639.342 374.743 641.868 373.936 cv
642.278 374.17 li
642.278 374.521 642.259 375.166 642.22 376.104 cv
642.089 379.216 642.024 382.66 642.024 386.436 cv
642.024 391.475 li
642.024 395.707 642.07 398.669 642.161 400.361 cv
642.187 400.869 642.33 401.182 642.591 401.299 cv
642.89 401.455 643.665 401.553 644.915 401.592 cv
645.13 401.787 li
645.13 402.979 li
cp
f
658.157 398.369 mo
658.157 393.564 li
656.009 394.033 654.56 394.538 653.812 395.078 cv
653.063 395.619 652.688 396.442 652.688 397.549 cv
652.688 399.32 653.463 400.205 655.013 400.205 cv
656.328 400.205 657.376 399.593 658.157 398.369 cv
cp
665.325 402.92 mo
665.11 403.135 li
664.017 403.069 662.76 403.037 661.341 403.037 cv
660.234 403.037 659.173 403.069 658.157 403.135 cv
657.981 402.92 li
658.157 400.303 li
654.368 403.193 li
654.068 403.415 653.639 403.551 653.079 403.604 cv
652.857 403.629 652.597 403.643 652.298 403.643 cv
650.853 403.643 649.742 403.206 648.968 402.334 cv
648.193 401.462 647.806 400.257 647.806 398.721 cv
647.806 396.689 648.45 395.251 649.739 394.404 cv
651.132 393.48 653.938 392.646 658.157 391.904 cv
658.157 389.834 657.61 388.447 656.517 387.744 cv
655.853 387.314 655.058 387.1 654.134 387.1 cv
653.118 387.1 652.317 387.308 651.731 387.725 cv
650.989 389.541 li
650.735 389.678 li
649.739 389.443 li
649.603 389.17 li
649.7 386.865 li
651.849 385.277 653.463 384.378 654.544 384.17 cv
655 384.079 655.592 384.033 656.321 384.033 cv
658.886 384.033 660.716 384.704 661.81 386.045 cv
662.604 387.021 663.001 388.519 663.001 390.537 cv
663.001 391.032 662.981 391.826 662.942 392.92 cv
662.877 394.743 662.845 395.96 662.845 396.572 cv
662.845 398.539 662.877 399.792 662.942 400.332 cv
663.007 400.873 663.16 401.214 663.401 401.357 cv
663.642 401.501 664.218 401.585 665.13 401.611 cv
665.325 401.826 li
665.325 402.92 li
cp
f
689.837 402.959 mo
689.642 403.174 li
688.209 403.083 686.998 403.037 686.009 403.037 cv
685.097 403.037 683.769 403.083 682.024 403.174 cv
681.829 402.979 li
682.063 400.075 682.181 397.835 682.181 396.26 cv
682.181 392.432 li
682.181 389.255 681.035 387.666 678.743 387.666 cv
677.545 387.666 676.607 388.076 675.931 388.896 cv
675.357 389.587 675.071 390.283 675.071 390.986 cv
675.071 394.639 li
675.071 398.011 675.156 400.082 675.325 400.85 cv
675.429 401.306 676.185 401.546 677.591 401.572 cv
677.786 401.768 li
677.786 402.959 li
677.591 403.154 li
676.484 403.076 674.83 403.037 672.63 403.037 cv
670.299 403.037 668.521 403.083 667.298 403.174 cv
667.103 402.979 li
667.103 401.787 li
667.298 401.592 li
668.548 401.553 669.322 401.455 669.622 401.299 cv
669.882 401.182 670.025 400.869 670.052 400.361 cv
670.143 398.669 670.188 396.853 670.188 394.912 cv
670.188 392.119 li
670.188 389.515 670.091 388.018 669.896 387.627 cv
669.765 387.367 669.485 387.204 669.056 387.139 cv
668.899 387.113 668.333 387.08 667.356 387.041 cv
667.161 386.846 li
667.161 385.752 li
667.356 385.537 li
669.7 385.316 672.167 384.775 674.759 383.916 cv
675.188 384.17 li
675.149 387.451 li
678.509 384.639 li
679.368 384.287 680.312 384.111 681.341 384.111 cv
683.411 384.111 684.96 384.736 685.989 385.986 cv
686.822 387.002 687.239 388.493 687.239 390.459 cv
687.239 390.681 687.213 391.585 687.161 393.174 cv
687.109 394.763 687.083 395.896 687.083 396.572 cv
687.083 398.539 687.115 399.792 687.181 400.332 cv
687.246 400.873 687.396 401.214 687.63 401.357 cv
687.864 401.501 688.541 401.585 689.661 401.611 cv
689.837 401.807 li
689.837 402.959 li
cp
f
142.128 501.337 mo
142.128 497.431 140.078 495.478 135.976 495.478 cv
135.455 495.478 134.863 495.497 134.199 495.536 cv
134.199 504.579 li
134.199 505.556 134.225 506.513 134.277 507.45 cv
134.811 507.541 135.559 507.587 136.523 507.587 cv
138.346 507.587 139.752 507.014 140.742 505.868 cv
141.666 504.774 142.128 503.264 142.128 501.337 cv
cp
141.289 488.368 mo
141.289 485.491 139.791 484.052 136.796 484.052 cv
135.807 484.052 134.967 484.104 134.277 484.208 cv
134.225 485.575 134.199 486.838 134.199 487.997 cv
134.199 493.388 li
134.498 493.414 135.097 493.427 135.996 493.427 cv
138.352 493.427 139.902 492.672 140.644 491.161 cv
141.074 490.289 141.289 489.358 141.289 488.368 cv
cp
148.105 500.731 mo
148.105 504 146.523 506.532 143.359 508.329 cv
141.796 509.215 139.785 509.657 137.324 509.657 cv
136.542 509.657 135.898 509.65 135.39 509.638 cv
130.722 509.54 li
129.055 509.54 127.766 509.579 126.855 509.657 cv
126.66 509.462 li
126.66 508.915 li
126.757 508.681 li
127.721 508.068 128.242 507.685 128.32 507.528 cv
128.437 507.294 128.508 506.428 128.535 504.931 cv
128.593 500.556 li
128.593 490.653 li
128.593 487.555 128.508 485.536 128.339 484.599 cv
128.274 484.221 128.053 483.98 127.675 483.876 cv
127.48 483.824 126.718 483.759 125.39 483.681 cv
125.195 483.485 li
125.195 482.157 li
125.39 481.981 li
126.549 482.06 128.541 482.099 131.367 482.099 cv
133.164 482.099 134.785 482.066 136.23 482.001 cv
137.375 481.949 138.346 481.923 139.14 481.923 cv
142.773 481.923 145.156 482.75 146.289 484.403 cv
146.887 485.276 147.187 486.278 147.187 487.411 cv
147.187 489.26 146.464 490.803 145.019 492.04 cv
144.329 492.626 143.613 493.063 142.871 493.349 cv
142.011 493.674 141.074 493.954 140.058 494.188 cv
145.422 494.423 148.105 496.604 148.105 500.731 cv
cp
f
173.828 509.442 mo
173.632 509.638 li
171.679 509.572 170.449 509.54 169.941 509.54 cv
169.511 509.54 168.873 509.557 168.027 509.589 cv
167.18 509.621 166.549 509.638 166.132 509.638 cv
165.976 509.481 li
166.08 508.414 166.132 507.398 166.132 506.435 cv
165.455 506.942 164.27 508.023 162.578 509.677 cv
161.731 510.002 160.826 510.165 159.863 510.165 cv
158.105 510.165 156.718 509.687 155.703 508.729 cv
154.687 507.772 154.179 506.396 154.179 504.599 cv
154.179 504.377 154.192 503.908 154.218 503.192 cv
154.244 502.477 154.257 501.786 154.257 501.122 cv
154.257 498.622 li
154.257 496.044 154.16 494.547 153.964 494.13 cv
153.834 493.87 153.554 493.707 153.125 493.642 cv
152.968 493.616 152.395 493.583 151.406 493.544 cv
151.21 493.349 li
151.21 492.255 li
151.406 492.04 li
153.893 491.819 156.412 491.278 158.964 490.419 cv
159.394 490.673 li
159.225 492.834 159.14 494.833 159.14 496.669 cv
159.14 500.478 li
159.14 502.262 159.199 503.479 159.316 504.13 cv
159.446 504.911 159.755 505.504 160.244 505.907 cv
160.732 506.311 161.386 506.513 162.207 506.513 cv
163.222 506.513 164.114 506.188 164.882 505.536 cv
165.611 504.885 165.996 504.143 166.035 503.31 cv
166.061 502.672 166.074 502.274 166.074 502.118 cv
166.074 498.622 li
166.074 496.07 165.976 494.573 165.781 494.13 cv
165.664 493.87 165.39 493.707 164.96 493.642 cv
164.804 493.616 164.231 493.583 163.242 493.544 cv
163.027 493.349 li
163.027 492.255 li
163.242 492.04 li
165.715 491.819 168.235 491.278 170.8 490.419 cv
171.21 490.673 li
171.041 492.626 170.957 494.625 170.957 496.669 cv
170.957 502.802 li
170.957 505.549 171.035 507.105 171.191 507.47 cv
171.269 507.652 171.399 507.77 171.582 507.821 cv
171.894 507.912 172.571 507.99 173.613 508.056 cv
173.828 508.251 li
173.828 509.442 li
cp
f
184.316 483.993 mo
184.316 484.827 184.023 485.54 183.437 486.132 cv
182.851 486.725 182.148 487.021 181.328 487.021 cv
180.494 487.021 179.785 486.725 179.199 486.132 cv
178.613 485.54 178.32 484.827 178.32 483.993 cv
178.32 483.134 178.616 482.411 179.208 481.825 cv
179.801 481.239 180.507 480.946 181.328 480.946 cv
182.135 480.946 182.834 481.239 183.427 481.825 cv
184.02 482.411 184.316 483.134 184.316 483.993 cv
cp
187.011 509.481 mo
186.816 509.677 li
185.579 509.586 183.795 509.54 181.464 509.54 cv
179.133 509.54 177.356 509.586 176.132 509.677 cv
175.937 509.481 li
175.937 508.29 li
176.132 508.095 li
177.382 508.056 178.157 507.958 178.457 507.802 cv
178.717 507.685 178.86 507.372 178.886 506.864 cv
178.977 505.172 179.023 503.355 179.023 501.415 cv
179.023 498.622 li
179.023 496.096 178.925 494.599 178.73 494.13 cv
178.625 493.87 178.346 493.707 177.89 493.642 cv
177.734 493.616 177.167 493.583 176.191 493.544 cv
175.996 493.349 li
175.996 492.255 li
176.191 492.04 li
178.691 491.819 181.21 491.278 183.75 490.419 cv
184.16 490.673 li
183.99 493.043 183.906 495.042 183.906 496.669 cv
183.906 502.899 li
183.906 503.85 183.951 505.172 184.042 506.864 cv
184.068 507.372 184.211 507.685 184.472 507.802 cv
184.771 507.958 185.546 508.056 186.796 508.095 cv
187.011 508.29 li
187.011 509.481 li
cp
f
200.332 509.481 mo
200.136 509.677 li
198.899 509.586 197.115 509.54 194.785 509.54 cv
192.454 509.54 190.676 509.586 189.453 509.677 cv
189.257 509.481 li
189.257 508.29 li
189.453 508.095 li
190.703 508.056 191.477 507.958 191.777 507.802 cv
192.037 507.685 192.18 507.372 192.207 506.864 cv
192.297 505.172 192.343 502.209 192.343 497.978 cv
192.343 491.435 li
192.343 488.7 192.297 486.487 192.207 484.794 cv
192.18 484.313 192.037 483.997 191.777 483.847 cv
191.516 483.697 190.761 483.603 189.511 483.563 cv
189.316 483.349 li
189.316 482.274 li
189.511 482.06 li
192.024 481.786 194.543 481.246 197.07 480.438 cv
197.48 480.673 li
197.48 481.024 197.46 481.669 197.421 482.606 cv
197.291 485.719 197.226 489.163 197.226 492.938 cv
197.226 497.978 li
197.226 502.209 197.271 505.172 197.363 506.864 cv
197.389 507.372 197.532 507.685 197.792 507.802 cv
198.092 507.958 198.867 508.056 200.117 508.095 cv
200.332 508.29 li
200.332 509.481 li
cp
f
217.167 499.286 mo
217.167 495.614 li
216.23 494.495 215.332 493.778 214.472 493.466 cv
213.886 493.258 213.261 493.153 212.597 493.153 cv
210.8 493.153 209.641 494.078 209.121 495.927 cv
208.834 496.956 208.691 498.102 208.691 499.364 cv
208.691 502.06 209.322 504.059 210.585 505.36 cv
211.25 506.051 212.141 506.396 213.261 506.396 cv
214.186 506.396 215.045 506.103 215.839 505.517 cv
216.555 504.996 216.979 504.436 217.109 503.837 cv
217.148 503.654 217.167 502.138 217.167 499.286 cv
cp
224.882 509.481 mo
224.687 509.677 li
223.411 509.586 222.258 509.54 221.23 509.54 cv
220.253 509.54 218.932 509.586 217.265 509.677 cv
217.089 509.54 li
217.141 508.902 217.167 507.834 217.167 506.337 cv
216.699 506.728 216.028 507.326 215.156 508.134 cv
214.075 509.137 213.372 509.735 213.046 509.931 cv
212.629 510.126 211.953 510.224 211.015 510.224 cv
208.789 510.224 206.992 509.384 205.625 507.704 cv
204.257 506.024 203.574 503.85 203.574 501.181 cv
203.574 498.59 204.101 496.571 205.156 495.126 cv
205.429 494.749 206.236 494.078 207.578 493.114 cv
209.14 491.995 210.279 491.285 210.996 490.985 cv
211.621 490.725 212.415 490.595 213.378 490.595 cv
214.732 490.595 215.996 490.881 217.167 491.454 cv
217.167 490.36 li
217.167 486.936 217.083 484.918 216.914 484.306 cv
216.822 483.967 216.555 483.759 216.113 483.681 cv
215.904 483.642 215.305 483.603 214.316 483.563 cv
214.121 483.349 li
214.121 482.274 li
214.316 482.06 li
216.816 481.799 219.335 481.259 221.875 480.438 cv
222.304 480.673 li
222.304 480.725 222.278 481.37 222.226 482.606 cv
222.109 485.406 222.05 489.612 222.05 495.224 cv
222.05 501.532 li
222.05 505.191 222.135 507.203 222.304 507.567 cv
222.408 507.789 222.551 507.926 222.734 507.978 cv
223.02 508.068 223.671 508.153 224.687 508.231 cv
224.882 508.427 li
224.882 509.481 li
cp
f
395.812 725.086 mo
395.655 726.051 395.57 727.047 395.558 728.074 cv
395.519 731.336 li
395.323 731.531 li
394.093 731.531 li
393.878 731.355 li
393.813 729.689 393.741 728.713 393.663 728.426 cv
393.507 727.906 393.09 727.6 392.413 727.508 cv
392.152 727.469 390.929 727.449 388.741 727.449 cv
386.124 727.449 li
386.098 727.906 386.085 729.715 386.085 732.879 cv
386.085 743.973 li
386.085 747.072 386.169 749.09 386.339 750.027 cv
386.404 750.406 386.625 750.646 387.003 750.75 cv
387.198 750.803 387.96 750.867 389.288 750.945 cv
389.483 751.141 li
389.483 752.449 li
389.288 752.645 li
387.999 752.566 385.994 752.527 383.272 752.527 cv
380.486 752.527 378.48 752.566 377.257 752.645 cv
377.081 752.469 li
377.081 751.141 li
377.276 750.945 li
378.604 750.867 379.366 750.803 379.562 750.75 cv
379.939 750.646 380.16 750.406 380.226 750.027 cv
380.395 749.09 380.479 747.072 380.479 743.973 cv
380.479 732.879 li
380.479 729.664 380.46 727.854 380.421 727.449 cv
377.628 727.449 li
375.297 727.449 373.937 727.521 373.546 727.664 cv
373.337 727.742 373.194 727.84 373.116 727.957 cv
372.999 728.166 372.901 728.582 372.823 729.207 cv
372.732 729.898 372.673 730.607 372.647 731.336 cv
372.452 731.531 li
371.222 731.531 li
371.007 731.336 li
370.968 727.996 li
370.955 727.059 370.876 726.09 370.733 725.086 cv
370.909 724.891 li
371.677 725.021 374.477 725.086 379.308 725.086 cv
387.218 725.086 li
391.671 725.086 394.47 725.021 395.616 724.891 cv
395.812 725.086 li
cp
f
407.276 741.063 mo
407.276 737.547 406.183 735.789 403.995 735.789 cv
401.69 735.789 400.538 737.535 400.538 741.023 cv
400.538 741.453 li
401.293 741.57 402.634 741.629 404.562 741.629 cv
405.564 741.629 406.462 741.57 407.257 741.453 cv
407.27 741.271 407.276 741.141 407.276 741.063 cv
cp
412.374 741.57 mo
412.374 741.793 412.367 742.125 412.354 742.566 cv
412.14 742.84 li
410.421 743.309 408.142 743.543 405.304 743.543 cv
404.796 743.543 404.027 743.553 402.999 743.572 cv
401.97 743.592 401.195 743.602 400.675 743.602 cv
400.753 745.516 401.345 747.098 402.452 748.348 cv
403.611 749.689 405.121 750.359 406.983 750.359 cv
408.233 750.359 409.718 749.93 411.437 749.07 cv
411.905 749.637 li
411.046 751.57 li
409.145 752.781 407.081 753.387 404.854 753.387 cv
401.925 753.387 399.649 752.561 398.028 750.906 cv
396.407 749.254 395.597 746.896 395.597 743.836 cv
395.597 740.203 396.462 737.717 398.194 736.375 cv
400.59 734.527 402.862 733.602 405.011 733.602 cv
407.341 733.602 409.145 734.273 410.421 735.613 cv
411.723 736.994 412.374 738.98 412.374 741.57 cv
cp
f
430.167 746.395 mo
430.167 748.492 429.376 750.182 427.794 751.463 cv
426.212 752.746 424.145 753.387 421.593 753.387 cv
419.783 753.387 417.843 752.996 415.772 752.215 cv
415.558 751.922 li
415.675 750.725 415.746 749.793 415.772 749.129 cv
415.87 746.668 li
416.065 746.453 li
417.218 746.453 li
417.452 746.668 li
417.504 748.127 417.563 748.986 417.628 749.246 cv
418.734 750.666 420.187 751.375 421.983 751.375 cv
423.129 751.375 424.047 751.096 424.737 750.535 cv
425.427 749.977 425.772 749.227 425.772 748.289 cv
425.772 747.105 425.251 746.316 424.21 745.926 cv
423.767 745.758 422.888 745.535 421.573 745.262 cv
419.425 744.807 417.986 744.285 417.257 743.699 cv
416.15 742.814 415.597 741.506 415.597 739.773 cv
415.597 737.887 416.28 736.369 417.647 735.223 cv
419.08 734.025 421.02 733.426 423.468 733.426 cv
425.551 733.426 427.283 733.777 428.663 734.48 cv
428.839 734.793 li
428.695 735.379 428.585 736.883 428.507 739.305 cv
428.292 739.5 li
427.179 739.5 li
426.964 739.305 li
426.912 738.367 426.82 737.605 426.69 737.02 cv
425.87 735.979 424.679 735.457 423.116 735.457 cv
422.101 735.457 421.267 735.705 420.616 736.199 cv
419.965 736.695 419.64 737.346 419.64 738.152 cv
419.64 739.234 420.193 739.957 421.3 740.32 cv
421.794 740.477 422.758 740.699 424.19 740.984 cv
426.378 741.414 427.823 741.91 428.526 742.469 cv
429.62 743.342 430.167 744.65 430.167 746.395 cv
cp
f
444.542 749.969 mo
444.451 750.074 444.171 750.348 443.702 750.789 cv
442.934 751.52 442.276 752.184 441.729 752.781 cv
441.091 752.99 440.447 753.094 439.796 753.094 cv
437.986 753.094 436.664 752.566 435.831 751.512 cv
435.479 751.057 435.245 750.529 435.128 749.93 cv
434.998 749.215 434.939 748.277 434.952 747.117 cv
435.011 742.449 li
435.011 737.566 li
434.483 737.566 li
433.448 737.605 li
432.647 737.605 li
432.433 737.43 li
432.433 736.922 li
432.589 736.629 li
432.823 736.473 433.188 736.238 433.683 735.926 cv
434.269 735.563 434.711 735.256 435.011 735.008 cv
435.011 732.352 li
435.011 731.246 434.958 730.074 434.854 728.836 cv
435.831 728.523 436.622 728.248 437.228 728.006 cv
437.833 727.766 438.689 727.371 439.796 726.824 cv
440.304 727.215 li
440.147 728.83 440.037 730.275 439.972 731.551 cv
439.796 734.93 li
440.44 734.93 li
441.859 734.93 443.083 734.885 444.112 734.793 cv
444.327 735.008 li
444.054 737.293 li
443.858 737.488 li
439.796 737.488 li
439.796 744.109 li
439.796 746.232 439.822 747.482 439.874 747.859 cv
439.939 748.406 440.17 748.85 440.567 749.188 cv
440.964 749.527 441.501 749.695 442.179 749.695 cv
442.712 749.695 443.357 749.553 444.112 749.266 cv
444.542 749.969 li
cp
f
294.397 494.01 mo
294.904 494.521 294.904 495.353 294.397 495.865 cv
293.89 496.381 293.073 496.381 292.57 495.865 cv
265.724 468.635 li
265.219 468.124 265.219 467.291 265.724 466.779 cv
266.229 466.265 267.046 466.265 267.558 466.779 cv
294.397 494.01 li
cp
286.89 501.626 mo
287.394 502.141 287.394 502.971 286.89 503.482 cv
286.383 503.998 285.562 503.998 285.059 503.482 cv
258.215 476.253 li
257.708 475.739 257.708 474.91 258.215 474.396 cv
258.722 473.884 259.541 473.884 260.046 474.396 cv
286.89 501.626 li
cp
252.721 461.203 mo
247.661 466.333 247.661 474.655 252.721 479.785 cv
279.194 506.645 li
283.413 510.92 289.816 511.631 294.76 508.773 cv
309.266 523.49 li
313.67 532.861 li
330.253 544.771 li
335.1 539.855 li
323.358 523.031 li
314.121 518.566 li
299.61 503.85 li
302.428 498.836 301.729 492.342 297.513 488.061 cv
271.031 461.203 li
265.978 456.07 257.776 456.07 252.721 461.203 cv
cp
.180392 .192157 .572549 rgb
f
270.479 534.801 mo
273.317 531.943 li
272.287 527.994 li
268.463 526.939 li
265.625 529.797 li
266.654 533.746 li
270.479 534.801 li
cp
267.718 545.291 mo
264.16 545.291 260.815 543.885 258.304 541.338 cv
253.131 536.092 253.131 527.563 258.304 522.322 cv
299.086 480.944 li
298.366 474.436 300.602 467.887 305.185 463.239 cv
309.21 459.154 314.567 456.902 320.271 456.902 cv
322.642 456.902 324.98 457.296 327.214 458.075 cv
330.447 459.198 li
313.851 476.031 li
313.464 476.424 313.464 477.06 313.851 477.454 cv
321.362 485.07 li
321.6 485.315 321.875 485.35 322.018 485.35 cv
322.161 485.35 322.437 485.315 322.674 485.072 cv
339.334 468.172 li
340.458 471.501 li
343.112 479.364 341.166 487.899 335.374 493.78 cv
331.344 497.864 325.985 500.112 320.279 500.112 cv
320.279 500.112 li
319.486 500.112 318.691 500.068 317.902 499.979 cv
277.133 541.338 li
274.62 543.885 271.276 545.291 267.718 545.291 cv
cp
f
267.099 533.307 mo
270.321 534.197 li
272.718 531.781 li
271.84 528.43 li
268.624 527.543 li
266.227 529.959 li
267.099 533.307 li
cp
270.641 535.404 mo
266.209 534.186 li
265.025 529.633 li
268.302 526.332 li
272.729 527.555 li
273.917 532.107 li
270.641 535.404 li
cp
320.271 457.443 mo
314.712 457.443 309.492 459.637 305.571 463.62 cv
301.144 468.107 298.921 474.561 299.626 480.886 cv
299.654 481.142 li
299.473 481.322 li
258.688 522.701 li
253.723 527.732 253.723 535.924 258.688 540.955 cv
261.097 543.402 264.305 544.75 267.718 544.75 cv
271.13 544.75 274.336 543.402 276.749 540.959 cv
317.703 499.412 li
317.963 499.439 li
324.345 500.156 330.523 497.927 334.991 493.398 cv
340.634 487.67 342.534 479.342 339.946 471.674 cv
339.105 469.179 li
323.061 485.452 li
322.684 485.835 322.246 485.891 322.018 485.891 cv
321.791 485.891 321.35 485.835 320.976 485.45 cv
313.464 477.833 li
312.873 477.23 312.873 476.255 313.467 475.651 cv
329.46 459.428 li
327.038 458.584 li
324.86 457.825 322.582 457.443 320.271 457.443 cv
cp
267.718 545.83 mo
264.011 545.83 260.533 544.369 257.917 541.717 cv
252.54 536.262 252.54 527.395 257.917 521.939 cv
298.523 480.747 li
297.873 474.186 300.209 467.517 304.798 462.861 cv
308.928 458.671 314.422 456.36 320.271 456.36 cv
322.702 456.36 325.099 456.765 327.392 457.564 cv
331.433 458.969 li
314.237 476.412 li
314.056 476.595 314.056 476.891 314.233 477.072 cv
321.746 484.691 li
321.938 484.887 322.099 484.887 322.292 484.691 cv
339.568 467.166 li
340.969 471.328 li
343.689 479.387 341.693 488.133 335.76 494.159 cv
331.119 498.86 324.729 501.207 318.105 500.543 cv
277.52 541.717 li
274.901 544.369 271.421 545.83 267.718 545.83 cv
cp
f
390.167 672.422 mo
387.313 672.367 li
387.885 671.163 li
395.918 654.264 407.013 628.376 407.469 625.762 cv
407.469 622.927 407.463 596.712 407.463 596.712 cv
410.088 596.712 li
410.088 596.712 410.103 623.298 410.103 625.815 cv
410.103 628.368 396.667 658.747 390.167 672.422 cv
cp
452.49 677.411 mo
427.277 626.108 li
427.277 594.84 li
434.098 594.84 li
434.288 594.84 434.437 594.719 434.437 594.568 cv
434.437 591.557 li
434.437 591.408 434.288 591.285 434.098 591.285 cv
398.53 591.285 li
398.344 591.285 398.19 591.408 398.19 591.557 cv
398.19 594.568 li
398.19 594.719 398.344 594.84 398.53 594.84 cv
405.352 594.84 li
405.352 625.5 li
380.14 677.411 li
379.471 678.71 380.069 678.579 382.402 678.579 cv
449.482 678.579 li
451.981 678.579 453.271 678.772 452.49 677.411 cv
cp
f
413.089 579.056 mo
411.273 579.056 409.8 580.556 409.8 582.392 cv
409.8 584.23 411.273 585.727 413.089 585.727 cv
414.901 585.727 416.375 584.23 416.375 582.392 cv
416.375 580.556 414.901 579.056 413.089 579.056 cv
cp
413.089 589.284 mo
409.339 589.284 406.29 586.192 406.29 582.392 cv
406.29 578.591 409.339 575.501 413.089 575.501 cv
416.835 575.501 419.883 578.591 419.883 582.392 cv
419.883 586.192 416.835 589.284 413.089 589.284 cv
cp
f
407.778 556.886 mo
404.998 556.886 402.733 559.177 402.733 561.998 cv
402.733 564.816 404.998 567.11 407.778 567.11 cv
410.557 567.11 412.82 564.816 412.82 561.998 cv
412.82 559.177 410.557 556.886 407.778 556.886 cv
cp
407.778 570.666 mo
403.062 570.666 399.227 566.777 399.227 561.998 cv
399.227 557.221 403.062 553.328 407.778 553.328 cv
412.493 553.328 416.329 557.221 416.329 561.998 cv
416.329 566.777 412.493 570.666 407.778 570.666 cv
cp
f
427.953 572.058 mo
426.741 572.058 425.761 573.057 425.761 574.281 cv
425.761 575.505 426.741 576.504 427.953 576.504 cv
429.158 576.504 430.145 575.505 430.145 574.281 cv
430.145 573.057 429.158 572.058 427.953 572.058 cv
cp
427.953 577.838 mo
426.018 577.838 424.445 576.243 424.445 574.281 cv
424.445 572.32 426.018 570.724 427.953 570.724 cv
429.887 570.724 431.459 572.32 431.459 574.281 cv
431.459 576.243 429.887 577.838 427.953 577.838 cv
cp
f
454.827 382.497 mo
374.041 382.497 li
374.041 333.254 li
454.827 333.254 li
454.827 382.497 li
cp
457.436 385.088 mo
457.436 384.839 457.285 384.022 457.285 383.756 cv
457.285 331.591 li
457.285 330.476 456.469 329.568 455.471 329.568 cv
373.193 329.568 li
372.193 329.568 371.384 330.476 371.384 331.591 cv
371.384 383.756 li
371.384 384.022 371.231 384.839 371.231 385.088 cv
370.907 398.484 li
370.907 398.88 371.195 399.203 371.548 399.203 cv
401.854 399.203 li
402.865 401.215 402.535 403.931 401.549 405.909 cv
400.402 408.207 398.107 409.246 395.608 409.246 cv
389.68 409.246 li
388.971 409.246 388.398 409.608 388.398 410.049 cv
388.398 410.453 li
388.398 410.893 388.971 411.252 389.68 411.252 cv
438.986 411.252 li
439.694 411.252 440.266 410.893 440.266 410.453 cv
440.266 410.049 li
440.266 409.608 439.694 409.246 438.986 409.246 cv
433.163 409.246 li
430.702 409.246 428.488 408.182 427.399 405.909 cv
426.447 403.926 426.135 401.211 427.111 399.203 cv
457.117 399.203 li
457.471 399.203 457.758 398.88 457.758 398.484 cv
457.436 385.088 li
cp
f
378.034 359.157 mo
387.534 354.743 li
387.534 356.841 li
380.35 359.988 li
380.35 360.027 li
387.534 363.174 li
387.534 365.272 li
378.034 360.859 li
378.034 359.157 li
cp
0 0 0 rgb
f
389 366.063 mo
393.235 351.715 li
395.234 351.715 li
390.999 366.063 li
389 366.063 li
cp
f
406.061 364.836 mo
405.427 365.153 404.161 365.47 402.538 365.47 cv
398.777 365.47 395.947 363.095 395.947 358.721 cv
395.947 354.545 398.777 351.715 402.914 351.715 cv
404.576 351.715 405.625 352.072 406.08 352.309 cv
405.665 353.714 li
405.011 353.397 404.081 353.16 402.973 353.16 cv
399.846 353.16 397.768 355.159 397.768 358.662 cv
397.768 361.927 399.648 364.025 402.894 364.025 cv
403.943 364.025 405.011 363.808 405.704 363.471 cv
406.061 364.836 li
cp
f
409.011 360.502 mo
409.011 362.6 410.219 364.184 411.921 364.184 cv
413.583 364.184 414.83 362.62 414.83 360.463 cv
414.83 358.84 414.019 356.782 411.96 356.782 cv
409.902 356.782 409.011 358.682 409.011 360.502 cv
cp
416.611 360.403 mo
416.611 363.946 414.157 365.49 411.841 365.49 cv
409.249 365.49 407.25 363.59 407.25 360.562 cv
407.25 357.355 409.348 355.476 412 355.476 cv
414.751 355.476 416.611 357.475 416.611 360.403 cv
cp
f
425.34 359.592 mo
425.34 359.375 425.321 359.078 425.261 358.86 cv
425.004 357.751 424.054 356.841 422.748 356.841 cv
420.947 356.841 419.878 358.424 419.878 360.542 cv
419.878 362.481 420.828 364.084 422.708 364.084 cv
423.876 364.084 424.944 363.313 425.261 362.006 cv
425.321 361.769 425.34 361.532 425.34 361.254 cv
425.34 359.592 li
cp
427.082 351.221 mo
427.082 362.798 li
427.082 363.649 427.102 364.619 427.161 365.272 cv
425.598 365.272 li
425.519 363.609 li
425.479 363.609 li
424.944 364.678 423.777 365.49 422.213 365.49 cv
419.898 365.49 418.117 363.53 418.117 360.621 cv
418.097 357.435 420.076 355.476 422.411 355.476 cv
423.876 355.476 424.865 356.168 425.301 356.94 cv
425.34 356.94 li
425.34 351.221 li
427.082 351.221 li
cp
f
436.049 359.552 mo
436.068 358.444 435.594 356.723 433.634 356.723 cv
431.873 356.723 431.101 358.345 430.962 359.552 cv
436.049 359.552 li
cp
430.943 360.799 mo
430.982 363.154 432.486 364.124 434.228 364.124 cv
435.475 364.124 436.227 363.906 436.88 363.629 cv
437.177 364.876 li
436.563 365.153 435.515 365.47 433.991 365.47 cv
431.042 365.47 429.28 363.53 429.28 360.641 cv
429.28 357.751 430.982 355.476 433.773 355.476 cv
436.9 355.476 437.731 358.227 437.731 359.988 cv
437.731 360.344 437.691 360.621 437.671 360.799 cv
430.943 360.799 li
cp
f
449.092 360.918 mo
439.593 365.272 li
439.593 363.174 li
446.935 360.027 li
446.935 359.988 li
439.593 356.841 li
439.593 354.743 li
449.092 359.097 li
449.092 360.918 li
cp
f
719.761 504.338 mo
719.565 504.533 li
719.474 504.533 719.227 504.525 718.823 504.514 cv
717.039 504.447 715.926 504.416 715.483 504.416 cv
714.819 504.416 713.765 504.455 712.319 504.533 cv
712.267 504.221 712.02 503.699 711.577 502.971 cv
706.733 494.884 li
704.565 491.583 li
704.292 491.18 703.908 490.783 703.413 490.392 cv
703.628 489.728 li
703.927 489.741 704.148 489.748 704.292 489.748 cv
705.568 489.748 706.57 489.545 707.3 489.142 cv
707.964 488.778 708.576 488.139 709.136 487.228 cv
709.695 486.317 709.976 485.229 709.976 483.966 cv
709.976 481.766 709.155 480.282 707.515 479.513 cv
706.733 479.149 705.594 478.966 704.097 478.966 cv
703.445 478.966 702.82 479.018 702.222 479.123 cv
702.091 480.399 702.026 482.573 702.026 485.646 cv
702.026 495.861 li
702.026 498.959 702.111 500.978 702.28 501.916 cv
702.345 502.293 702.566 502.533 702.944 502.639 cv
703.14 502.689 703.901 502.756 705.229 502.834 cv
705.425 503.029 li
705.425 504.338 li
705.249 504.533 li
703.947 504.455 701.941 504.416 699.233 504.416 cv
696.434 504.416 694.429 504.455 693.218 504.533 cv
693.022 504.357 li
693.022 503.029 li
693.218 502.834 li
694.546 502.756 695.308 502.689 695.503 502.639 cv
695.88 502.533 696.102 502.293 696.167 501.916 cv
696.336 500.978 696.421 498.959 696.421 495.861 cv
696.421 485.529 li
696.421 482.43 696.336 480.412 696.167 479.474 cv
696.102 479.096 695.88 478.856 695.503 478.751 cv
695.308 478.7 694.546 478.634 693.218 478.556 cv
693.022 478.361 li
693.022 477.033 li
693.218 476.857 li
694.494 476.935 696.499 476.974 699.233 476.974 cv
700.822 476.974 702.111 476.955 703.101 476.916 cv
705.066 476.837 706.538 476.798 707.515 476.798 cv
709.767 476.798 711.421 477 712.476 477.404 cv
713.895 477.951 714.845 478.875 715.327 480.177 cv
715.562 480.815 715.679 481.571 715.679 482.443 cv
715.679 485.985 713.687 488.498 709.702 489.982 cv
710.353 491.076 711.043 492.182 711.772 493.302 cv
714.78 497.931 li
716.551 500.666 717.729 502.221 718.315 502.6 cv
718.615 502.795 719.031 502.893 719.565 502.893 cv
719.761 503.088 li
719.761 504.338 li
cp
f
733.823 492.951 mo
733.823 489.435 732.729 487.677 730.542 487.677 cv
728.237 487.677 727.085 489.422 727.085 492.912 cv
727.085 493.341 li
727.84 493.458 729.181 493.517 731.108 493.517 cv
732.111 493.517 733.009 493.458 733.804 493.341 cv
733.816 493.159 733.823 493.029 733.823 492.951 cv
cp
738.921 493.458 mo
738.921 493.68 738.914 494.012 738.901 494.455 cv
738.687 494.728 li
736.968 495.197 734.689 495.431 731.851 495.431 cv
731.343 495.431 730.574 495.441 729.546 495.46 cv
728.517 495.48 727.742 495.49 727.222 495.49 cv
727.3 497.404 727.892 498.986 728.999 500.236 cv
730.158 501.576 731.668 502.248 733.53 502.248 cv
734.78 502.248 736.265 501.818 737.983 500.958 cv
738.452 501.525 li
737.593 503.459 li
735.691 504.67 733.628 505.275 731.401 505.275 cv
728.472 505.275 726.196 504.447 724.575 502.795 cv
722.954 501.141 722.144 498.784 722.144 495.724 cv
722.144 492.091 723.009 489.604 724.741 488.263 cv
727.137 486.415 729.409 485.49 731.558 485.49 cv
733.888 485.49 735.691 486.161 736.968 487.501 cv
738.27 488.881 738.921 490.868 738.921 493.458 cv
cp
f
752.534 504.357 mo
752.339 504.553 li
751.102 504.461 749.318 504.416 746.987 504.416 cv
744.656 504.416 742.879 504.461 741.655 504.553 cv
741.46 504.357 li
741.46 503.166 li
741.655 502.971 li
742.905 502.932 743.68 502.834 743.979 502.678 cv
744.24 502.561 744.383 502.248 744.409 501.74 cv
744.5 500.047 744.546 497.084 744.546 492.853 cv
744.546 486.31 li
744.546 483.576 744.5 481.362 744.409 479.669 cv
744.383 479.188 744.24 478.872 743.979 478.722 cv
743.719 478.573 742.964 478.478 741.714 478.439 cv
741.519 478.224 li
741.519 477.15 li
741.714 476.935 li
744.227 476.662 746.746 476.122 749.272 475.314 cv
749.683 475.548 li
749.683 475.9 749.663 476.544 749.624 477.482 cv
749.494 480.594 749.429 484.038 749.429 487.814 cv
749.429 492.853 li
749.429 497.084 749.474 500.047 749.565 501.74 cv
749.591 502.248 749.734 502.561 749.995 502.678 cv
750.294 502.834 751.069 502.932 752.319 502.971 cv
752.534 503.166 li
752.534 504.357 li
cp
f
767.144 492.951 mo
767.144 489.435 766.05 487.677 763.862 487.677 cv
761.558 487.677 760.405 489.422 760.405 492.912 cv
760.405 493.341 li
761.16 493.458 762.502 493.517 764.429 493.517 cv
765.432 493.517 766.33 493.458 767.124 493.341 cv
767.137 493.159 767.144 493.029 767.144 492.951 cv
cp
772.241 493.458 mo
772.241 493.68 772.234 494.012 772.222 494.455 cv
772.007 494.728 li
770.288 495.197 768.01 495.431 765.171 495.431 cv
764.663 495.431 763.895 495.441 762.866 495.46 cv
761.838 495.48 761.063 495.49 760.542 495.49 cv
760.62 497.404 761.213 498.986 762.319 500.236 cv
763.479 501.576 764.988 502.248 766.851 502.248 cv
768.101 502.248 769.585 501.818 771.304 500.958 cv
771.772 501.525 li
770.913 503.459 li
769.012 504.67 766.948 505.275 764.722 505.275 cv
761.792 505.275 759.517 504.447 757.896 502.795 cv
756.274 501.141 755.464 498.784 755.464 495.724 cv
755.464 492.091 756.33 489.604 758.062 488.263 cv
760.457 486.415 762.729 485.49 764.878 485.49 cv
767.209 485.49 769.012 486.161 770.288 487.501 cv
771.59 488.881 772.241 490.868 772.241 493.458 cv
cp
f
785.562 499.748 mo
785.562 494.943 li
783.413 495.412 781.965 495.917 781.216 496.457 cv
780.467 496.997 780.093 497.821 780.093 498.927 cv
780.093 500.698 780.867 501.584 782.417 501.584 cv
783.732 501.584 784.78 500.971 785.562 499.748 cv
cp
792.729 504.299 mo
792.515 504.514 li
791.421 504.447 790.164 504.416 788.745 504.416 cv
787.639 504.416 786.577 504.447 785.562 504.514 cv
785.386 504.299 li
785.562 501.682 li
781.772 504.572 li
781.473 504.793 781.043 504.93 780.483 504.982 cv
780.262 505.008 780.002 505.021 779.702 505.021 cv
778.257 505.021 777.146 504.584 776.372 503.713 cv
775.598 502.84 775.21 501.635 775.21 500.099 cv
775.21 498.068 775.854 496.629 777.144 495.783 cv
778.537 494.858 781.343 494.025 785.562 493.283 cv
785.562 491.212 785.015 489.826 783.921 489.123 cv
783.257 488.693 782.463 488.478 781.538 488.478 cv
780.522 488.478 779.722 488.686 779.136 489.103 cv
778.394 490.919 li
778.14 491.056 li
777.144 490.822 li
777.007 490.548 li
777.104 488.244 li
779.253 486.655 780.867 485.756 781.948 485.548 cv
782.404 485.458 782.996 485.412 783.726 485.412 cv
786.291 485.412 788.12 486.083 789.214 487.423 cv
790.008 488.4 790.405 489.897 790.405 491.916 cv
790.405 492.411 790.386 493.205 790.347 494.298 cv
790.281 496.122 790.249 497.338 790.249 497.951 cv
790.249 499.917 790.281 501.17 790.347 501.711 cv
790.412 502.25 790.564 502.592 790.806 502.736 cv
791.047 502.879 791.623 502.963 792.534 502.99 cv
792.729 503.205 li
792.729 504.299 li
cp
f
810.034 498.283 mo
810.034 500.379 809.243 502.068 807.661 503.352 cv
806.079 504.633 804.012 505.275 801.46 505.275 cv
799.65 505.275 797.71 504.885 795.64 504.104 cv
795.425 503.811 li
795.542 502.611 795.613 501.682 795.64 501.018 cv
795.737 498.556 li
795.933 498.341 li
797.085 498.341 li
797.319 498.556 li
797.371 500.014 797.43 500.874 797.495 501.135 cv
798.602 502.553 800.054 503.264 801.851 503.264 cv
802.996 503.264 803.914 502.982 804.604 502.424 cv
805.295 501.863 805.64 501.115 805.64 500.177 cv
805.64 498.993 805.119 498.205 804.077 497.814 cv
803.635 497.645 802.756 497.423 801.44 497.15 cv
799.292 496.694 797.854 496.173 797.124 495.587 cv
796.018 494.702 795.464 493.393 795.464 491.662 cv
795.464 489.774 796.147 488.256 797.515 487.111 cv
798.947 485.913 800.887 485.314 803.335 485.314 cv
805.418 485.314 807.15 485.666 808.53 486.369 cv
808.706 486.681 li
808.563 487.267 808.452 488.771 808.374 491.193 cv
808.159 491.388 li
807.046 491.388 li
806.831 491.193 li
806.779 490.255 806.688 489.494 806.558 488.908 cv
805.737 487.866 804.546 487.345 802.983 487.345 cv
801.968 487.345 801.135 487.592 800.483 488.087 cv
799.832 488.583 799.507 489.233 799.507 490.041 cv
799.507 491.122 800.061 491.844 801.167 492.208 cv
801.662 492.365 802.625 492.586 804.058 492.873 cv
806.245 493.302 807.69 493.797 808.394 494.357 cv
809.487 495.229 810.034 496.538 810.034 498.283 cv
cp
f
824.897 492.951 mo
824.897 489.435 823.804 487.677 821.616 487.677 cv
819.312 487.677 818.159 489.422 818.159 492.912 cv
818.159 493.341 li
818.914 493.458 820.256 493.517 822.183 493.517 cv
823.186 493.517 824.084 493.458 824.878 493.341 cv
824.891 493.159 824.897 493.029 824.897 492.951 cv
cp
829.995 493.458 mo
829.995 493.68 829.988 494.012 829.976 494.455 cv
829.761 494.728 li
828.042 495.197 825.764 495.431 822.925 495.431 cv
822.417 495.431 821.648 495.441 820.62 495.46 cv
819.592 495.48 818.816 495.49 818.296 495.49 cv
818.374 497.404 818.967 498.986 820.073 500.236 cv
821.232 501.576 822.742 502.248 824.604 502.248 cv
825.854 502.248 827.339 501.818 829.058 500.958 cv
829.526 501.525 li
828.667 503.459 li
826.766 504.67 824.702 505.275 822.476 505.275 cv
819.546 505.275 817.271 504.447 815.649 502.795 cv
814.028 501.141 813.218 498.784 813.218 495.724 cv
813.218 492.091 814.084 489.604 815.815 488.263 cv
818.211 486.415 820.483 485.49 822.632 485.49 cv
824.963 485.49 826.766 486.161 828.042 487.501 cv
829.344 488.881 829.995 490.868 829.995 493.458 cv
cp
f
1057.67 259.013 mo
1057.67 255.407 1056.79 252.633 1055.05 250.693 cv
1054.14 249.677 1053 248.961 1051.63 248.544 cv
1050.33 248.154 1048.51 247.958 1046.18 247.958 cv
1044.97 247.958 1043.81 248.043 1042.71 248.212 cv
1042.58 249.67 1042.51 253.2 1042.51 258.798 cv
1042.55 267.333 li
1042.56 269.235 1042.61 270.498 1042.71 271.123 cv
1043.85 271.305 1045.02 271.396 1046.22 271.396 cv
1048.81 271.396 1050.86 271.018 1052.35 270.263 cv
1053.97 269.443 1055.25 268.049 1056.2 266.083 cv
1057.18 264.052 1057.67 261.696 1057.67 259.013 cv
cp
1063.66 258.076 mo
1063.66 262.49 1062.22 266.149 1059.35 269.052 cv
1057.94 270.471 1056.23 271.572 1054.23 272.353 cv
1052.08 273.2 1049.57 273.596 1046.71 273.544 cv
1039.81 273.427 li
1037.94 273.401 1036.39 273.44 1035.17 273.544 cv
1034.97 273.349 li
1034.97 272.802 li
1035.07 272.568 li
1036.03 271.956 1036.55 271.572 1036.63 271.416 cv
1036.75 271.181 1036.82 270.315 1036.85 268.818 cv
1036.9 264.443 li
1036.9 254.541 li
1036.9 251.442 1036.82 249.423 1036.65 248.486 cv
1036.58 248.108 1036.36 247.868 1035.99 247.763 cv
1035.79 247.711 1035.03 247.646 1033.7 247.568 cv
1033.51 247.373 li
1033.51 246.044 li
1033.7 245.869 li
1035.08 245.947 1036.4 245.986 1037.65 245.986 cv
1040.68 245.986 1043.42 245.947 1045.85 245.869 cv
1047.06 245.83 1048.28 245.81 1049.5 245.81 cv
1052.89 245.81 1055.49 246.194 1057.29 246.962 cv
1059.27 247.809 1060.82 249.137 1061.94 250.947 cv
1063.09 252.809 1063.66 255.185 1063.66 258.076 cv
cp
f
1078.99 261.962 mo
1078.99 258.447 1077.9 256.689 1075.71 256.689 cv
1073.41 256.689 1072.26 258.434 1072.26 261.923 cv
1072.26 262.353 li
1073.01 262.47 1074.35 262.529 1076.28 262.529 cv
1077.28 262.529 1078.18 262.47 1078.97 262.353 cv
1078.99 262.17 1078.99 262.041 1078.99 261.962 cv
cp
1084.09 262.47 mo
1084.09 262.692 1084.08 263.024 1084.07 263.466 cv
1083.86 263.74 li
1082.14 264.208 1079.86 264.443 1077.02 264.443 cv
1076.51 264.443 1075.75 264.453 1074.72 264.472 cv
1073.69 264.492 1072.91 264.501 1072.39 264.501 cv
1072.47 266.416 1073.06 267.998 1074.17 269.248 cv
1075.33 270.588 1076.84 271.259 1078.7 271.259 cv
1079.95 271.259 1081.44 270.83 1083.15 269.97 cv
1083.62 270.537 li
1082.76 272.47 li
1080.86 273.681 1078.8 274.287 1076.57 274.287 cv
1073.64 274.287 1071.37 273.459 1069.75 271.806 cv
1068.13 270.153 1067.31 267.795 1067.31 264.736 cv
1067.31 261.103 1068.18 258.616 1069.91 257.275 cv
1072.31 255.426 1074.58 254.501 1076.73 254.501 cv
1079.06 254.501 1080.86 255.172 1082.14 256.513 cv
1083.44 257.893 1084.09 259.879 1084.09 262.47 cv
cp
f
1103.06 264.501 mo
1103.06 261.663 1102.31 259.749 1100.81 258.759 cv
1100.02 258.239 1099.19 257.978 1098.33 257.978 cv
1096.73 257.978 1095.4 258.635 1094.35 259.951 cv
1094.35 269.638 li
1095.53 270.888 1096.83 271.513 1098.25 271.513 cv
1100.37 271.513 1101.79 270.413 1102.51 268.212 cv
1102.87 267.106 1103.06 265.869 1103.06 264.501 cv
cp
1108.08 262.099 mo
1108.08 263.701 1107.79 265.231 1107.22 266.689 cv
1106.8 267.756 1106.25 268.662 1105.58 269.404 cv
1105.28 269.729 1104.72 270.198 1103.9 270.81 cv
1103.04 271.5 1101.96 272.333 1100.67 273.31 cv
1099.91 273.818 1098.93 274.072 1097.74 274.072 cv
1096.61 274.072 1095.48 273.864 1094.35 273.447 cv
1094.35 280.771 li
1094.35 281.37 1094.42 281.767 1094.56 281.962 cv
1094.64 282.067 1094.81 282.151 1095.09 282.216 cv
1095.3 282.268 1096.13 282.346 1097.59 282.451 cv
1097.8 282.646 li
1097.8 283.857 li
1097.61 284.052 li
1095.85 283.948 1093.85 283.896 1091.61 283.896 cv
1089.97 283.896 1088.33 283.948 1086.69 284.052 cv
1086.49 283.857 li
1086.49 282.685 li
1086.69 282.47 li
1088 282.431 1088.76 282.327 1088.96 282.158 cv
1089.08 282.041 1089.16 281.917 1089.19 281.787 cv
1089.24 281.54 1089.29 280.901 1089.35 279.873 cv
1089.38 279.091 1089.41 278.095 1089.42 276.884 cv
1089.46 273.857 li
1089.46 262.509 li
1089.46 262.379 1089.42 261.416 1089.35 259.619 cv
1089.31 258.772 1089.24 258.229 1089.14 257.988 cv
1089.04 257.747 1088.77 257.594 1088.33 257.529 cv
1088.17 257.502 1087.6 257.47 1086.61 257.431 cv
1086.42 257.236 li
1086.42 256.142 li
1086.61 255.927 li
1089.1 255.706 1091.62 255.166 1094.17 254.306 cv
1094.6 254.56 li
1094.6 255.12 1094.54 256.247 1094.42 257.939 cv
1095.3 257.209 1096.4 256.305 1097.72 255.224 cv
1098.36 254.743 1099.35 254.501 1100.67 254.501 cv
1103.9 254.501 1106.1 255.739 1107.28 258.212 cv
1107.81 259.345 1108.08 260.641 1108.08 262.099 cv
cp
f
1122.14 273.369 mo
1121.94 273.564 li
1120.71 273.473 1118.92 273.427 1116.59 273.427 cv
1114.26 273.427 1112.48 273.473 1111.26 273.564 cv
1111.06 273.369 li
1111.06 272.177 li
1111.26 271.982 li
1112.51 271.943 1113.28 271.845 1113.58 271.689 cv
1113.84 271.572 1113.99 271.259 1114.01 270.751 cv
1114.1 269.059 1114.15 266.096 1114.15 261.865 cv
1114.15 255.322 li
1114.15 252.587 1114.1 250.374 1114.01 248.681 cv
1113.99 248.2 1113.84 247.883 1113.58 247.734 cv
1113.32 247.584 1112.57 247.49 1111.32 247.451 cv
1111.12 247.236 li
1111.12 246.162 li
1111.32 245.947 li
1113.83 245.673 1116.35 245.133 1118.88 244.326 cv
1119.29 244.56 li
1119.29 244.912 1119.27 245.556 1119.23 246.494 cv
1119.1 249.606 1119.03 253.049 1119.03 256.826 cv
1119.03 261.865 li
1119.03 266.096 1119.08 269.059 1119.17 270.751 cv
1119.2 271.259 1119.34 271.572 1119.6 271.689 cv
1119.9 271.845 1120.67 271.943 1121.92 271.982 cv
1122.14 272.177 li
1122.14 273.369 li
cp
f
1138.49 265.341 mo
1138.49 262.099 1138.13 259.778 1137.42 258.378 cv
1136.71 256.979 1135.63 256.279 1134.17 256.279 cv
1131.58 256.279 1130.28 258.616 1130.28 263.291 cv
1130.28 269.293 1131.74 272.294 1134.64 272.294 cv
1136.45 272.294 1137.6 271.298 1138.1 269.306 cv
1138.36 268.264 1138.49 266.943 1138.49 265.341 cv
cp
1143.9 263.74 mo
1143.9 268.349 1142.35 271.467 1139.25 273.095 cv
1137.74 273.889 1136.01 274.287 1134.07 274.287 cv
1131.08 274.287 1128.8 273.42 1127.23 271.689 cv
1125.66 269.958 1124.87 267.477 1124.87 264.248 cv
1124.87 259.782 1126.4 256.806 1129.44 255.322 cv
1130.94 254.592 1132.68 254.228 1134.66 254.228 cv
1138.81 254.228 1141.57 255.667 1142.92 258.544 cv
1143.57 259.924 1143.9 261.657 1143.9 263.74 cv
cp
f
1167.31 256.376 mo
1167.14 256.552 li
1166.28 256.552 1165.69 256.799 1165.38 257.294 cv
1165.21 257.581 1164.75 258.538 1163.99 260.166 cv
1162.29 263.876 1160.88 267.119 1159.76 269.892 cv
1156.61 277.666 li
1155.63 280.075 1154.59 281.787 1153.47 282.802 cv
1152.41 283.752 1151.12 284.228 1149.6 284.228 cv
1148.64 284.228 1147.71 284 1146.81 283.544 cv
1147.03 282.62 1147.26 281.325 1147.49 279.658 cv
1148 279.56 li
1148.67 280.524 1149.59 281.005 1150.75 281.005 cv
1152.12 281.005 1153.38 279.67 1154.52 277.001 cv
1155.32 275.126 li
1148.99 258.681 li
1148.63 257.731 1148.29 257.141 1147.99 256.914 cv
1147.68 256.686 1147.08 256.565 1146.18 256.552 cv
1145.99 256.357 li
1145.99 255.185 li
1146.2 254.99 li
1147.03 255.029 1148.63 255.048 1150.99 255.048 cv
1153.17 255.048 1154.95 255.029 1156.32 254.99 cv
1156.51 255.185 li
1156.51 256.357 li
1156.32 256.552 li
1154.83 256.552 1154.09 256.819 1154.09 257.353 cv
1154.09 257.587 1154.16 257.874 1154.29 258.212 cv
1154.5 258.811 1154.81 259.704 1155.24 260.888 cv
1158.1 268.427 li
1159.81 264.306 li
1161.49 260.283 1162.33 257.932 1162.33 257.255 cv
1162.33 256.787 1161.58 256.552 1160.07 256.552 cv
1159.87 256.357 li
1159.87 255.185 li
1160.09 254.99 li
1160.84 255.029 1162.12 255.048 1163.92 255.048 cv
1164.93 255.048 1165.99 255.029 1167.1 254.99 cv
1167.31 255.185 li
1167.31 256.376 li
cp
f
1281.21 498.498 mo
1281.21 494.721 1280.45 491.723 1278.94 489.503 cv
1277.42 487.284 1275.2 486.173 1272.27 486.173 cv
1268.4 486.173 1265.83 487.912 1264.57 491.388 cv
1263.92 493.172 1263.6 495.17 1263.6 497.384 cv
1263.6 501.408 1264.34 504.584 1265.82 506.916 cv
1267.36 509.324 1269.66 510.529 1272.72 510.529 cv
1276.43 510.529 1278.92 508.699 1280.2 505.041 cv
1280.87 503.1 1281.21 500.919 1281.21 498.498 cv
cp
1287.23 497.482 mo
1287.23 502.287 1285.83 506.057 1283.03 508.791 cv
1280.31 511.447 1276.59 512.775 1271.88 512.775 cv
1267.42 512.775 1263.93 511.521 1261.39 509.016 cv
1258.85 506.508 1257.58 503.021 1257.58 498.556 cv
1257.58 492.293 1259.97 487.958 1264.75 485.548 cv
1266.92 484.455 1269.6 483.908 1272.78 483.908 cv
1277.32 483.908 1280.85 485.099 1283.38 487.482 cv
1285.95 489.904 1287.23 493.237 1287.23 497.482 cv
cp
f
1306.62 502.99 mo
1306.62 500.151 1305.87 498.237 1304.38 497.248 cv
1303.58 496.727 1302.76 496.466 1301.9 496.466 cv
1300.29 496.466 1298.97 497.124 1297.91 498.439 cv
1297.91 508.127 li
1299.1 509.377 1300.4 510.002 1301.82 510.002 cv
1303.94 510.002 1305.36 508.9 1306.08 506.701 cv
1306.44 505.594 1306.62 504.357 1306.62 502.99 cv
cp
1311.64 500.587 mo
1311.64 502.189 1311.36 503.719 1310.78 505.178 cv
1310.37 506.244 1309.82 507.15 1309.14 507.893 cv
1308.84 508.217 1308.28 508.686 1307.46 509.299 cv
1306.6 509.988 1305.53 510.822 1304.24 511.799 cv
1303.47 512.307 1302.5 512.561 1301.31 512.561 cv
1300.18 512.561 1299.04 512.352 1297.91 511.936 cv
1297.91 519.26 li
1297.91 519.857 1297.98 520.256 1298.13 520.451 cv
1298.21 520.555 1298.38 520.639 1298.65 520.705 cv
1298.86 520.756 1299.7 520.834 1301.15 520.939 cv
1301.37 521.135 li
1301.37 522.346 li
1301.17 522.541 li
1299.42 522.436 1297.42 522.385 1295.18 522.385 cv
1293.54 522.385 1291.9 522.436 1290.26 522.541 cv
1290.06 522.346 li
1290.06 521.174 li
1290.26 520.959 li
1291.57 520.92 1292.33 520.814 1292.52 520.646 cv
1292.65 520.529 1292.73 520.404 1292.76 520.275 cv
1292.81 520.027 1292.86 519.389 1292.91 518.361 cv
1292.95 517.58 1292.98 516.584 1292.99 515.373 cv
1293.03 512.346 li
1293.03 500.998 li
1293.03 500.868 1292.99 499.904 1292.91 498.107 cv
1292.87 497.26 1292.8 496.717 1292.71 496.476 cv
1292.61 496.235 1292.34 496.083 1291.9 496.017 cv
1291.74 495.991 1291.17 495.958 1290.18 495.919 cv
1289.98 495.724 li
1289.98 494.63 li
1290.18 494.416 li
1292.67 494.194 1295.18 493.654 1297.74 492.794 cv
1298.17 493.048 li
1298.17 493.608 1298.11 494.735 1297.99 496.427 cv
1298.86 495.698 1299.96 494.793 1301.29 493.712 cv
1301.93 493.231 1302.91 492.99 1304.24 492.99 cv
1307.47 492.99 1309.67 494.227 1310.84 496.701 cv
1311.38 497.833 1311.64 499.129 1311.64 500.587 cv
cp
f
1326.99 500.451 mo
1326.99 496.935 1325.9 495.177 1323.71 495.177 cv
1321.41 495.177 1320.26 496.922 1320.26 500.412 cv
1320.26 500.841 li
1321.01 500.958 1322.35 501.018 1324.28 501.018 cv
1325.28 501.018 1326.18 500.958 1326.97 500.841 cv
1326.99 500.659 1326.99 500.529 1326.99 500.451 cv
cp
1332.09 500.958 mo
1332.09 501.18 1332.08 501.512 1332.07 501.955 cv
1331.86 502.229 li
1330.14 502.697 1327.86 502.932 1325.02 502.932 cv
1324.51 502.932 1323.75 502.941 1322.72 502.961 cv
1321.69 502.98 1320.91 502.99 1320.39 502.99 cv
1320.47 504.904 1321.06 506.486 1322.17 507.736 cv
1323.33 509.076 1324.84 509.748 1326.7 509.748 cv
1327.95 509.748 1329.44 509.318 1331.15 508.459 cv
1331.62 509.025 li
1330.76 510.959 li
1328.86 512.17 1326.8 512.775 1324.57 512.775 cv
1321.64 512.775 1319.37 511.947 1317.75 510.295 cv
1316.13 508.641 1315.31 506.283 1315.31 503.225 cv
1315.31 499.591 1316.18 497.104 1317.91 495.763 cv
1320.31 493.915 1322.58 492.99 1324.73 492.99 cv
1327.06 492.99 1328.86 493.661 1330.14 495.001 cv
1331.44 496.381 1332.09 498.368 1332.09 500.958 cv
cp
f
1349.03 493.048 mo
1348.89 496.525 li
1348.88 497.098 1348.85 497.749 1348.81 498.478 cv
1347.99 498.732 li
1347.38 497.846 1346.53 497.404 1345.45 497.404 cv
1344.47 497.404 1343.67 497.794 1343.03 498.576 cv
1342.64 499.057 1342.44 499.767 1342.44 500.705 cv
1342.44 505.275 li
1342.44 506.225 1342.49 507.547 1342.58 509.24 cv
1342.61 509.721 1342.74 510.033 1342.99 510.178 cv
1343.24 510.32 1344.14 510.418 1345.71 510.471 cv
1345.9 510.646 li
1345.9 511.838 li
1345.71 512.033 li
1343.79 511.955 1341.89 511.916 1340 511.916 cv
1337.67 511.916 1335.89 511.961 1334.67 512.053 cv
1334.47 511.857 li
1334.47 510.666 li
1334.67 510.471 li
1335.92 510.432 1336.69 510.334 1336.99 510.178 cv
1337.25 510.061 1337.4 509.748 1337.42 509.24 cv
1337.51 507.547 1337.56 505.73 1337.56 503.791 cv
1337.56 500.998 li
1337.56 498.393 1337.46 496.896 1337.27 496.505 cv
1337.14 496.245 1336.86 496.083 1336.43 496.017 cv
1336.27 495.991 1335.71 495.958 1334.73 495.919 cv
1334.53 495.724 li
1334.53 494.63 li
1334.73 494.416 li
1337.07 494.194 1339.54 493.654 1342.13 492.794 cv
1342.56 493.048 li
1342.52 496.876 li
1343.33 495.939 1344.31 494.845 1345.45 493.595 cv
1345.99 493.075 1346.71 492.814 1347.64 492.814 cv
1348.19 492.814 1348.65 492.892 1349.03 493.048 cv
cp
f
1360.98 507.248 mo
1360.98 502.443 li
1358.83 502.912 1357.38 503.416 1356.63 503.957 cv
1355.88 504.496 1355.51 505.32 1355.51 506.428 cv
1355.51 508.197 1356.28 509.084 1357.83 509.084 cv
1359.15 509.084 1360.2 508.471 1360.98 507.248 cv
cp
1368.15 511.799 mo
1367.93 512.014 li
1366.84 511.947 1365.58 511.916 1364.16 511.916 cv
1363.06 511.916 1361.99 511.947 1360.98 512.014 cv
1360.8 511.799 li
1360.98 509.182 li
1357.19 512.072 li
1356.89 512.293 1356.46 512.43 1355.9 512.482 cv
1355.68 512.508 1355.42 512.521 1355.12 512.521 cv
1353.67 512.521 1352.56 512.084 1351.79 511.213 cv
1351.01 510.34 1350.63 509.135 1350.63 507.6 cv
1350.63 505.568 1351.27 504.129 1352.56 503.283 cv
1353.95 502.357 1356.76 501.525 1360.98 500.783 cv
1360.98 498.712 1360.43 497.326 1359.34 496.623 cv
1358.67 496.193 1357.88 495.978 1356.96 495.978 cv
1355.94 495.978 1355.14 496.186 1354.55 496.603 cv
1353.81 498.419 li
1353.56 498.556 li
1352.56 498.322 li
1352.42 498.048 li
1352.52 495.744 li
1354.67 494.155 1356.28 493.256 1357.37 493.048 cv
1357.82 492.958 1358.41 492.912 1359.14 492.912 cv
1361.71 492.912 1363.54 493.583 1364.63 494.923 cv
1365.42 495.9 1365.82 497.397 1365.82 499.416 cv
1365.82 499.911 1365.8 500.705 1365.76 501.799 cv
1365.7 503.621 1365.67 504.838 1365.67 505.451 cv
1365.67 507.416 1365.7 508.67 1365.76 509.211 cv
1365.83 509.75 1365.98 510.092 1366.22 510.236 cv
1366.46 510.379 1367.04 510.463 1367.95 510.49 cv
1368.15 510.705 li
1368.15 511.799 li
cp
f
1382.07 509.357 mo
1381.98 509.461 1381.7 509.734 1381.23 510.178 cv
1380.46 510.906 1379.81 511.57 1379.26 512.17 cv
1378.62 512.377 1377.98 512.482 1377.33 512.482 cv
1375.52 512.482 1374.19 511.955 1373.36 510.9 cv
1373.01 510.443 1372.78 509.916 1372.66 509.318 cv
1372.53 508.602 1372.47 507.664 1372.48 506.506 cv
1372.54 501.838 li
1372.54 496.955 li
1372.01 496.955 li
1370.98 496.994 li
1370.18 496.994 li
1369.96 496.818 li
1369.96 496.31 li
1370.12 496.017 li
1370.35 495.861 1370.72 495.626 1371.21 495.314 cv
1371.8 494.95 1372.24 494.643 1372.54 494.396 cv
1372.54 491.74 li
1372.54 490.633 1372.49 489.461 1372.38 488.224 cv
1373.36 487.912 1374.15 487.635 1374.76 487.394 cv
1375.36 487.153 1376.22 486.759 1377.33 486.212 cv
1377.83 486.603 li
1377.68 488.217 1377.57 489.663 1377.5 490.939 cv
1377.33 494.318 li
1377.97 494.318 li
1379.39 494.318 1380.61 494.272 1381.64 494.181 cv
1381.86 494.396 li
1381.58 496.681 li
1381.39 496.876 li
1377.33 496.876 li
1377.33 503.498 li
1377.33 505.619 1377.35 506.869 1377.4 507.248 cv
1377.47 507.795 1377.7 508.236 1378.1 508.576 cv
1378.5 508.914 1379.03 509.084 1379.71 509.084 cv
1380.24 509.084 1380.89 508.939 1381.64 508.654 cv
1382.07 509.357 li
cp
f
1395.88 500.451 mo
1395.88 496.935 1394.79 495.177 1392.6 495.177 cv
1390.29 495.177 1389.14 496.922 1389.14 500.412 cv
1389.14 500.841 li
1389.9 500.958 1391.24 501.018 1393.17 501.018 cv
1394.17 501.018 1395.07 500.958 1395.86 500.841 cv
1395.87 500.659 1395.88 500.529 1395.88 500.451 cv
cp
1400.98 500.958 mo
1400.98 501.18 1400.97 501.512 1400.96 501.955 cv
1400.74 502.229 li
1399.03 502.697 1396.75 502.932 1393.91 502.932 cv
1393.4 502.932 1392.63 502.941 1391.6 502.961 cv
1390.58 502.98 1389.8 502.99 1389.28 502.99 cv
1389.36 504.904 1389.95 506.486 1391.06 507.736 cv
1392.22 509.076 1393.73 509.748 1395.59 509.748 cv
1396.84 509.748 1398.32 509.318 1400.04 508.459 cv
1400.51 509.025 li
1399.65 510.959 li
1397.75 512.17 1395.69 512.775 1393.46 512.775 cv
1390.53 512.775 1388.25 511.947 1386.63 510.295 cv
1385.01 508.641 1384.2 506.283 1384.2 503.225 cv
1384.2 499.591 1385.07 497.104 1386.8 495.763 cv
1389.19 493.915 1391.47 492.99 1393.62 492.99 cv
1395.95 492.99 1397.75 493.661 1399.03 495.001 cv
1400.33 496.381 1400.98 498.368 1400.98 500.958 cv
cp
f
1045.35 745.824 mo
1045.15 746.02 li
1043.87 745.941 1041.86 745.902 1039.14 745.902 cv
1036.35 745.902 1034.35 745.941 1033.12 746.02 cv
1032.95 745.844 li
1032.95 744.516 li
1033.14 744.32 li
1034.47 744.242 1035.23 744.178 1035.43 744.125 cv
1035.81 744.021 1036.03 743.781 1036.09 743.402 cv
1036.26 742.465 1036.35 740.447 1036.35 737.348 cv
1036.35 724.145 li
1031.99 733.07 li
1031.74 733.566 1030.9 735.389 1029.45 738.539 cv
1025.88 746.352 li
1024.57 746.352 li
1023.89 744.738 1022.97 742.699 1021.81 740.238 cv
1019.08 734.438 li
1013.96 723.793 li
1013.96 737.348 li
1013.96 740.447 1014.05 742.465 1014.22 743.402 cv
1014.28 743.781 1014.5 744.021 1014.88 744.125 cv
1015.08 744.178 1015.84 744.242 1017.17 744.32 cv
1017.36 744.516 li
1017.36 745.844 li
1017.17 746.02 li
1015.67 745.941 1014.28 745.902 1012.99 745.902 cv
1011.49 745.902 1009.99 745.941 1008.47 746.02 cv
1008.28 745.844 li
1008.28 744.516 li
1008.47 744.32 li
1009.8 744.242 1010.56 744.178 1010.76 744.125 cv
1011.14 744.021 1011.36 743.781 1011.42 743.402 cv
1011.59 742.465 1011.68 740.447 1011.68 737.348 cv
1011.68 727.016 li
1011.68 723.918 1011.59 721.898 1011.42 720.961 cv
1011.36 720.584 1011.14 720.344 1010.76 720.238 cv
1010.56 720.188 1009.8 720.121 1008.47 720.043 cv
1008.28 719.848 li
1008.28 718.52 li
1008.47 718.344 li
1009.83 718.422 1011.54 718.461 1013.61 718.461 cv
1015.2 718.461 1016.59 718.422 1017.77 718.344 cv
1018.2 719.334 1018.81 720.727 1019.61 722.523 cv
1020.86 725.219 li
1027.07 738.207 li
1030.06 732.152 li
1034.72 722.172 li
1035.27 720.988 1035.81 719.711 1036.33 718.344 cv
1037.8 718.422 1038.79 718.461 1039.29 718.461 cv
1041.85 718.461 1043.8 718.422 1045.15 718.344 cv
1045.35 718.52 li
1045.35 719.867 li
1045.15 720.043 li
1043.83 720.121 1043.06 720.188 1042.87 720.238 cv
1042.49 720.344 1042.27 720.584 1042.21 720.961 cv
1042.04 721.898 1041.95 723.918 1041.95 727.016 cv
1041.95 737.348 li
1041.95 740.447 1042.04 742.465 1042.21 743.402 cv
1042.27 743.781 1042.49 744.021 1042.87 744.125 cv
1043.06 744.178 1043.83 744.242 1045.15 744.32 cv
1045.35 744.516 li
1045.35 745.824 li
cp
f
1061.99 737.816 mo
1061.99 734.574 1061.64 732.254 1060.93 730.854 cv
1060.22 729.455 1059.13 728.754 1057.67 728.754 cv
1055.08 728.754 1053.79 731.092 1053.79 735.766 cv
1053.79 741.77 1055.24 744.77 1058.14 744.77 cv
1059.95 744.77 1061.1 743.773 1061.6 741.781 cv
1061.86 740.74 1061.99 739.418 1061.99 737.816 cv
cp
1067.4 736.215 mo
1067.4 740.824 1065.85 743.943 1062.75 745.57 cv
1061.24 746.365 1059.52 746.762 1057.58 746.762 cv
1054.58 746.762 1052.3 745.896 1050.73 744.164 cv
1049.16 742.434 1048.38 739.953 1048.38 736.723 cv
1048.38 732.258 1049.9 729.281 1052.95 727.797 cv
1054.44 727.068 1056.18 726.703 1058.16 726.703 cv
1062.32 726.703 1065.07 728.143 1066.42 731.02 cv
1067.08 732.4 1067.4 734.133 1067.4 736.215 cv
cp
f
1092.6 745.824 mo
1092.4 746.039 li
1090.97 745.949 1089.76 745.902 1088.77 745.902 cv
1087.86 745.902 1086.53 745.949 1084.78 746.039 cv
1084.59 745.844 li
1084.82 742.941 1084.94 740.701 1084.94 739.125 cv
1084.94 735.297 li
1084.94 732.121 1083.79 730.531 1081.5 730.531 cv
1080.3 730.531 1079.37 730.941 1078.69 731.762 cv
1078.12 732.453 1077.83 733.148 1077.83 733.852 cv
1077.83 737.504 li
1077.83 740.877 1077.92 742.947 1078.08 743.715 cv
1078.19 744.172 1078.94 744.412 1080.35 744.438 cv
1080.54 744.633 li
1080.54 745.824 li
1080.35 746.02 li
1079.24 745.941 1077.59 745.902 1075.39 745.902 cv
1073.06 745.902 1071.28 745.949 1070.06 746.039 cv
1069.86 745.844 li
1069.86 744.652 li
1070.06 744.457 li
1071.31 744.418 1072.08 744.32 1072.38 744.164 cv
1072.64 744.047 1072.78 743.734 1072.81 743.227 cv
1072.9 741.535 1072.95 739.719 1072.95 737.777 cv
1072.95 734.984 li
1072.95 732.381 1072.85 730.883 1072.65 730.492 cv
1072.52 730.232 1072.24 730.07 1071.81 730.004 cv
1071.66 729.979 1071.09 729.945 1070.12 729.906 cv
1069.92 729.711 li
1069.92 728.617 li
1070.12 728.402 li
1072.46 728.182 1074.93 727.641 1077.52 726.781 cv
1077.95 727.035 li
1077.91 730.316 li
1081.27 727.504 li
1082.13 727.152 1083.07 726.977 1084.1 726.977 cv
1086.17 726.977 1087.72 727.602 1088.75 728.852 cv
1089.58 729.867 1090 731.359 1090 733.324 cv
1090 733.547 1089.97 734.451 1089.92 736.039 cv
1089.87 737.629 1089.84 738.762 1089.84 739.438 cv
1089.84 741.404 1089.87 742.658 1089.94 743.197 cv
1090 743.738 1090.15 744.08 1090.39 744.223 cv
1090.62 744.367 1091.3 744.451 1092.42 744.477 cv
1092.6 744.672 li
1092.6 745.824 li
cp
f
1102.95 720.355 mo
1102.95 721.189 1102.65 721.902 1102.07 722.494 cv
1101.48 723.088 1100.78 723.383 1099.96 723.383 cv
1099.13 723.383 1098.42 723.088 1097.83 722.494 cv
1097.24 721.902 1096.95 721.189 1096.95 720.355 cv
1096.95 719.496 1097.25 718.773 1097.84 718.188 cv
1098.43 717.602 1099.14 717.309 1099.96 717.309 cv
1100.77 717.309 1101.47 717.602 1102.06 718.188 cv
1102.65 718.773 1102.95 719.496 1102.95 720.355 cv
cp
1105.64 745.844 mo
1105.45 746.039 li
1104.21 745.949 1102.43 745.902 1100.1 745.902 cv
1097.76 745.902 1095.99 745.949 1094.76 746.039 cv
1094.57 745.844 li
1094.57 744.652 li
1094.76 744.457 li
1096.01 744.418 1096.79 744.32 1097.09 744.164 cv
1097.35 744.047 1097.49 743.734 1097.52 743.227 cv
1097.61 741.535 1097.65 739.719 1097.65 737.777 cv
1097.65 734.984 li
1097.65 732.459 1097.56 730.961 1097.36 730.492 cv
1097.26 730.232 1096.98 730.07 1096.52 730.004 cv
1096.37 729.979 1095.8 729.945 1094.82 729.906 cv
1094.63 729.711 li
1094.63 728.617 li
1094.82 728.402 li
1097.32 728.182 1099.84 727.641 1102.38 726.781 cv
1102.79 727.035 li
1102.62 729.406 1102.54 731.404 1102.54 733.031 cv
1102.54 739.262 li
1102.54 740.213 1102.58 741.535 1102.67 743.227 cv
1102.7 743.734 1102.84 744.047 1103.1 744.164 cv
1103.4 744.32 1104.18 744.418 1105.43 744.457 cv
1105.64 744.652 li
1105.64 745.844 li
cp
f
1119.76 743.344 mo
1119.67 743.449 1119.39 743.723 1118.92 744.164 cv
1118.16 744.895 1117.5 745.559 1116.95 746.156 cv
1116.31 746.365 1115.67 746.469 1115.02 746.469 cv
1113.21 746.469 1111.89 745.941 1111.05 744.887 cv
1110.7 744.432 1110.47 743.904 1110.35 743.305 cv
1110.22 742.59 1110.16 741.652 1110.17 740.492 cv
1110.23 735.824 li
1110.23 730.941 li
1109.71 730.941 li
1108.67 730.98 li
1107.87 730.98 li
1107.65 730.805 li
1107.65 730.297 li
1107.81 730.004 li
1108.04 729.848 1108.41 729.613 1108.9 729.301 cv
1109.49 728.938 1109.93 728.631 1110.23 728.383 cv
1110.23 725.727 li
1110.23 724.621 1110.18 723.449 1110.08 722.211 cv
1111.05 721.898 1111.84 721.623 1112.45 721.381 cv
1113.05 721.141 1113.91 720.746 1115.02 720.199 cv
1115.53 720.59 li
1115.37 722.205 1115.26 723.65 1115.19 724.926 cv
1115.02 728.305 li
1115.66 728.305 li
1117.08 728.305 1118.31 728.26 1119.33 728.168 cv
1119.55 728.383 li
1119.28 730.668 li
1119.08 730.863 li
1115.02 730.863 li
1115.02 737.484 li
1115.02 739.607 1115.04 740.857 1115.1 741.234 cv
1115.16 741.781 1115.39 742.225 1115.79 742.563 cv
1116.19 742.902 1116.72 743.07 1117.4 743.07 cv
1117.93 743.07 1118.58 742.928 1119.33 742.641 cv
1119.76 743.344 li
cp
f
1135.31 737.816 mo
1135.31 734.574 1134.96 732.254 1134.25 730.854 cv
1133.54 729.455 1132.45 728.754 1130.99 728.754 cv
1128.4 728.754 1127.11 731.092 1127.11 735.766 cv
1127.11 741.77 1128.56 744.77 1131.46 744.77 cv
1133.27 744.77 1134.42 743.773 1134.92 741.781 cv
1135.18 740.74 1135.31 739.418 1135.31 737.816 cv
cp
1140.72 736.215 mo
1140.72 740.824 1139.17 743.943 1136.07 745.57 cv
1134.56 746.365 1132.84 746.762 1130.9 746.762 cv
1127.9 746.762 1125.62 745.896 1124.05 744.164 cv
1122.48 742.434 1121.7 739.953 1121.7 736.723 cv
1121.7 732.258 1123.22 729.281 1126.27 727.797 cv
1127.76 727.068 1129.5 726.703 1131.48 726.703 cv
1135.64 726.703 1138.39 728.143 1139.74 731.02 cv
1140.4 732.4 1140.72 734.133 1140.72 736.215 cv
cp
f
1157.85 727.035 mo
1157.71 730.512 li
1157.7 731.086 1157.67 731.736 1157.63 732.465 cv
1156.81 732.719 li
1156.2 731.834 1155.36 731.391 1154.28 731.391 cv
1153.3 731.391 1152.49 731.781 1151.85 732.563 cv
1151.46 733.045 1151.27 733.754 1151.27 734.691 cv
1151.27 739.262 li
1151.27 740.213 1151.31 741.535 1151.4 743.227 cv
1151.43 743.709 1151.57 744.021 1151.81 744.164 cv
1152.06 744.309 1152.97 744.406 1154.53 744.457 cv
1154.72 744.633 li
1154.72 745.824 li
1154.53 746.02 li
1152.62 745.941 1150.71 745.902 1148.83 745.902 cv
1146.5 745.902 1144.72 745.949 1143.49 746.039 cv
1143.3 745.844 li
1143.3 744.652 li
1143.49 744.457 li
1144.74 744.418 1145.52 744.32 1145.82 744.164 cv
1146.08 744.047 1146.22 743.734 1146.25 743.227 cv
1146.34 741.535 1146.38 739.719 1146.38 737.777 cv
1146.38 734.984 li
1146.38 732.381 1146.29 730.883 1146.09 730.492 cv
1145.96 730.232 1145.68 730.07 1145.25 730.004 cv
1145.1 729.979 1144.53 729.945 1143.55 729.906 cv
1143.36 729.711 li
1143.36 728.617 li
1143.55 728.402 li
1145.9 728.182 1148.36 727.641 1150.96 726.781 cv
1151.38 727.035 li
1151.35 730.863 li
1152.15 729.926 1153.13 728.832 1154.28 727.582 cv
1154.81 727.063 1155.54 726.801 1156.46 726.801 cv
1157.01 726.801 1157.47 726.879 1157.85 727.035 cv
cp
f
1085.2 396.129 mo
1082.05 396.129 1079.5 389.158 1079.5 380.563 cv
1079.5 371.963 1082.05 364.994 1085.2 364.994 cv
1088.36 364.994 1090.91 371.963 1090.91 380.563 cv
1090.91 389.158 1088.36 396.129 1085.2 396.129 cv
cp
1104.33 391.14 mo
1103.76 357.236 1096.34 335.438 1087.03 333.43 cv
1087.03 325.532 li
1091.41 324.696 1090.51 306.229 1085.3 306.229 cv
1080.1 306.229 1079.19 324.696 1083.58 325.532 cv
1083.58 333.641 li
1074.6 336.788 1067.52 360.48 1066.92 391.138 cv
1058.52 395.108 1050.16 401.678 1050.16 409.109 cv
1050.16 412.044 1053.89 423.379 1055.44 425.936 cv
1058.25 421.287 1063.36 413.464 1069.82 407.709 cv
1069.82 410.373 li
1069.82 410.863 1070.06 411.262 1070.37 411.262 cv
1100.87 411.262 li
1101.18 411.262 1101.42 410.863 1101.42 410.373 cv
1101.42 407.709 li
1107.88 413.464 1112.99 421.287 1115.8 425.936 cv
1117.35 423.379 1120.44 412.104 1120.44 409.174 cv
1120.44 401.74 1112.72 395.108 1104.33 391.14 cv
cp
.945098 .352941 .141176 rgb
f
1072.43 423.018 mo
1098.44 423.018 li
1099.72 414.206 li
1070.89 414.206 li
1072.43 423.018 li
cp
f
1079.89 451.032 mo
1080.04 449.179 1080.14 447.203 1080.27 445.225 cv
1080.37 443.249 1080.67 441.271 1080.69 439.42 cv
1080.69 437.566 1080.5 435.836 1080.27 434.354 cv
1080.03 432.872 1079.75 431.635 1079.49 430.771 cv
1079.24 429.906 1079.04 429.411 1079.04 429.411 cv
1078.69 429.411 li
1078.69 429.411 1078.48 429.906 1078.23 430.771 cv
1077.97 431.635 1077.7 432.872 1077.45 434.354 cv
1077.22 435.836 1077.03 437.566 1077.03 439.42 cv
1077.05 441.271 1077.35 443.249 1077.45 445.225 cv
1077.58 447.203 1077.68 449.179 1077.83 451.032 cv
1077.96 452.885 1078.11 454.615 1078.23 456.099 cv
1078.47 459.064 1078.69 461.039 1078.69 461.039 cv
1079.04 461.039 li
1079.04 461.039 1079.25 459.064 1079.49 456.099 cv
1079.61 454.615 1079.77 452.885 1079.89 451.032 cv
cp
f
1091.57 426.484 mo
1091.57 426.484 1091.37 427.134 1091.12 428.27 cv
1090.99 428.84 1090.86 429.528 1090.72 430.321 cv
1090.59 431.112 1090.45 432.005 1090.34 432.98 cv
1090.1 434.93 1089.92 437.205 1089.92 439.641 cv
1089.93 440.859 1090 442.118 1090.1 443.396 cv
1090.2 444.677 1090.26 445.975 1090.34 447.276 cv
1090.46 449.873 1090.57 452.474 1090.71 454.91 cv
1090.84 457.346 1090.99 459.622 1091.12 461.57 cv
1091.36 465.469 1091.57 468.067 1091.57 468.067 cv
1091.92 468.067 li
1091.92 468.067 1092.13 465.469 1092.37 461.57 cv
1092.5 459.622 1092.65 457.346 1092.78 454.91 cv
1092.93 452.474 1093.03 449.873 1093.15 447.276 cv
1093.23 445.975 1093.29 444.677 1093.39 443.396 cv
1093.49 442.118 1093.56 440.859 1093.58 439.641 cv
1093.57 437.205 1093.39 434.93 1093.15 432.98 cv
1093.04 432.005 1092.9 431.112 1092.77 430.321 cv
1092.64 429.528 1092.5 428.84 1092.38 428.27 cv
1092.13 427.134 1091.92 426.484 1091.92 426.484 cv
1091.57 426.484 li
cp
f
1101.5 638.986 mo
1100.68 642.484 li
1098.75 635.416 li
1097.91 632.498 li
1091.43 609.908 li
1080.17 634.152 li
1076.56 641.922 li
1068.32 632.363 li
1067.59 632.18 1066.88 631.977 1066.18 631.766 cv
1062.98 649.041 li
1056.07 627.572 li
1049.03 605.719 li
1045.03 619 li
1041.19 631.711 li
1041.19 638.82 li
1047.01 621.033 li
1049.13 614.582 li
1052.64 625.496 li
1062.79 657.061 li
1064.16 657.061 li
1068.05 636.08 li
1077.23 646.721 li
1083.03 634.238 li
1090.84 617.404 li
1095.34 633.066 li
1096.22 636.125 li
1100.87 653.162 li
1103.55 641.773 li
1124.61 643.391 li
1124.61 640.666 li
1101.5 638.986 li
cp
f
1066.47 630.221 mo
1066.18 631.766 li
1066.88 631.977 1067.59 632.18 1068.32 632.363 cv
1066.47 630.221 li
cp
f
1124.61 615.338 mo
1124.61 640.666 li
1124.61 643.391 li
1124.61 657.061 li
1124.61 657.061 li
1064.16 657.061 li
1062.79 657.061 li
1041.21 657.061 li
1041.19 657.061 li
1041.19 638.82 li
1041.19 631.711 li
1041.19 613.871 li
1041.19 594.563 li
1041.19 594.5 1041.19 594.443 1041.18 594.385 cv
1041.19 594.385 li
1041.61 594.422 1042.04 594.443 1042.47 594.443 cv
1124.61 594.443 li
1124.61 594.443 li
1124.61 615.338 li
cp
1132.31 586.738 mo
1130.96 585.189 1128.97 584.205 1126.75 584.205 cv
1039.05 584.205 li
1036.84 584.205 1034.87 585.176 1033.51 586.709 cv
1032.36 588.014 1031.65 589.723 1031.65 591.605 cv
1031.65 672.641 li
1031.65 674.092 1032.07 675.441 1032.79 676.582 cv
1034.11 678.658 1036.41 680.043 1039.05 680.043 cv
1126.75 680.043 li
1130.84 680.043 1134.15 676.729 1134.15 672.641 cv
1134.15 672.299 li
1134.15 591.605 li
1134.15 589.74 1133.45 588.041 1132.31 586.738 cv
cp
f
1202.3 489.461 mo
1187 489.74 li
1186.8 489.539 1175.01 482.117 1161.84 474.938 cv
1166.35 472.994 1169.5 468.513 1169.5 463.293 cv
1169.5 456.29 1163.83 450.614 1156.83 450.614 cv
1149.83 450.614 1144.15 456.29 1144.15 463.293 cv
1144.15 469.135 1148.1 474.052 1153.48 475.52 cv
1145.1 478.136 1142.11 486.626 1142.11 496.305 cv
1142.11 514.135 li
1142.11 523.371 1147.22 530.906 1156.72 531.299 cv
1156.84 531.313 1156.96 531.32 1157.08 531.32 cv
1183.11 531.32 li
1183.11 551.549 li
1183.11 554.918 1185.84 557.65 1189.21 557.65 cv
1192.58 557.65 1195.31 554.918 1195.31 551.549 cv
1195.31 523.232 li
1195.31 519.863 1192.58 517.133 1189.21 517.133 cv
1189.08 517.133 1171.83 517.133 1171.83 517.133 cv
1171.94 516.158 1172 495.057 1172 495.057 cv
1172 495.057 1183.53 498.666 1183.89 498.678 cv
1184.16 498.719 1203.26 497.95 1203.26 497.95 cv
1205.47 497.563 1206.83 496.062 1206.83 493.537 cv
1206.83 491.25 1204.71 489.551 1202.3 489.461 cv
cp
f
1173.6 532.287 mo
1142.08 532.287 li
1138.7 491.761 li
1138.62 490.875 1137.85 490.217 1136.96 490.291 cv
1136.07 490.364 1135.42 491.143 1135.49 492.029 cv
1138.86 532.41 li
1137.92 532.703 1137.24 533.48 1137.24 534.4 cv
1137.24 535.568 1138.33 536.512 1139.67 536.512 cv
1149.92 536.512 li
1150.31 539.342 1152.76 541.654 1156.01 542.404 cv
1156.01 552.691 li
1144.15 552.691 li
1144.15 555.709 li
1144.16 555.709 li
1144.15 555.76 1144.15 555.813 1144.15 555.865 cv
1144.15 557.16 1145.2 558.209 1146.49 558.209 cv
1146.51 558.209 li
1147.8 558.209 1148.85 557.16 1148.85 555.865 cv
1148.85 555.813 1148.85 555.76 1148.84 555.709 cv
1167.71 555.709 li
1167.71 555.76 1167.7 555.813 1167.7 555.865 cv
1167.7 557.16 1168.75 558.209 1170.05 558.209 cv
1170.06 558.209 li
1171.36 558.209 1172.41 557.16 1172.41 555.865 cv
1172.41 555.813 1172.4 555.76 1172.4 555.709 cv
1172.41 555.709 li
1172.41 552.691 li
1160.55 552.691 li
1160.55 542.404 li
1163.8 541.654 1166.25 539.342 1166.64 536.512 cv
1173.6 536.512 li
1174.93 536.512 1176.02 535.568 1176.02 534.4 cv
1176.02 533.232 1174.93 532.287 1173.6 532.287 cv
cp
f
1240.62 469.042 mo
1238.92 469.042 li
1234.75 494.521 li
1207.83 494.521 li
1207.83 497.539 li
1208.48 498.105 li
1236.93 498.105 li
1240.62 469.042 li
cp
f
1244.44 502.643 mo
1244.44 498.667 li
1192.32 498.667 li
1192.32 502.643 li
1215.44 502.643 li
1215.44 546.688 li
1208.93 547.529 1204.04 551.1 1204.04 555.379 cv
1232.72 555.379 li
1232.72 551.1 1227.83 547.529 1221.32 546.688 cv
1221.32 502.643 li
1244.44 502.643 li
cp
f
964.283 501.304 mo
957.263 508.325 945.844 508.325 938.822 501.304 cv
931.812 494.293 931.812 482.868 938.822 475.846 cv
945.844 468.829 957.272 468.835 964.283 475.846 cv
971.302 482.868 971.302 494.283 964.283 501.304 cv
cp
932.179 479.689 mo
925.485 478.593 li
927.273 477.915 li
927.654 477.812 927.908 477.477 927.808 477.153 cv
926.408 471.906 li
926.317 471.596 925.937 471.412 925.559 471.512 cv
917.782 472.792 li
917.335 471.93 916.819 471.098 916.242 470.292 cv
920.438 465.166 li
920.349 465.744 li
920.245 466.125 920.416 466.509 920.743 466.59 cv
925.983 468 li
926.301 468.083 926.635 467.84 926.752 467.461 cv
929.539 460.08 li
930.515 460.126 931.493 460.103 932.466 460.006 cv
935.181 467.198 li
935.293 467.579 935.628 467.819 935.945 467.732 cv
941.179 466.339 li
941.733 469.667 li
940.871 470.112 940.032 470.626 939.224 471.201 cv
933.271 466.329 li
933.001 466.045 932.58 466.008 932.353 466.242 cv
928.503 470.079 li
928.276 470.313 928.315 470.733 928.594 471.014 cv
933.589 477.126 li
933.062 477.948 932.587 478.804 932.179 479.689 cv
cp
926.792 491.908 mo
928.078 487.115 li
928.112 487.005 928.089 486.901 928.056 486.808 cv
930.271 487.639 li
930.224 488.619 930.248 489.591 930.327 490.563 cv
926.792 491.908 li
cp
920.089 480.635 mo
923.628 479.295 li
922.341 484.087 li
922.323 484.194 922.331 484.301 922.374 484.401 cv
920.155 483.563 li
920.202 482.59 920.179 481.614 920.089 480.635 cv
cp
911.587 495.349 mo
904.575 502.373 893.153 502.373 886.136 495.349 cv
879.125 488.335 879.118 476.916 886.136 469.891 cv
893.153 462.874 904.575 462.88 911.587 469.891 cv
918.605 476.909 918.605 488.331 911.587 495.349 cv
cp
908.546 458.402 mo
911.988 461.837 li
912.215 462.064 912.63 462.028 912.917 461.754 cv
919.013 456.754 li
919.854 457.296 920.71 457.764 921.599 458.162 cv
920.797 463.014 li
917.358 459.572 li
917.131 459.345 916.713 459.378 916.438 459.652 cv
910.331 464.658 li
909.501 464.123 908.636 463.642 907.757 463.251 cv
908.546 458.402 li
cp
917.749 426.054 mo
924.771 419.036 936.188 419.042 943.2 426.06 cv
950.228 433.071 950.228 444.5 943.2 451.518 cv
936.183 458.532 924.771 458.532 917.749 451.518 cv
910.738 444.503 910.731 433.071 917.749 426.054 cv
cp
980.221 492.308 mo
972.843 489.518 li
972.893 488.542 972.869 487.57 972.769 486.594 cv
979.96 483.874 li
980.351 483.773 980.589 483.429 980.509 483.115 cv
979.099 477.868 li
979.015 477.55 978.63 477.374 978.249 477.477 cv
970.47 478.75 li
970.021 477.892 969.511 477.056 968.938 476.247 cv
973.805 470.299 li
974.092 470.018 974.125 469.604 973.889 469.37 cv
970.048 465.527 li
969.817 465.3 969.41 465.336 969.12 465.614 cv
963.021 470.613 li
962.183 470.079 961.316 469.604 960.444 469.203 cv
961.684 461.624 li
961.788 461.24 961.61 460.858 961.292 460.775 cv
956.05 459.368 li
955.732 459.281 955.398 459.528 955.284 459.913 cv
952.497 467.288 li
951.524 467.238 950.539 467.274 949.57 467.361 cv
946.853 460.167 li
946.75 459.786 946.405 459.548 946.088 459.632 cv
940.861 461.032 li
940.306 457.707 li
941.179 457.259 942.004 456.738 942.809 456.176 cv
948.762 461.042 li
949.039 461.32 949.456 461.36 949.69 461.129 cv
953.54 457.279 li
953.767 457.052 953.728 456.634 953.439 456.354 cv
948.443 450.251 li
948.975 449.413 949.456 448.564 949.864 447.678 cv
957.437 448.911 li
957.817 449.025 958.201 448.848 958.286 448.53 cv
959.695 443.281 li
959.776 442.966 959.531 442.622 959.147 442.518 cv
951.769 439.725 li
951.809 438.759 951.795 437.777 951.695 436.804 cv
958.887 434.083 li
959.268 433.983 959.515 433.64 959.435 433.322 cv
958.015 428.072 li
957.941 427.754 957.557 427.581 957.176 427.691 cv
949.396 428.96 li
948.948 428.095 948.434 427.26 947.855 426.461 cv
952.731 420.509 li
953.019 420.225 953.042 419.811 952.821 419.577 cv
948.975 415.74 li
948.744 415.506 948.33 415.547 948.046 415.817 cv
941.947 420.82 li
941.108 420.286 940.249 419.818 939.371 419.414 cv
940.607 411.831 li
940.714 411.45 940.537 411.065 940.22 410.989 cv
934.966 409.579 li
934.648 409.488 934.314 409.739 934.211 410.12 cv
931.421 417.501 li
930.441 417.455 929.466 417.479 928.497 417.575 cv
925.773 410.377 li
925.676 409.993 925.332 409.759 925.015 409.836 cv
919.764 411.249 li
919.446 411.336 919.272 411.713 919.38 412.098 cv
920.644 419.875 li
919.787 420.322 918.955 420.84 918.15 421.405 cv
912.205 416.536 li
911.921 416.259 911.514 416.222 911.269 416.449 cv
907.43 420.299 li
907.202 420.522 907.243 420.94 907.51 421.225 cv
912.516 427.333 li
911.988 428.162 911.514 429.021 911.099 429.896 cv
903.522 428.653 li
903.148 428.556 902.758 428.727 902.677 429.047 cv
901.268 434.297 li
901.184 434.612 901.428 434.949 901.813 435.066 cv
909.19 437.85 li
909.147 438.826 909.174 439.798 909.265 440.781 cv
902.083 443.494 li
901.688 443.595 901.454 443.936 901.534 444.253 cv
902.944 449.506 li
903.025 449.82 903.403 449.994 903.793 449.894 cv
911.563 448.614 li
912.018 449.479 912.522 450.312 913.104 451.12 cv
908.897 456.253 li
908.994 455.672 li
909.101 455.281 908.92 454.903 908.603 454.823 cv
903.359 453.416 li
903.035 453.322 902.701 453.57 902.604 453.958 cv
899.807 461.336 li
898.827 461.286 897.853 461.313 896.88 461.403 cv
894.166 454.215 li
894.069 453.834 893.715 453.593 893.407 453.673 cv
888.147 455.081 li
887.829 455.167 887.659 455.545 887.756 455.926 cv
889.036 463.705 li
888.174 464.157 887.342 464.671 886.533 465.243 cv
880.592 460.367 li
880.308 460.093 879.89 460.053 879.652 460.28 cv
875.822 464.123 li
875.579 464.357 875.626 464.771 875.896 465.059 cv
880.892 471.161 li
880.364 471.993 879.899 472.852 879.492 473.728 cv
871.916 472.494 li
871.536 472.388 871.145 472.571 871.061 472.879 cv
869.661 478.136 li
869.57 478.453 869.814 478.787 870.195 478.897 cv
877.573 481.688 li
877.533 482.664 877.561 483.64 877.641 484.612 cv
870.459 487.325 li
870.075 487.426 869.831 487.777 869.921 488.084 cv
871.331 493.337 li
871.412 493.655 871.779 493.829 872.171 493.725 cv
879.957 492.455 li
880.404 493.311 880.909 494.146 881.487 494.958 cv
876.621 500.903 li
876.338 501.18 876.304 501.598 876.531 501.832 cv
880.371 505.672 li
880.608 505.905 881.016 505.868 881.3 505.588 cv
887.405 500.589 li
888.231 501.12 889.103 501.598 889.982 501.999 cv
888.735 509.578 li
888.639 509.963 888.81 510.34 889.137 510.427 cv
894.37 511.833 li
894.694 511.917 895.027 511.673 895.135 511.292 cv
897.922 503.911 li
898.901 503.957 899.887 503.934 900.859 503.837 cv
903.566 511.028 li
903.68 511.413 904.014 511.657 904.331 511.57 cv
909.582 510.169 li
909.899 510.079 910.069 509.698 909.973 509.317 cv
908.692 501.537 li
909.555 501.09 910.387 500.572 911.196 500.007 cv
917.154 504.873 li
917.425 505.146 917.839 505.19 918.077 504.96 cv
921.917 501.117 li
922.153 500.883 922.103 500.465 921.833 500.192 cv
916.837 494.086 li
917.368 493.25 917.829 492.395 918.247 491.51 cv
924.94 492.605 li
923.156 493.287 li
922.763 493.384 922.519 493.725 922.608 494.046 cv
924.012 499.292 li
924.099 499.613 924.477 499.784 924.86 499.686 cv
932.644 498.41 li
933.085 499.272 933.597 500.108 934.171 500.91 cv
929.312 506.857 li
929.024 507.142 928.984 507.557 929.219 507.787 cv
933.062 511.623 li
933.295 511.857 933.703 511.82 933.99 511.54 cv
940.096 506.544 li
940.929 507.078 941.784 507.557 942.662 507.954 cv
941.422 515.53 li
941.319 515.918 941.489 516.298 941.816 516.386 cv
947.058 517.786 li
947.385 517.879 947.719 517.635 947.825 517.251 cv
950.619 509.872 li
951.599 509.912 952.567 509.889 953.546 509.799 cv
956.26 516.99 li
956.367 517.371 956.701 517.608 957.019 517.521 cv
962.269 516.121 li
962.597 516.037 962.76 515.653 962.663 515.279 cv
961.39 507.496 li
962.255 507.041 963.078 506.534 963.893 505.959 cv
969.834 510.828 li
970.112 511.105 970.529 511.152 970.764 510.922 cv
974.604 507.075 li
974.84 506.841 974.794 506.424 974.523 506.143 cv
969.517 500.039 li
970.063 499.206 970.529 498.347 970.938 497.467 cv
978.511 498.714 li
978.891 498.804 979.285 498.637 979.358 498.32 cv
980.769 493.066 li
980.855 492.756 980.611 492.412 980.221 492.308 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 16.0.0
%%For: (Chintu) ()
%%Title: (DEVOPS1.eps)
%%CreationDate: 12/9/2016 3:35 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6l`M:!E[CQhJDO`71!lM[hQFLkB(e5%?sgtr%t$aR4naF]&86r=F"EFT7G4Tbe"9`X7:]D8;VdMIHYd31:EoNL]<Z=B)&\bU
%/-"gomb`Kbk4@2CIWb\as8CWq:NP9.I[[]^]1Md;qt-(:qP4)aqA6?Lrp>J(^4#h%Q`o8Ys/U?^?bZC5l\DrV]RBPIcYaeQrSl)H
%T>1/drT;)Ds7>N60Ac]oc2AG3?N.:=\bjkLg%3g&]R'SNh3TeOhs@fkL#k*KrgU*nQ(7n>;r0b9dk=Gfb?+/igR[!-H/2j*r;M(8
%POe=/^]29R?bQI8rOWm7?b_$\5Q;RUhYl]A;ucF=="j1R45%qtP'qdg^V"i>ooCc?q;T)jH#js:5JI0X)k>nPhu)S;OF5;R]3QiT
%Zh[,KdTD+rr&!BIj00&D_U&%Tgf.SBYQ!f!f>p!\hem28?Y=;=5.CS<5N,>r%K?%$0>IAC`VWa'YI8;WmH1>CkPQV9[Q`W#IGSkr
%*&g+LZer2OpR@S[gX.slq7PhD2R_[`Np_Ah0<\a]ld'JJgT)-_^O#(VHM?k+044a/epFB)OP!+o?i8oQ04)?hRl@P.gC)dcS*H/$
%J,B&B0C8Jo"OFi-_+m0W0E:_jrqaUG?bLc(6hB[]hk3JgFu.]Lro0D#s6R_.?X`jY^W9c2p$0e/^\o7eeXs9u].Im'2lW.ud]FI,
%pO2KhWK_Q^;iM9oZ(4cWF_k:_B>_:>.NNs2=#N&<o%iV=]mfQ/HfCNe`r5PUIfAd.kJsgoq.AhD50rUUrBK=l^MS<(n)(m+'@2g3
%B+KK@RK2+0TDoOjIeMpqLUUWb5JG.hHQ2g"CfYrRp/h7JisU?LVtfC)IhiATqhqr7i:S%ZpsW%<6GFJ3rRD_AfIqaRmd2r?rTTf$
%I/E.U5Ip[hm6A7pq&ceH^46%*HMI*$^\ileARGH3jsQ[h2h1eo`Ci:JI:(%M^3KV,+9.W?g2juTFedht>CNu0rt59[QhE=Y9o0i;
%OS%4qIsL_+gTO@"?BQ+C5/6pJ([o*7/gp\"04);:na;.H=Qf[ifDf<pH"!oC3;Xlr:8bLno9I!72W?Ge0(Bkj3;r,(?0]E+IknG/
%lHSL!YI!Q\PFIp.]:AGY^]*dGhL>"klS$irc][tmGJ(Q^YMQtgb;[#WGMdfH:H*e%p?`[:MpMM(X.tm9]iU\Q2]#U%J*[71bC@8S
%IsCM&(U&>]m_r9-o_R[icMs$aY7#bOg[?tV?Lk4Jm#'D%Xc%V[inr4-@Lt^"r3[ugDjf1knX*\_l\kKjs2id65J2@5me*X<1)J?O
%s7lGMXh6U-r9!\L=%@bRrUMJkCcB-,V\`]+N$FseN]bVA5-kFP]E%m%Vk8F$DXQDP(Pn]uHh$oI>@2i&o96q7oB+#YVYP`'U76&`
%q3[BNc2HgtIe*6*Ie%u<qT8GXrptWt)&)?ir;G]?T7"eF:Ha-[duU')D>X0Ors\qObNFnXH[[%2H0"/ap=sT+rn-_^r"T$-q_\3:
%p?D8gp6kWb9DA.*i9/KOcg:7n\"@]G:X(K[p??kb]2(Z5GPOEejN%2B50rVibZHC'['H$)7[`AP4I!nWX?<tI9XWAR>MX(uUYaUX
%qH0B?k:O0kC29q11U,S=HYh$pOn2oQ[eG4<GPf;W\3IIC:HeI+pYO./^@)U2RD"J?b,D(p53B?o&*)>fD@_nCSSe'\55jQWr]&4'
%Y\3lNj8M!^JRW9)c@kM2fIrlg*&s#WbNQDk5-E3fq])qmo>'NSp!7mn*&HN%NIMoG2U4/^nnAU+4>7#kpt+`U55mc)"&dC6!B0pA
%rFF0'kOt9Vd+[>GS*f&rRK:Om5_TTQk.idB"m-iuAi!ie4.?>5S-*Ji+341!r/C[Lj8=@ScK"gb`aaB<HN(#-6dOY0P_YP8*H*G2
%)eP+MNH1!JD]e'Ziu$m%-U")-c^U60EIMPq**POoT!'-qVWU[s5@B_bkB:X[7QE=(dr>k'Iidk#1"(Okk<GR.ht7kjg*&#\k-KAS
%(-ciJ@YQe1PLJ[RUE,kA`XSDOcX92\3.LpSrq#UPN6dNFSakD-pcSPAcbjhQQ2(6ukPiTdm`B+55%B#P5'FsFHs`N.TB`'.T?L*j
%#>0=6S(=3%q`O@hs6Ta6:S-D41[S[am'CRO;h`Ok9g1?JqTRHiRFtEgVXWuhcl@NV*q/K;pGhOr*rD]]d)Yi^+)MELQH*fRbf0m:
%p@.kHn8SDHpFm]/6\!`1g-^9:&)!8"c!J1A43b\ArVbRN]H?m[)'\afgunRZ?H0=`a1M41ZhX"O?,,._g0M84GFQ:7a8%FXjtp:h
%2k.G'A2!28g#7-eO*@qRM_-rY4j&CknR5&(RU4n<YoZTjO+%%JSGtRoIiRW9r6N.41]BAZs3D_Kp#_<!]77j4,I2"cffG<>/,%X/
%gja0AdqtT:8CngX+m%--Ib8sB`I>mtGoFc=eb+E(p2<%<p4H.kX5?,_U"0LGroX.5r:U-Wr>4A(](tGPru,=tos6gD$F\ZJ_:b7M
%'>>a`Y$1?K\]gRer&"9$`kYB+@AS?sR;iRG.!5UjW9-%dqBd,1oR6\R1O+-BJC_L$e\>=$S\!hDDnl)Fk4+qEhkMib06X(9ML9bE
%#Q?@T=)96HhhZ;r`d-JGLF3L;=F\49L0(J?VeJ/iL9f2s5(=4F:HZ>i0)T(+WrK1soB6edrq$kb,iSd2Js_$!5'V>1GDn;J@ncO/
%l_O8,s*HO4]NdSgHh5(u"98!,O1%NRl/"SmD>E,%c1G`ArF*[7&9Vi"pSdDka'CWN7:k2$S*oK]Ql`f1O1arR_jpE2KBefMMk0CU
%@*:R7EXf!Q_^S*c4G#!TYqqt<.IkQQW,*pM:tpcbL?]91*U7uJKng:r)Rg4l3E/#'Gu>?s<B?@*eG98I4-VhV3tseVI&EEgU5,b(
%Z7f2Pp*LX$fr4\<a*n!-"ehQSKX;MK#:p7k-k'Gu.MmiXV8;!uQ\Tol*X3F:`[)hT1cI$#O*7#e>UkI;NST=[[=OLOA3@=ij3\q+
%h?ME8!S)$hfhepS<c"-L>=<SjgS+3)&NhPDR+7`tY3oAMp>M7:G[),El\CD+7SLH3XAjPQ0q\2NbPX/CTD(5kL<Y]mZR!$)(B%n=
%hIb-5]?R3fo.$./nBBb`I@3"V0ImOn2J2q!+5t!)O5@pZ^!7)QL7R4<M<?dAPP%MP^1l.gh>1kiTA<`/4^&pk[pbi0=0)#^DS806
%\*pEM+0>4/h*8A'P&*N#)]<Jre#kLjgV]K;2BP/rlVeW!^k^N(05EJL)/Ns8%+a3nq3jI>dMV=UM4Zk)7SG%R6Q"Pph(X./^8m<5
%R6Jr5FPl,F*8QUL44=2H1qr.O2Dshj:pL]3BVTin,_m90B^4%TTg.1kpo`#F-iV-9[Q`HhLLhIVE7hp6pP-X[CY+g0o96:l,O/h"
%/djV@DGqLHb#JT1#]b-Fk\<8k@ht-+ML??!osLVOVhaqVfP?O*`mtc0B/\oI$F>+`CF3,P#OB6>h_@UuD1hXgU\qj]r0CIb;[_7%
%Rq/u93*S0:Z3+KX]Bph]0Q_W3)iRg%nBL$f]kAb=S0f*KA2sPWF3&;nAo$cnf\UT'"6;qjJi!&SlAV$=2e1PO5-FlP>3icS1lHuF
%[rn1X\oDDBIQkZ@k0?K%A[h,&-Ygnt3h>]uG<Zo4$-1]X22\#61NSF<ecqWj+(O.cZQ@Dhlh>/e4UosQ?lEbV.!ieLB9**]4AnDc
%PFAZQ4H]FNW?"e"*/R<al?k9cdcp5d:WN4:rf/Fj@ccHW01e%V\Ph'o4iuBBU\isZY2!5B\')$6$YUumZV&qI/pXuUVY"_cG\H'Z
%Cc%o1&m`(cFnR:9lR`<:cLa4QQIElZVsiBgB7SYAFUq#^GW,7_59GBhc?F-q]8j2nd6Uet(h:tbfi&b\Adl/En$NN&L,&H7M0+>?
%bkh!PpgIY%]7NQ@:@OCJR:?02[5h.KO^9$qgcR.^7Li15(T7/)KI+`Hl<9;?Dd&7,*-"9]EYJmZ/4m)p@9IoLm>Q2Y3A!5DE3S=/
%XcQ"VDPpbqB[KOXFa(2rmV0Eud_<W^3NP@/I(1l;KKh5Q@qhs7IYp>$>C?^Z-[_Jt5XFSI]=7$Go\RX\aDV;Kgg0g)An1fLI@1@q
%LqXkcS+eF=N'9CN'eZQ?>3oDbXnV7(?]X(2(Sg"XPG<@5>9B?&EV-R5q<7((olXX?4kXi3kAUIPkLTOXleenLm_,fqXVl;RA!^>1
%I<Ec?F&.5Y,lVr++o(\<:IRJOD!TeRkbk2Re5+Ij^TF]6[ph88I#S&NrXfgk9MNf)bfb"jZ"KCE9<6[)IbVQnY.aPMRAt`5Y,::S
%rq!ntN#sigcd@oa`nX!M&7G'.6Tiod2W@sp@&uXABUiLq*C2/hF*k7TRHnmPWPS)R,JbN?9)q3`(a<(<i.(J(rrqb'3pa$Unn5Z9
%0V2DX1[MJRSnE.cmciF6g(00D"71`$<l/d]:`^,djjR!hDP_`Ai;8^?Mg;/V+kkq\QFlSuD6`j)S`26aBFDN(#PtK5f@mi+8>I^`
%ZJ.Mt0_3<3a;omXh0Q#FJ0]DrjO&;ChYIh8P4#$,Jm_1+(bU)E^uPtK'C5VBYXuOD)h..S+8b?D^A<9Oe]$@tm0mqTp4E.OgH?cL
%L+M"+42$O3s,XZP5GY\Kfr#1jV]O.(IegT:1[Us_9`&M:6i&C[b\q[)+4!]i3AVasX-]7I;+'XS)&7p:rmXAD^\942GeWr7qqp"=
%<fmu5FkhHW;uH1PgtNPCh@of"\\,p5c[#I6Mgl0Ie8G^+0QR!e'YSmQ9YJJ#O%fM0A:?([n:O3=9os0)Qr0i"cgKJ1Nud'%/^6G,
%4R2E!)ud#3B`I9Yg7QY8`4p.i1n,N)AkB:$5=ZL4Ae8R;kt.@GQsGt%/VT=e^;]VYnP$JHCB^IHm<5q=Cfc#NDGOI!FiA"MqYiRb
%p@qUp6+^>;S*=VBIW*-^d0@R2)^[IYD>5qI-#ap`B\U=LZuNFXCB%nJ07&&9\a9_+pX2#dHJUcX5%[MgfM?unAGC<n>Bhc_e_g15
%hkKcsA,50"r`r%\pumMS:W$9UGYo).68&\[*8q\;@#bfBh$Ut\X:U=SVPb,ad0E$XAa#c8q+8g%BBJl2IZOu3#AQp+I:3U&).dE]
%#s>/Ooc]=jqeh<V5'N$]=!mqbeD!u="*7l9c(hC&^a9&^ciL;R',I;]2H,1QCu'EAea(L]Yn(L8ZS`,-(>3uFcQf'onRS/'cY6oQ
%US7AEmj1kI9!/VPP[`DCDO[QXMPo4Y$S^3kLL`QC@J9KDOR57!*aj/UPfO9kC(SLKZ%$"qIePbKc[3)q:l;$E;>fW77P6[D:/1Vj
%B^PP1pq)R[q9dSRIrNd.4,.RdB6`r."rG$e+RD1E_>`cp2J9b!^[aPdTRZ:6?IKth8im5f_CO_m:!$WRWVG2V2F$cMa0Hi&gPPp=
%GR&`q:TrZjqCgj8_0ie@s"V4W+"k68*s1lu\T""T?O:XbKXgB%\TC/D#2q3)\Q^0TYqnT=kKuM3rWd!/a#(qgS2AB4[,TA@mHugj
%r*pM`_irF,p%)\)k!)VPAndlSNK4T?83;fpA#u1iN/`[(gg%nF?&Y3odmF(3dR#j(VN$dPG5Kr^^i'*rDtEh9WT@S=Z.gtDa%Gj*
%4_/W=p4mN8kKXj"LPJCkc*t`(DAjY0mBN,^S#-hdc-UbnKBr?>c-3@8Qi>#Zq1"ng3Ka*of5(@.i^L*H`H2#:^\Po)n`-#3ED69i
%-@Y!B\@Ck<D)iW(;u?WM!/:>p`u]]R4o_)_rugb)8#XU[$`djdn!o*V4S\sUqHmRFF6C:s[A.cDfcADn]c`irRQ\ttDfV;U2NWf6
%ohPPbh7qt,DtG>X=o[pAqYoC>kPo,AJ$lW=r;"Ups3L)po2"')(H<Ni'dp`kP#[E9YBTSN(\,)A5<GLtj3m6B:f$l>TA7,,s7lF:
%-rXKcqt84[<%.PipM\r<!>8Xe/Y@lim^)d,0E9^3*[tP_qZVg?rsN$.?heD"q1&61B6i!:s.pN=hO8e"`YMI\'lsYcraCF]7<uG'
%O]a05&HCY$@'e:!2\]?eH95tQq)a/W>_SYbs4W^KJ\\-nL&_mJ!^8%:\_Oi.]/jiYkRGs&3[f>65Q/*oBhf>o)esX"9+D<]#<(>c
%XUX??1X`D==?ClcDbJe&(iiR0Md<LCp>#A2;/Wj(L0r6%p=_=!';8bH1u,PHEjES2(_tq$g#op!7]H2X8S8:4h#sj%#tF/XJs)1m
%CT6Xd[G#&khkgNkg&8A4?15bD^u!&Sp6(1q>MF(/.ga)72pgo"laWA]2A]cHnX[Jq/`3#VMJ##/l^lV1e1!t!YF)-RG2JOO(-\0F
%SCs]c4V76;AKBB;Q_`m$VJr;9^9p^/W%XMI#OQo!3C)3>^,3N[hqBT`hI`r>cgB(=p'u9<E9CYD.s?aRJTZ)a\BFiZRnF>FG8jGW
%d*agi9lX[IeCugl2,2hB.e\lV0_UWP8m8MAIMq07Nr^ssCet%n9EIGr,reC])8gI/&.aW\<XTEp^Va6N,W]ODebVt&D"HAMk1ac;
%3lNOpJ)`-OHcM?(FQ(D.__e,s[ju8t2chpW+?#$n>6Z7V]b4Oc"soHDYbg)O;iDce&U&*XiA-.YH8PL^H=sQ%Mn:!ShtY%E,J..r
%Km6RRHS.AjD#2;R3ILBoZEK`TEA*e'fQ`dck#J<tGUnm.go$s5RA/ZMbo:7.3aPmlVsIXHf]\f=O#1[+@6WE'hacM_+g#=`L!3"e
%kId8Ves=Vl_8(lQ)a_phHT'jJm^ENPB=UUCffK_fh$265QO.4n!QLc=beD/rG/\oIdV^^gB1FuXKMEH`^=hGrpDV@::"'hU=XH!F
%`nolP:>0P*Ymigd4iac?ne]]-ft*Ph$!2`d1W/4\@%(4oQFWD+m8=,bq0c.u8edJ0Ld83'ZmN$!JTeIiR0ug,Sk?A*H>/Jp]>4/Y
%Vr`1XngV@i`oWN7aJi@HmaT`t.sRK"<3=tf[D##;g0;!#ADjni%fG9Z'k6Ns8i3lPYn`>*e*LR2J79i%U#RGs\/M1:(*Ve0K:nlm
%CjiO7WY@]miqpIHM$[*%PLAI82C'H+B#A_Wh/8bXAb6#TOUdpl%tuXmS+W1$0Y'Pp>:4U#DBYY_pW#q<?LJf+2S`$UR0r7^Yr96@
%>H)f3F41;_g?X'THmU_i:imNi1_XgKjW3;J&=f5,^%,\Q+/WaL`^+0X$;c5qo@ESRfsF_XGiV^7HHIQW`j\+u<\Z5ohC?7oJ_!Jf
%Q#&'bgj-@fL;h!K!u=0YI.e&8AA@&&c+5na1J$n<[R0S>j#aFS_$6HHHC]eS$/dTZg:hbMj,f:hZms_YcjZ+(X+Upd'22B]/=jsa
%e,D52f?W53R0kjdb`8ZM\.&$?]kAq(1^a*49Q:J61PugiNWB6t]!lfq@(TZ5GM<2O:!NK;h0neF,(Z$&(;sGsB8TZ"[8Au%4i7*:
%N-2bJUd]]9bhBpX'_S^M3u"Lt2QWi:!buP>'6Er9J5W-B9+oP,qN)h.VLg^Ubi<`u1dtrUNL<+eV]Y%;@1r3,[ls6hH]6d^4b#G<
%Yo4r97CS_<AF26*)AYZlGaPdK$LV#`?S57g&(.'U#*7a^f3Ma2?pV*O5KYg2>W+pGH$fu9c#$.<g6A%f[]7kBA#e0_r6+Q`T%L'g
%I+TD-b93XqTYT>)#\6^s^aYSFYJ$JU]n*S)phI?LNPP_M^H'IIE8slKQf/-^h2T>=jmr*+->f9Afna5oh@t>9'MB>l&_<,ES&*IG
%H'GQHV*\sT5@clQMRRG#N^/e_EO%l#T>''9hq9K]V&/h]f"E%-PR.[DA&_dbfgiSrT!t"$F4gsaY!</Od,]Q$`2qm#af"Sp4h+0h
%o./NhKcQUjLYAr6O)Bh<X\E,*7b-:>]Fu5rbA8[ihP=A.R:Lmia$WZ_9l7U^p/9;`1uZi"DDl>Sm9T,Cl'R!)Q0lpkV/!.)a0XO+
%Po2&_6OuI::"S4R^TM[aZj8!<9Y!OTE+6[`_R,'u-n5mhM4(rm;BB(AkJ#^`89+A^&,gLR(-r3E9k\l`Zfm54Yh-M,R->lq*IFks
%A))fPLJHk4LJ;IV]jn-+KUL/qh;!?4a3:E\NH)J'<,r^7f!K(t.:iEb['R.N0:2Z+Od^":Gf/Z7ad=;a\7U7/gS=Y'$jm8%T$G'>
%51*4:1Vj3NMs;XUB/SH1[;^D+V;4ZB?#3PMK#rpo=E427a)a,)1_mMsfXn2%Lc"]u#(/`VIXFkWOg?SrB1&B;W\kLUadW$2NX\1H
%9nCl3<.mM<Zh_jGE#iPF7)^oN[5;DaF0)aT/VuGP[6\hC?,RT_4b8m52I@O>ed`Y3G5Ghg16D3GWj$eN6U7[]!Y3HXh/=so";OD_
%C,[lP9WB_"?oK[[[t@[#-gFV3=Q/,^m54-UhJPrRpIia3D4BKqg3K?lTr7N<c/dYS\`96e&tSdQZ.ch1Ct=aHJ#q[ceheg/#:V$6
%*a6B&(g*Og!Wr>BC(DK!gs2L1=WNbVa;KU1kHPbWK!F10.93B0$tQlFki3ZnU^_<I4GU^Aa1bU4,ouDCg?CUpiT`ajQHdZ4IJ3d0
%k1)N6h409**.hu?["K2&.:O6<j%IhB/)3KC8MMtN@XUDH6SbD>`h#c4I`&]!-j8gZ-?l*fQ86)eFGc.'+`H,2,oeo@.hKL$i".!$
%qLYnh[4>O$(iBGj,J8h-JLsP]h.7BD8h;8+_Ia:BNEp,X7*W.E\9GoR&S<4r1+;@9Ld(!t0/2$9_QnGa=?/6iCka[]^ei=f*9LNb
%jagMD<#c#L3C,q%'u%Q?F?)JWC:?J26^lDL&F;<L9Mf>$A<5PK\k]aVY7EFdXja6EEM!Cr2;)Ih#*TXnZMV#FG^';RFa3sMCq?G#
%OhHa3a@:lCBkrY*b8YLSL8>"`>safDHeR2A4i2nM=>=m@baJ,d2U0pLWAQXnMgE@VpPRR\Ah^/>XMAZoc"NNmpqdlcFn*n#KM+#_
%0t&iI)53d9-KHB,O_W@YfIN=,$["mOU!XA&%]pAl%$)#E$ER0NF32%Smg+,Q%pN(&_k\8K-ETAslm-X5F]Y:KTI[UDZdham,Glh>
%YF7:s9qYK(b9OO?+?2hmKft3AMgVg@_k"po_1cj/I]):qj[63$<O:-AV748h)EbZiQlHR]N+gW8^>'t.@`LcR.;UlQ7Ikl0n#!Ll
%+MEmFS&,YS`<I.Nl!s+[iI.*Ufp5.JPu?#6qbg>As1eb/4+g2:_$JY+Y?5m&[0]e`?^CRnONJGk=Ut0j<tE,4%1J]&c/T(TSDo;8
%moVfQ#OoGM1#kQ_?>M;^!p#Ul><G*f)%Pf*BoZ2mm6aT.'Y'=-Bu4X>`+cDiLSL4eq$&ns7P8u>ApWnelK@H*7kM4f%s3;t!XXgr
%QAZr"fec2n(r!L7S4aZPL4L);a06]g8P[e^AAp'sQ&dXjDsGLk`JD9-_C:40`@.A^IZbJkrH(p5/Qa6kol6MG52L4p\a2lp/1O?/
%1"ZB$PAObZJk[HT>YH.$BJde,IP<=t-*nc(_C\^mI'0QER;HZ5<l]&2DN_W8$E!!I(i+jd0r][]"o?J21l[5mD\?6k\R:M2Y+KeI
%rGFP)g-Q4%$AmcMGS$6qPi/uBP1RHPdR&Vs_6N.5kTUhU&1g;\-=S*^fYEO%XmYbHXL&0e5hukc"P,B+#o5V8m/c6n7GBZ&Yh1W6
%M(fgAMQ(=Z+LFV]/F?'?]SqB1F<ng%cGLPp*/4]&Q\>*jp`S_WC0AS(0gf\<0I-A3Lg\dkGHUH_iOi94.<Vt2Mi"GZghu.RcG5rt
%0uBaE#s<UdI;7EnVT.tVK";4R!X-4Ba3mYa!:U3$PoW*u[CR(7#R$$L,>uU:H7">/\b+33O-X[f:[j$L*Cq[pCHWlUPjmrllK;?s
%OHVsAOEhF#0]S(>=6>1N656l60PdG(%Ln4Q!6&YjOC8<9-mr[rQP$-*5hFinj(_*Vc4"kg1EqO0RWlW(9`BImka[:aKpNC<S/hWN
%di6fc3"(A_:`Ial-:l419NN&plo##WB9QJ\@F&#OGVFCsU$85UIpb8"l#P?QLPK<^$0.Hqo0dt:_gC(D"O&DUDdBRl'F&:28qd+9
%`_Mk@g*f3WecZHJltX!Sc@Jq5>Y1LmesHcd?4-pq\l4\co4kYNFrB6[4<R/;oSao7':hk0nQ@&BK4t]@F)E&^c'tTjfVITu?L4]J
%B:mNL-J-P=:e:?k"=Lr/E<ZGb2%X/1Y%D]3MdD*_2Mt:PABZaIE.n%U&=e@0VJM!T=NHZRc%ceJbmf`F5[e`ER77+fpRMa]>Rgd4
%3/3i9Xt,0/Rb"O:CTS9W7(<GsYi^#Zfso)EY>"BCpUQetd/\_3qgCfHLo(L0V%>KLAe4%3)C'&$'u2dd7Nj<5%^&-j+N$Er7[lhI
%Z'lgS;Ur/W4s:&.@jYU9P_+YfbZ71o>1'mL<U!#F#1eD5BZBRW#Z!l)b1kn,2ILCWA=*P18I"[O3@M7ZQs7?slObX'a3@qP%I:PT
%4-nh>ZBL#I9$Kg7ZWL/ZA\T5%fo9a?25F`<7i4p_0hI'$33]:^l:3X(8#1+7MW!hG.0mnI#a1`%8Z'%Yk=_E"2_jgEHm$49W/<K<
%&e:fg>%PJnHO&;d+ni&5qU:>)%HYaNJZ/fWJ@g1h7b2\'4\%1-pP-eHpm;i':%:qM,1W1K)JKa=gMC?=JU'#J0qdS%L2^,s59W%i
%M@^&3O"MG"HZatX1qJE0KHKAR^sXgLjpCG"r>d]t4/DbpZo>UP2IZTGV6?"a=#A!q%g!UcA<X"N<0]Sk]DH!C5\DX$&7ZeiM5b)(
%2.`4=b8-d+&*jUd^;`LT&KkX[NfrJ4_6hl#DSX@]J3pHu.GK*5LB,3l_o0Rf[WQ-p$Naqb%6JoU0%`8&*W+:J8QHg_GuFN2ZNPQI
%h:lqcg3qJQFrO*h8<Y\_JH#-3E_n^@OmOM<#OU_c+Pqb$#^J]GW*3be0a!65$gd\;j_?ro>@$2u7=e1^b22&U%Y8GNO[4"nNl-1n
%$e[JMFNCdCnCNa)?VsZkboqY&@h4DE)`.uM@>l?Y!tEB"\fZpA@^OC4KI1(dcAuF0%pB'J4b*n\aTs[^5aBE8101f_3&i-b".kbA
%#64,2:ltbl#>JkW7ZHT>+5c#gY*Ta+,T'@H^.=a>6#-\W!QK0X]>)3,UZFHb.me'#_o1+=<(*&8n`D.9RLedpO0K.;*jQGMa)d^#
%H)+Oc`;>:jH-W#8&37AJG;8`MlTBrB+GCIn4_cen$A=ZO_[6GTE!VI@p96tq+Lj3bf^S#nC5SVrh9urD5rcZ$+poLo/iBc/C3Y"<
%i&6?aN7;ioApXO!K2p*AR`qE6dQseQ":Rei!b*E>Fam-lQFR/J;nq#A)=1%W^^CsZUt_Dq\Y.WaH2sq_XYLKq.hL2)lJZM6au_L-
%C1(@VE^.KeX;D[aMXA"1VQ^`H-n\QA"PB0\\$>uN'IF0td'=P;<[PmL+)Y$L$\EY=`cW;aF[e!66i\&(7l>]`>R75jjU6:"*YSQ6
%`Mek=+*aV^W@#>_p,H=4Q1tHe#>5pJ;@G=kP6D>MD@>k;G?`=F+"Ok?S$EW\ltY4=kba2ILH2#A.bB@$^/Qtd=O#%qOjaO9/D&$q
%=jJI1>ke/BSj5\m&\]t@LH27!:^:4_F#Nj5m8d.?2'uXX@3.39<t`"iW:CYS@HLeAIiCZ6+Me+@#p**?$EJs5@0idP!p"Q0*pb1&
%0Ju"U_'O?&`$b&&GfN7ejE+p>61>!"0hc&X#DLI?;K7M'\'C>#&L#cZ/8&W$)G;5=>,O$?/VMS=NHCe+JU>JZQ3o3FY![V[fp(3F
%H&jS0O4_^4`*o7CY!NUA<XG7;3Ao$2.H6)c"BI4*M'O`p=+Z^.ZDL`k"_S4D-3]dCCDie<E/Cl_4BB(q!&[(t$;D3G&p&4G6q2Qf
%]s`NOH#(ILNQr6>o%KHZ<Ca=[J:!G>=9Q$OY9k]Z%Om]6#iqtqY=6)<4A-ZVQbA9D-N(?Sn\`8C+q\K3X=?:m'"N(*VRP;jVNsrF
%4%G=SbW?;s%h,(cAJ>$?^Z"&dpan1hS_P+;Aof,?>b$`Q8cIL\,KK,1%(pPgS+\Eo_3Z#JKP?8?,4((<Q]tY!h=4I'&1/HqkVM4I
%Y\lh4S42^e?oSaUA%2%$RO[Z(%$/P"1En`][u-+ZqGtdBD-;8sgR-C8HATV0PRC_b\,l#CnSE&JiQ8+0BtZn^X+EP_AB]d@#Ef&g
%VAg_S:Vf!o(^XWgfa/`n82am&63J.&3HA?.'?_'kn0-osD)3"E\1%nZ@5k]Z@!!g42/a":H'VoFiHN68JaQ?FFOQ<ug`r_l)*ppK
%"$R:C]n$/!49a(W#]df,IMos-_(q1G(%F:P1.tKG#i.mEbbeoS\-7Q?lt;&AiFr?9MM#qN/:VGmblP@q6sP:'UENpuTSM,'21]/>
%-HIMEKF"&n$70iKm0[9CehHUT8q@4$34LDKI5E/kcB4[>_mXfBe2k)XVr=Ld]&2Tp'H(hRNrXqCb:<b#duds8RrsKOSMgrfo0-U$
%bU1pc2g5ZB]])(Mor"+fM<F9m9]jWNA&XPS]7?-Ml6_WdjV5dgeFXiZ)Z`Vt:@=DCTud`%^a.lX;+PW5CF*V95itol@GuF1>6r"_
%SVphIC:9O_`SP1-*Os=]/,EU*k^\Ll$(IXfITZ!qes%/t6`3XaP2i7J7h.74[rt(GqRLbNo"0Z'1!dDkFghdQs2Qmi+N;M(88OKZ
%_^'8BXTJU!ob=KL=RWUAOYLGVHltsnMhC7TJY11u^d\fQ#WUf8C]J`hKttfDVRK98!HRU!q]d!!,W[&kckEu1Up*F@ZX^uW3BKX@
%M!D'VLRF2*@.UL46mk5lF19!\l[jO?,6n7nDSeT(+ksRn=KMk^7]79-*(1;SeUS1pE!]9aJ%VI+&0)[9'7gO-=J<(]P2Pm5_0uHN
%AH`S<jS3HqV?DM3!%\48#f0V1N.Ao1+D!Ye&XWj2mAV-!(=.AY2Ku,#o/A[lj<jps&cnW][59ho@h7Nnn9V4JI0FF9U6%o=1=Ncm
%q<,OO\)eAmg'NC4!+km^$NOgC;_[?ZSoIMOj#3SnG=;N$SIWM'HU?'_b?jlEc$+cI6/R^PC`ftJ(rrE#1DF;3;m?hA2*I),HOLSQ
%R3<B>FHK?G[MVlg.X6e#YpLInmDAMOeoZ<g+UfCt(]]>!`L&Sl6Z%-9aACFLJUO&DnTq>B\f+8hV.Q-i"?qh@J]K>aJ/(g:d8rm3
%j7-DdmPIWgTINCp#j+q@59^HS<<`Q,bu:bb-DH5j7+jMEW=/0b]cmVcJG&_LA0^:Qmg^@h3NrND"+a.c_W2QJ0DH]DoI_<K$=s9n
%,r'?MDPs/m`%.^icF'\o#?S)7JF(X=<@L.%LA+E)>n=R9CRiJ)Aj1K\=Ch43>q`aZ@0a1.OSOEkV_;</RR[EC0GBM'h8`.4Ie$Ef
%Mj&;^+5d"<0AjNkrT70?5InPDHhm6%07WNcr<jVC[)U<u]/1mk_FS!6nR[N1;1McW<gRGk#pD!lj/<fd?-jc"iJ?EB(j^q"h60*Y
%/L?mQr%Pm/U`bLA5ba7SI9r1!<-X_X6\oja6K0?4/hG4dguQgPNbb!9j]Sfn<F69a9J.]MVWa_hnRB)dVCob:%!JXA&E&Y_*4FoF
%.(mDkp6oq?&1!SJ)ucYpVI^KOid<._\PJ8AOJM.U8>r_X];OYjTlGkbVbr(o-kS`D*IrG!QXpbM%71\ar^Ck#&+X_bqiYq+eEea<
%),e&YZO:s_!Ft4&,k"pRFO1Mpq.drTr9R&M;8AndHTo4q.Hp]T[Fh)]cChkdi@23/5bk<9*jKR\/neNAAI#kYo7BXYGZjsM\YY93
%&9FHFS,h)F.i^p''/pH$`jcfp!7FNhI8_0k#HX2O4tfrqk"tcS*$\'"G]i51Ub!Ec\qfAKj4,<u_OPPi.Lm<r4Cc;b/Sd^mDK:G4
%4$$T`1E(@n(`I&T1'=idNO*QdOEtoJoY.lA/=qg<@I-U`5718K2!L@17U;%.O7ff3@lKh]#h&6*=RLB?`kC'f0>+ja&dYoU(aBGk
%=Pn?r#Wfg0o7n9B^N+IgdY!F5:BgZ;oskb<:UP9jqq#7YE3VTq0qhQ%N#%?d<%ok5-aWit`]uX.\\q74!_H<C]<*L(`Nm)JE6Sb[
%7nc[FFIZmte)G>UiTQ6'J[jF]5X[T%lQZOOJ4J3``ceGlg>tGuj<ZCnOgO312W`ukblN4B"?=fc))p$V7*:S+CjWV(-q2055+DXA
%J22_K."6][:mQH7MdNUoq@%pi^oEV."Ye#+7ND2ql<.UV4@C^iYXnlmOCtHEW<uFG]1-(=)To^\`Z@Tc*7d?<7fM5F7p>TBaFtZp
%`1t]Zm7G<;-BMKZm\>XD3%gY:l`eg%G3]VF4p4ej]=2kGBH!M23=.c1Ylg?u0eSUdQuutPJb0/l,<8A4="3hPbXL*g_:a@aTgQ=H
%&b:E?k+-*AdXQ4]9YdSIF*OpgkW$jd48NAF)irro5`]GM$D9u;D27i%I"uj(r,0_4"c9^E"i+_9#>W:a+/65YA`5%^[gdrseiHE+
%3I*<fRPO<sI6[hnZ&tU?;j`<Z#f_(W_lTHP][TeeT'8fq=jK2[^2k<pZK3JW.\Or'=H>qt!u7XLJ&i!Q6"2a&&8FJ[ZY0I7F?:[G
%NhO=Y:YZKI3#\diQ3qYLcu<6O&I=.PiVI=FOZ/'AE+$tU'h=ArhJVkp>@b^n@3d!S`QBN`2):rn,\cR#8I-V1SpWPE4<l@p@>G5I
%3&F_ciH#d<eY2%,ohtp;)]msi017Y(Q['1lLZdiP^T]"1^eg%4+XX(2fsU[]GS)e6P7*rlZ,TgBZA&GC&X%qIfTKVfKZ2,c1@Z2-
%_.FO/k^c<hZ$J)1O?R-hd^b['!(M\RBMNMTX]-?4OXGDa3RA@EfWg`GJbB\\j'r+>7uSRPN4T.!.U%&4&RH-\h[eH]7$39GXChhZ
%M)e=BSM&d4E#1kq.Eeogpjn.uqf`6H28J3#:R%l(0-u0]?kO+d!LP^=:2ZEWnYgHS"+<1e;1D'f#5U$#LkiJTQKRTi&$uO/paIGt
%4d!M4"D:"S%O8V?V]`g+mj<XBEjT=ultGR"<Ld@sAr7))OdBPeK2`CZT1h7?+/;)M0\MO&PLIt]236X<jm\E.5U:J[!YBS@kd9@6
%-!cI`K+k`$0m^cq8q_a&B=gbeRB8+6W`DDWMc<fA6\*SmB#1dYn+b0^)HNGL^)S?WNQ[*U4CDA7G<(>e^^T'e7Gs#:)$!>sBR^cm
%6'MkRZDVXe#R]k!L4[4iM^/9A_+\`G6CB,%$j^GL4]X?L=b=,WYt-YY$+Ia4`arr6$mt;Y;7]gLpOU0aH#E]WP>K$<<Ihmdc*Zt+
%?N;f]2C=3c?QkUeI2?G%HB8Nhpsl/)&(*?>Q%$:f4c2?.<-4'HPYgq^EWr3+>"f`3P9Si+a;lcg*M"54q>f;%%!c=,5!iur>!n8n
%6*>+b;1Q8HcCh(64,s8`UpK;!UsMnrN<,-SCWmlo2>1bq168M];=[U:4Gd)nKkrnM=Z,bkG#JBY)P.ue7`Ek9ENnMONoZ0o3+5@G
%Ws;t*@!H4mNC4H\-(HWR&<NW<,A1"Q;:$0.EO7o)6t\lT'T_?U):s]:lfEo`3P?'3H)6DalA+RcL%'gac=kBTo$2Io;ss-c8j9f0
%9^uVPJWq9m+or%W3*d7KY/X+8+QA2:!o[4daspI%I#5(GGC#3GjLBKm,mAqE/hcdo<%baFeV>nG8lJS_=5Afa5sU'A/6qkBE%!/7
%TYns7,Ijnr='q[UIs7Be\6HuuOO+!_Zd4)8LBY(ZYK,M5=9Sa-/PsZMBQN^NfF^N,4]S@hn=#gh`A<OUPK+XtrPj)`GFg0;W<SNa
%E&dHX(]=I0LeM=M\lGBa]DTE%4H`We@92(nWZ)"MM4,6sY%I5o7hd'4A8Z)'amgmIbN@k(hQ!VYV)\mO[7J5b"<+R,ImnAB'^rW7
%Em(JO)]j]EMpYb-e)Jd3f$A>b,^&%ni23I;MSfuJ?ssiS8FAaI!c*lu*@:<a\..<kEB,MTeqJEt)65$2brV)J7?rZ5fH;7D6'?Jk
%ili*O#+Nm'o!j.FjE1rD"XG+T;*4uhg2XBWqEYIm1n[N4nC,6&*PS-uf0uE1,4N[`Y>Atk3s)k8nN6q-FUP)qc4;l8$<U[jC@NoR
%ft.nj%^=E>b0\3s`#KY#QI'+bi2Ftn.>*0243=:$m20M%?"3K<&DdjiqPs";"Ve-?F9<n)4MiV22;0%IPb!a^X10]YE6EVRisa+m
%L8m,1^0+*.*T=UBT7:0r!-Ah6`%t4$0\2J9eY/Y:]^T1eWEA.0f9dK7a?%etfc9CD4Wq&%DCFPGgSOj<HU%!W/6/n%Ql,[;^[2s%
%-sn;m$!u>YF5gd^bZ/7N'Fj[uR%@S'Sp!fH=0'X5oYJ'pcP@6^W'bd>.E"<<f4t`G6NL-&RYIj\OU\83U'V8p7Eng$BK\6+rr?@+
%P]W'-N``SCl.JnNTGkdf,e20H$Z<2n+gas;%_`'^H4kl:M>fu#&_?V]^$KV18l$(9ob.cOB+Uk6NknOIcJCn'N*\TV7lWTD6mTJa
%]E_pPdLqADdDSJf&igo\+"V4:PF]><k4m:o:M+:h4mJsWL^!]3"J5GD<mFj'c0hc([BrI61)PSZNY_096jWf8-QX'D*/-\<fH5.n
%!<-KNNMOA<C;j1sGTeF*NXYUV@2(uUi&hBTJIET)QgVS"RLU2%SmkI4A(^as7FMJnT61k%,>CT`+i\U07_LX".A.Frn[Q23=\dIL
%Y;q^=ZkJ,.mC]-<[gnms@aHn2p.MW\5\<YMG$h6\Gf9Y&;=HK6H">uWMAX)TO-&sV:]SH"a<EU;+<qeK[:>-9N.utf&uS.X@4HWB
%om/e)hQ@5:""B=ZXEoLF!5&D*0*#NNPaL0'it?H0jPUA7T'7pscm$ms@nkNb,kHQG:l<AN^7r')Ep^FK/:=@NBS-2MXj]oH\nBE@
%aM]mo3t"TVQb_QB#>(1"/BBV%=9pB8H9R.oEF#(uI2RuH\3c-JJIR\YoEmV@J2!(qAfs.F/*P9oX'[SQq[Hp,fa_a'_0S3Z"LK#$
%(R2+HI+=<f+_N5ED?hOu@:iQ:9G$Ei5S#AQ6'J22at!9#.kit2pjNtME;5&MTG+[u/E^]$Es;rfE2j7U$1r\`HgB80FUX$6-0trd
%U4c/U.i1?6164PfO4V;a?W>09<UT*.?.iu]qafWH4h5?=#m/9U@Qr:0#lG9ua&>t"cM<8tME4\(4.(3uK/Y'Y.(VJ`lTeutW5fa%
%*"G\e!f!J[L_+aL3PjrG:V=`R\r)ID36J6sJFRWD<m(SrQJ7pY7-7DAJk7#)+G.2AlKSk*f-4)9?;r!'e%'-9A=:ga!lee/q"#&H
%N>aL:).CPMV':K1F_Gh$L\*pYo0Hugi5S%[[#YmuaG\rVruSn=\2(+j\tgUG:10$g[\G;KDrHqsH(nIfVlAVu<-\If[)3c(BEoa#
%Wib-UH3&`'>ce>';Sh_1=<Io"!&XcF:QD&>;1Zn%T5%F&ecNXK*(ddc6\XT_cq;sGY9Qt5E?5gGe@[(o%U2!-IoPil$)%/hDSE\9
%T>,2^TNua&6)<Qdmku2#o[I]'pq7VY67DlJcM"@fqZqiET76alT>,XLk-KiP?iBi-\,Sugj.F)5qor2kdZ6?_`N-1K]m0SBo?ZbI
%:Tls#Ie(N<J+pGInO)$j+38[(PVa;0hRSt'r@qo&6HIFQo?a!f\;h0-!n.57Z-M.F"W#G:(\Mc@IV*4VL.r'2b*i#AIebC%nK,TU
%[4<oaA,'HUiLO,4!CA-lTp$PX475!dO7Ad<`gQFcNFWYUCkab?+?8f+43o:%a1t`MCb4e1&^(?3UY(SG&8%<D-aI6T^Jc_BlPKf#
%Rm819Up,C!q2,]_j0Osq^(kf!F@d#afAZqF(S9Y*1sEdW>[a;gEmPfXU8#4LcZ+*CXj\77IbSh*U,d,*dU$UIJHlphOL#o_&RX#'
%Ef;]61r>[A(m0nbo"f=)qHTm',$RH_5TW]<NWBAUD&`]!9f/Q%hO*3p-fi8]c?X@Jj"t<&#\mjSXmPcfZZ/@LNTslh`kZF,phrH7
%%*),='5(Y3!4=F_j5&D'(T['i*,'KW1kr21**:,@[<J<VK@(P%[$M:Fp(`qcI3*LMI@fYt1#\k4mE0&]<E`.1MupQKm)EQlm_N^_
%+Z"jEX;n<_)>E)R?VhX7l6Y\--KFO1O!$29-\e=`i%^g0XEU?m7Tnse:5\!Uqp+t;O;R#))HR8UZsiL6(lY@/$93SkX=`)j(]NF!
%.jZ,+`L,1p?A#p.pC:!Z6=('S)'"Xo/nUY.'LZmVF-._BhLu>`F%\F$Mn)SD#r/uK([UP+>ti`eR0^LgFOOF.EZt3Qm,b`rJaIJt
%K=Vo'+!K=1/iK>S.IT'6nT:Es&/T+oK+Z[kMn+]iE-<BWQ?:]s0+7l@LOJ]XD5t[h0Gefc+N36W`ADW/EG<DUk(U9hH6>(YMnsO%
%jH?9O;4,`,Q*Y_8"?[NZ_g;a-ior1t$XYWAQs;pYMuX#jlG6M[qe48o]@q@p\B\*5GlWm_TY&#6&X%KM.\?.,>?aM7*(2]BSYm=J
%.?*<q9efaZiJe"6ELUG0%@6#9$n)pTioZ?A+=RN6""%`$'SG?Fq__V,MOVZ:JtX$(caZk,']]';2UR/_&@mo(J?nb['0opEU*k\$
%!DEI::/%+Z1_r+AXpel<'-kMWnT1BNAtAI`K:*SG.A$iKq7PkM_Fn.IC+4Ca5p=i[Y!?M%Ba4<OAL0ggTSh]q.LOr:H`N'g(uMt#
%Y)dg&&/GHp0lnk\r/$NF<q-`.pkXhYcCcCOi4G:<fSEsW2,c1F11IgpZNM(ap15\OLn>T,8)2Q:buhtUhQK>c./j2H8MnAYfjNen
%/QBK8/S>jY+Op`1@\sH#@)pl[7TmJj8rB)?>_@SE=!H\>1CH.knmcApo+//OA0*;@XDB4<S#Rft5)05\-6G]GId(on&#6L;Di6SG
%,eu/XNb@A1k3f_M%-(Y((1NZ1<G]MWkqGZ*&aKkN@=6s(_PUE:^9_);bW(RR5H&%DE1!sIKeFV_>[Pg!_^HA?Je`+>k'N6a/'*Ga
%,)%L/4h-6/Fbc4n<5Th6hSg>5HA3baJ.'aYllMO`_(uK?_pjOl%-.*GN!mgJ'?rm`$mT<gdlf+6)lfiW].sd^kj'/['YZs1#JVt"
%9"gAq_aYk8X)eXN:5J]XeA@lV!I)nE=Vr#QgoqG""(!ud?G+/*pSGCH$57-Ye\s!He:Z5+;E]R7(s;`m.1?h^Pe.-r0O4q=XYU<:
%"-f#H9IL>)>cDu\$Bt"d[DaMPmqJ(<ST(00apU,dX<;"l$):4/=!lm(1q&rG(hmeb.>p^+'YTb>NA.Y^=kr?``4Lg/(-D#'p:4Js
%_BFm)7kRF=i!A/V?kD0S'$>U=+Ddg>PTq@``_rb<EkB+fjBA1[#GZU>on,@DY/Ag$mbgh8e15Yq3:2#VR"Mraq8"#_;>jd&K<]SC
%lkQ>4^i*[*=erm!m_XZ5(rX0k2\oomVW,Q`(d(7<FQEm"(2rMs/f8^rF`@Rt7hT,D?=['`WBh9CK1\=pJu@P&=/+V**OU-D;:Pp7
%/SKarqh6=UKL$55'ch8i?gt89B0T;tUVLu;73dcT@SqTFGcp`<bRY]1TEdrK'@+5BJUPUFaFP]pfl_9:K5LYn9i(q1FJq'D&+&Dp
%63T5#E%%e'%r1$^0Xig?eA.HTij*`Fi1K#7@]sopi/L1DWEdPr;%ZHo95k!N%P)s)"#Ddig6ENmP`h\PEaiDq2q3hF(RQ7hGsVmT
%ZP>8?fZHHD_Al(M!^g`WZuTRY`[dnE&iBk4fsueCTS^67o^RSK=EJ-=huqo,ZS*_X&\]^Sap<qS254,;#Rj\Yek5E46Q9l#7P8eu
%=E"7Y$8u9G0sFb0MM)Os.cneVS:(o$VZLJ\2sCd)"2K+_Xqr;?lrggU!CjY)lq@mTD$h5Q=b'qjTf+i3JFTXnkZ/N@:e?=a/f_YM
%$jpD#=N3mi!gmn[lm4#14CD#'2F.<OX9+VrnGhMBU`qnlrt^[#"oWB03qm%^"Tj2kW`'KNWOe3&EUI1q#Y_Ob8.J7#g3[Jp?e?aQ
%5XG;UN<dJei:Ljl-(sdrpm9!L3J>V(T88!Wqh=fh$(^k#@Hj_3nbt^0Et:>L&SWUW47iGdUQ_rrIoH#LZGl\K^r-phk/@.dMC4`,
%mk9]2^*%ZMZ'Cb9lF??_;G;UdOS;)9XA&-_-5K/?q$HLC:`A\ZUZLq805,haiU'l`Io?Xdm\'LnDlY[l.76J$#;B3qg0ZVO$Y1O:
%?aNde,\V\LAD;aZpjh<h/-]4SrP];bo1QH%p]Ij-(Y2rUrRQ"nrpg)H@1(Rmr[Kp4nj*tULR/SWlS#SP>FPl`00=uIoYUH_<0_K5
%cMEHCV$'Dprb;]m"a=SWAVuM0<[[hld4Bo<:AW/i!uN;sOT+5H_I<c705a@\\fgt58K$m.Yl:L>b_!\-9:-L*C4l2G&rubqm4Xq9
%[cXs3PRrE`[(h^,HK.Wp9>4XQ"(_@!>a/f,Mt`S.7:ltS[(ji7BjNgg0>g:P`qdiKc%38=hHqs:'M!_jZN^d`+eumMMquL^;r3r7
%GIAp0Fj=>8f%WLdM\E@]i_9-*GRuqrpjO+S;B:Tmro-e>[_#B8cKQuF(k61=,XW.B+t\qIBE-oe75Ro3a*F*NE9PQ@qh9RMoG=sn
%OWBAsAA8\3P0pgh,Bn1)qF)9KlNbfjj)`0u:%U]b"$*PQ^O0pNI"U[M>rXsDVg[W`U7W6rhoXSGBDFtAN.Ej!q8IP[c"E2HaGRKQ
%)<&F=(lNNo?dbN`mE4pf2J6h6L0k/J3NaQ9NR^l_Q=l(^l8>kY#K8@R4JUJ&n]R8QhcqRY)92,V1&UT(9ZCK8V8/LM%u+GfJ6H:g
%^WOsJ]GQ*c`;sblL#Ehl:"q$4IT^?;Kfg3$nKai(4Z!"VIgX+?K&RRbT/4M:Ied;P2gFK[V%cS8F8W>"*:`ITpk=7OM[RQYUd5I&
%CBAZ2<l+<!!OnjdF8QZa8H=inr,R:RVAQc2%q%-->&b_]'qWmW(F6aXN.ms#nsb6"kecp!.J"Ioo,Fo0dJP?>+H7np08)_b#0SY'
%=P8>gQND(#F/Jbe/f0#Be,3r*L:IQ60='lm@2GA>8Ehr6bqB2FAI4f4$<ZPA-Mj"W?:>G(njKRpFJ<+J=RgDTqW0%>G`!X?<FlFk
%S^k-^Dg$(CqUKIuHW`bOfSG?AH4^#VeQn]7pE9;Yem!OZ_K]$m??VoIIcp2aoDDLd7$FQmM&7ng,KST;62Z5+q%Z:[/)NWD$+G&/
%*=t'B$iPLIq5"+jH0RN,GYoMRE1UE9$L!6QcS*5RHj.hL,eeXdcS$T'%pX@.e(T;gBmt=[;G@A?06$r4H4epuo8<j=2&8$`>cj8E
%G"+T]5g0pKG^bLp!k'CgIaLuWI6mI_QQ[]3$dC>4qG(Da1qsl:!]UD/Ded"Gk`t:sAO<)V"Kb/7;@jhGq5*UVb*b'10;Z&KK'$,I
%^C;'/+.3!SQN1cD'-.#0q%^G.DN!ZoHC%`KkP<X^R/<03QVnZ<_=NSk';-@.^CYA;](#VQKg3L]+;16i)<ZY8=+Xb^4MSBI1Yfh<
%b?6#E:RYQk4.Pg-!8JaJLPh=(q.6-SVa]PP"Z?!o-2N=9o0as[+;rmG&";Ar\n<NpQ<snVVrJdYL)D%PquV$M/+ZI)b?YDh7V4&e
%GO@+K#%)"==+9&?YClt&*P4-"3cQfr(2aB1YKS)$gN"1)N\L'VgGcj=\UBgg\UB7:c9^.l,$S(sSZ.%Lf2Af)6oQ.!^AdfLl5Lr1
%oX1/9DSeD^a2WVSN5!3QmXro2Cn<(q35BJ;RL>bVn7q1Fo>Q!;^'d!ZZ"Y%^fR1="DA6Wqh(c^]jU2P&;AGe&I*(\Xb@:&(pJ_rk
%07r"V&/QBp#VkOq`Y[Me@Y2Q8&TQ7sSk4>,k*]'onO3j+fs'E(AP>4a.u!H[ejM4e@fCq_3#I$iD#A6!n-(Dq50MsS`K!DYjTU)$
%Scp]*ZhI?ESn"Y'd0:P##'V`QPaXM=>=_HWNg7:0k$B<7;m/sO$dQ#KgQf77O@PQ,3c-Ou`S0?KUaOA<P^XqGji4b\^_LK8l3@Nl
%_4@kJpQ;]mm[:>H2Zlf2-g][FB+2L\;Qp0(Ff+J9YoD2VZh:UL%cbdTHB48[\9ccXV,#P[gPKiaC-,9GkWKd_na.=EM3W;'*[kZe
%?=;/[2!P<?3F0JKl]bipL0dc-JAG"g)dd$f#!m/=Lg9_#LQ_`D5;0hN/ELnu?4[T6MdP+^Vddc+S/8=Y2t$1pl1f_)k$9`Tjoo*%
%a_22Q49P.e>2JLS42K&IJ'RipS=>D_DX@sXYjt+1d'Nj`7%pu?Q'[Mge*Wb#1'QhTb;mED!F@=8h,i\(3.d7G1Fk*o3i_=Mjb5Em
%7,u@_b2N0l$R[Si/gLgWPF)$NkpYHP/#rm=_T>IJ!Y69@]J;(WBC%l;hdZAtah+X4i8fTB.BqakV1@[aB22d%BY8WRj<Y6=pPj5h
%h@GR0LLn6u+ZXfcWIrp7E:QoL[(g\Q.XkIqU>TT^N^WhY:0tqF@.FFJ03L)UH?&LNVb4Hqo&A']pBN#5nh$W"(#_%HL)3HgD2Kbm
%a.nGs5Zh+SE0oN[0;1aGrWl-Q#i5_00?YDVG8E_TL9E9pK9;MJ"h8EcaNNcQZfu*lhIT_K,;09Ik#a>.*nt"k)0sP+Ks*VI&<+9_
%aCtNEa@h>;<G#Ch*@+)!I1c#k4<S9'?G[bgU'DjFaOo3KKY6M?qFh\l?50?R0+CBWe6%i(:;stH)lHs)G_)l87W9hAfX"^P*1n,%
%G:5M9nM6KKU(_2"'pMagCTGe`K(akV=$fdg$_PN3L_VN,1pcYjH"Q):1m"Of?9P^8DJc-.AJcqq.j$DG4n)d0Nd&!^$T;<lNoYI3
%j)m74BB&;'\:LHJ\r,&k4M6ajQ#%)"f=eCH=EqGRM[KhE!-Vn?;C%tuJS@sMp=NR9beVt]hjttKmG/.nIBXiI6d#3\r@YP<JA)Kd
%h&Q^^Q59?Mfg4eM-/SmB'0/[THl!2f[C*ue91Gk/A_u6Q:CRp)mYp<3lgF14`XD#`_'idPATf.WP[p'XCD3`q[[dff0"7uQ^<RU?
%=eMA+,2B;\o"+>X&dpDjU>*ZTOarZ!gFd/->COGt$V(oq[344X8$J&b\9@B_B_;b`/c[T\\\OVV\NNh/MeEpFYk?/EMs=.";M/Mh
%Tt#2!liMnDeGFr-(W,&&`NK[E:2>:*j9"0?Vrkk!gDEYRMd3`*]?sOr]CBlPejUTB1$['`60fQJU%@QDUkX-]1T`8H41MhZZg'I+
%(H=s.;%<^QkmOCAKF"CXV_7?$,`$Xu"6_"C7U;\C!Ub(s?0!oUoBX8(!MMj-r](5\%A%dh]'+7p+(<q/Rk@<JOj:Iukt^u6JkL=a
%c:gO#$b.tVp!-OJ5f+^O+&'8]=2U^B,$j-1&`u1HkQXjFBQU/mc@\P%hr@%]7@+;]4CGDW7cZa(FGGMD0-%PO?DJ\/*4jVP'SA_r
%H3!cXTSmUh0k,J4Z+\LI@(;+Ulb];f.40KtkU'2sk.)=N)+;dh!!e31G=b;l0dq.KlndW;'Y5`:SN'R3*[f^;Ra6+cE9OT:!C><F
%LFtS((is[,>pa3p#J5'@.T]m@Ps^lB)Y`pg7h$TmP]kb<ojZPonZ^n,Msg5A_j*W6`bt<ATo3;snMhm*'!1uP.<Q.$c?,ej`Lf5)
%D"6WZ\S0#7c@nEJAXc[#6'CD+YMBX[>Xdc0\3-^2<><jOks4Ui`T1ouk8jr,1OC`+GW/#i.0t-SgL8Z@h@'%G$Ni!`L4T$d*XNfT
%N4:Ap.+Y^8)JY>0T[$PCcqHBV4-pT.!F<3Vf`I?_\9%K$0INDQGC@5Fk;&&k^'!QD<@RO,M`[99Zmmic'+rUR?>4BA63%kQim+C&
%/5Fu!nKj,F(lCVMMr6gD"q=rp%ObfO4fEFI;l),/g_AL0"EQ1'(8,+ibdisYWiuES>h(fT0%CqRf7c5O[\7qd]?G^_<.d.H!oDae
%3L?<dmbOj`M8"Kj):Z2r)'`LVF6TX_`<C<8"uqsq@*Vc\Zcjq@/dXScrP>#)m!DKc3u=js^=3O7/m2(Se_o5n&C:RhmTcS&g4&//
%-.W-+W8PstTSP+BX.G/]=6<cKo^p")AE0RMY$fPo&^<u=&*@,i1)Nmtk$4e_E0ESE$eS371$O#T@OQ<3Ne3N^h?kXU7IGj3j[,IF
%.FWPte\Sgbq`C0dOX=Pul,&r`hDb52_41l6A!t0'9*+CE$ZdqgOK(Xu_E3ht$&4$fkHZ,/IEp'IM7DnU(3;+NJZB_0g,4Dm^a#:n
%@a7shD(CN)QhT<H2/)HSi]Lumk$1H"3G6W3V0NN51ZqX9&+@B*$RpXM_48]dp_KA[QY0(=#CFet!HcAt[1eq$MhucimbB+uOQRZ_
%B@"Q]);>F#gdLdV.9H4JjDl+p>DHeaIY'`W&=hEpQSd?9;c'7nHZ"ee$[HWiqr5k3Pr64Ii6>h&9fj44:dGGdX>s!gUsn8I"Doc4
%@RUmQUU#N)^8_:($Fg\[F4smu('`oT2j]b<R!ul@bOhGc>n+8+HWAaU2ja/q)cm@:k$i!1Tb4rJS6DN:5&VN@Bfn@p0#!K80Sjcn
%TM9MOc@qM0fO3"$_"Y#IKF.c-g<\!RI,-IVSN3$>hhZ3n&h(B\Z[H9-79;!G(!O4!60R#e<a_fkKo-]/>[eSVR-Z]LZSMV8l<F`^
%DZ4dTc@rdIl6/Q'nPnD?cD?1#ndBRmcU^CFT["kCNsYBMc@nY?[Y$T,(+F=1cC@OsQ-:quS4d*,=TD4@\P'H"F1G1ChpPOGM>'I8
%[gR70`#;q,S-o?rWf&m(LPV8hba_<\HRbD(7D1UL936c^=_dFuSP'Y>o>!Y_$`JqRZ6EnHU.FOkS]drc?[ZnVZ94Au.4<*r%,eIa
%\T@$*UdI+oF<]?SQf(3#HUs^NLmsV'%_AAgIVP)H!N^d:AWaXc7%:67r3TRI@H>m1$dr:5M\5BkE9?SG@4]RV>laH7Qoe:IIjN;r
%@2D)0`X4sP9ZoD$mYG^0cYU/]#5<2.c9eS)b'!XIPq!SMP,O7W\-9<;&]K[s,*eG^]Fa0+<Xsug-d"k[%FrG65RRp,mLjlDab::N
%ojGm1$ud/D,8VX/-l0Bjj8sp>\9k"gEq+Qu>=^L0i]BcU/d/_\)Rd0gr3ua[")Y=2%bP4d)(.0uVI9`ieg?3b=3u;b)^kb8M7HFC
%\3LIRWCkmQ+M`P;4(lPb4#^>-e)J6oaRD!U'pi.pD.SjhJmkm$is@)N.0;%O8mELq6$TWV5Ti=>lH4nj.<:P:Ll:j)cb9[)9@4N^
%=$GDk%1'8lE06SX)-Dh7,f._<]lN(4c@WU*E#E,SAMN/\q'W5ZR0XW!NdB(1U<l@;[*f#KHf%BDEag2F&@<IoJW!!]X=PEufX1&1
%K`MuiS*W-_^a3%`r#4b5"Y^$GlqDm:LeQr35q80*C'0$k+MWUbaXuT"S7)]41<&D*\#=pb[("k,+"s_)aN[@IT;4OV7Sqs9%B2M9
%PdeHiADc.%<LVR9F72D>$Q*"^,OE6jMao&'Y1)4d'lXq6$ksl-Us0/U-PpbcYu`\J^_D)8Ms?V-rR%cA[h-E^$)60&V@K2%B)Jps
%gmR;j>?R3%=Dh2/XHVET0B9d.g]Dbg7=Qc]"#aq02(3>Sm=i]r0\hhT,L&Yrb<7rfJ8s`[hqJuLH<UYPYoN,=T]eXl9p",h9$,1m
%QW9'E2,F??D$uOXO0Y-i;$'djnCeKg!Bc(bg4K/(ZcH9dnJ6W_]o^r7Lh&klg4C"P_>9h3"VH"Jkt5Y/*&YQGMsoSKECO/["]jVL
%BT#pn>;c1lbO4!gk@m46"dShMbn``D/:^YB$'*+Z0.pHC<FI(XW,,W)J1uD4c!LV#%jG4g9)!e2YsghiqE8M.nJt"K_.&>kW33[m
%f]K2CmDWL<I/o,@[Scuc@B`1,`G<PbJ3D<:%fTW?>bW@doX-$A,8b!0=?2d&Fn/^(S7'cNaD30hm*idV>?Ql1:tJ%%NU_\4[Y[dn
%&_A@:;4Y03K;,4nD=-6kltN`U%Z]\(ZkdF(+8O,`$aL*0h)f1"Js/JsbPe,Y:UQeXC'F95Cpi("3_i_F]ccT4<bm<r]H)p2eo@pP
%Wg:R-:RPt.pLZREC:12qRTfS\\AX)u(6S$1@]@>Vjc0mI;G2sEH,<E_AE*e]D>(A!(i!4Oh!1/t(>t7e07$gs*_e^;Mk(W+:g87g
%:2>8SlQW6Dh#9)52_ETK<_-Q,Bn`41]B@tV#Z1B+h1E+PX9FpcH'$K!H7uSm&UaOkP@*DS808\g^OOuW3Y`>)6;@oq!esNjdfrfP
%:t$VB2HmdLe&&AFJJH,1-kV4h)n`Q&$P4tuZqsRt!)Y+>R*6Cn]aVW!rVH"H=r&bi:spO`#oI>0dZTu/Y?+'EjqXF!PQiKM1h,su
%Jk*edA-X(@8E+"`+^Aqf%F.BMp)f'J*E9BW@aPH2g?C[I3"mlg4/"Ve7'qc?_heX?>1<R-DO/j38.96>=D5`O&Qc3`%ehi5?FG3h
%n\RSM!8^]2#),.'&e9'lgA$,*TFG<@cuu<Z%:\#YbV0k0=eJ5%=E3:j11#Q[G'uSrc\=-PB=ir$JpFdd'?,ZM(:`$I2Hg9/S*ZB4
%Sa?p[]s,e*hp",OB=gNOJmoK_]r9<jAHlp#pD7tlg#;#Y5r]7N?>uqtb#q.$MRJRTLkFU(.A`SsW_ck8^=hI=5!_+hI)DeRRiT4s
%pk<R.\>S\(ZQikJc8?Pdfe_/pO<b"YlkmGQ:_:k]7t+]gAqqa)K4]9B(&A'V/6HbqimS.S/;:VcN`e7YGu;e[8-`)S_D"'4XlL=L
%,_'aiK3spe0"G9PA\lH@0N54!:+tL/jKa0&^;8(1/N]IQ1RMa9"]<OB'?fBA\=`AH=#L>;(Tf7VM7&M_.Z<""<[h?WAJ'M>nTa3n
%;HZJ.ar]_*;p(+kBf`$U:mrcq@q3Mck[]8('O@j)A4P]JJg@d+Vh2OBab!<B4G+eGZ=b4PZ33_mq1M9SbTbf5%N\bNNO3]PaEC(4
%>ZbMu+TGc3/=&AB;10E(Z6g,!hh=C?7teFNK0g>[.le#j6Zrd],dN2%/@)nZh^fDhSc]jRk)^n+L53;mJb#6m3JT^'L8O0@XrO_I
%f=*p:f7G;5SWD,(ADtC9%nRfk9Ve%RnWWM0,No]0WWWCS7UOeX_5.HScQ\E=G)^V&c5kYl_"bbeMhEGO?utU8qGgfkTno$,PXREM
%$hAiMWT%iHR'rH;^08I[n6-Nf47gHm";b!#hDbWaWs^mU+_\L)T1`BsB10bcJi&d`*4%3AfVd<E_scDfqN3T-qf0VrIkKm_TQEmK
%4"Rm$iC5$[i3"&l&EJpH,n%%GX,d2MoMuN9@Qhm[8)E5<6`qBlP#Z9]*Pgl6Nmfh9;S+l)6R/6gf0-&gpljBFi/%b&V$n6@%6R&c
%i5B^I-q]4M_8G"i[</9iKr3%&pF/GfYt.dI%<ui34Xk.gGmSF,V'*`K*:R(3JEk:kq)GmH_EIS:,ViM2nOgn#4Lhr3MI)d-F0J1*
%!U`(,ZN<XrH0$J#A.r?3R!TuB;UVOYj*&>n'cuX^ZuHCW?EBYk]3ZZ]51VV#br79<^;9<=EVjln>NE(EerOiND'YVf:]O`mFAe6l
%+pA"J]<pP%7k<QME[0fH.-TZ&p9<#MQZ\u+h49oBgKg!fQ9-kLHNe]Co"DDO'Bn8X'E4/l)Urkj@*%k"hK7UV)S+RY'F+O`9-8,M
%*UmLqJ6Qgk`>og>fqU/p]8.2-;Tos@FM('M&EBW`Q+OM1H+GDQiEl&^BZl5Z@[l2N$L2q7(;nls\:"LV(\X4=%$Os#[gnm$cpbaa
%c.oK')__g9O4VG_pEW9'rQ=YR[=;=LGSX.acIXc$-qW`B@4ZF@cH*acU8S\W^m#W\H)ToSU0te/V4Wd.pM9,q\AQslG6$'=/t^c%
%nq:lu*_+W8esKuFiQQ_P-b&F8/]08f85#_^(6D&i2/c6t84i82&;4I+1d]<.jcGLgKtlMV;rjT=TEK8S]_P=%P,r-gkp<SG$g1"m
%>.1A9ArgTarh[OH7A',lM"]]<\:H_aC-)`8l)]ljL$Isd(JHQA>C\3D\D[Esjq)DiGBX1X#$L>5bSF%cm^5g&Hrn+A#AObS>_Dq-
%O^OsLoS5cl%cPV=NsJV2c:I4FK]96mL4EDL?@]'F7kNH_OW/22C'?23i,DFTFt`RoJjZnS9b^Zp'MZhFNXTNj!RK,:_Y*CUX]Ml(
%<U1pY-@7gS'Lt6_-Wk#1);RW<#%nc6HL:``HNh\TZ'l^_S2$:8n>As/8bgIScN<(F9YM;cK5p6n$kmmQFX7;:k2(h5K]8IjW7F:C
%h6=L!Di?(0cp1Gtb["BQ5,+FD)ZXZ1ja[JBIRo3:K?0i4Ml,0Q8Ur*3o*DuVE^bV!R/)(a*`/#a6?QQ<^+)<:pZs%R&I4S.61b]A
%?Q!<P&fk-e@V2o:`K%.5#:qX+T@k7?9M&A;2p+3Ji@Zhhp+FL$Sr)u./h^-2(>"tNYt=2OBPPG<M-UCt.1a]a4@k0G9?'_@,8=(<
%CC/9@-PK(5GBJ=Gl4:[<NeK#F!+59.%kdG5F74l(M.9W5J=B-8iaot4E'"/>M`RGl@gI`)L'60ZD@ahZ.7dW*fj`\.JK58n!YXo@
%JP-!D:'m=90EC]13T/El#u&?4=k6t=!Y'GH-Xbn<@dkq?'GUll7*/S+WoMt38s#:20hIVon/Ch`bN]dC=nOA(Mm&Y-&@'kap0t6I
%6!&gje*u9Jc.nY2O*uKO89[B/:9h/2rtU-:GbG\ig'&u+Crmr%[STZG#=qr;#9j`5CQQn,0&kK@VGZhT7m(L@/og9GX3Q\g\Kfbh
%oNRQih:6nrQ?=<Z[_c-GV\P,,0M0mCqQ_cj.(tPUN66_kV3#biqncq%^Pml2V24ZnDg:l)$EtL3CCa15ZQrBcYj#?Raed[57dbB@
%:!44_.:O.P0i7Xi"?Nb?_]T^"417Xmh'jR."IeqaSg6ZSIERol$OA'n=.^8_K#7\ogkW62(0;V6)%5f>a7_@Bp3gtJ[Gm[q<8T9c
%`Z3kYR]`'tW[#%.n9NJ^96t*0Yi:EifmhcXG\s./]>N"DN[b10%RE+b,H__^G,T!HN:3IM1nTPDgQ^%qmmBMrgqQkDQOS3uX/R.m
%SFE#NTo)Y6s"h%TX*+]"U`FnOO0+'.:gHB<g1.Sq-jQ2\]B?gJ_W;?X%gQ=hDDNI=_VR?'Qe]+$4e<)u[l<+G=6+m"2FIHZQ<S6L
%$SW<:ITc!ehA5Oa39*2Gi$HGR\QG`N%KpJW@KC=/&("VKV_^FH0+%=KVB?A<&gE&AqCuo'$L;,EVl2XfIpuh+r5Y9)^$V4;h%aPl
%4j1?CF':Th&Ls#J0u1_T1LQPo5--4]HQ7hN'Y.?>(m!G*`:e$-/mMUqe)qOa<4"ZA)^Sc'0bC(r=gK+$0At>O<eI2+g%@0VX)%#8
%_(ejC*9k)oGX=1H&@gpA2\%;(*AYJ4Y4<=?Bip=Ico;)e:CI:2o'0bh'?0a>^T#gX+BhXlJX[bN$&"cPJp/VZ8U)\$M*h@i#g/&l
%gmf$R(h)&6?lg+c@=N$$jL(iVY0HNZ>aApe6Ze)P,Z#!<nts%b9L9Nu&JPYA^jP"XOqb04HHRW.qE`,H)$RiW%&n!TE\l,i54HJ8
%3t??CNHS>Aj"(c```n2)3?pK)$@)s%IX9:ToR[DS<epE`(Q_,@1i$ln^(4?^CR6`K/+M3E_'%ZYIscCN7sNk:RtNb0*Y@?>8NjS/
%<6E2/:#@Ts]5saB]'lL?hZZ/hBL-U?d823*J#GKH2isNSh27:2k:J*8le;"b7qETXELLX[2mXrT4]ilEM$#Zq,@Z9c8jG!2WC^W"
%b/70;9j)#JVKHbO$g38U]QVhk;R0fBTjX+84u?i\MM*V&<(eE^'j2@Uhh/uYfkm5A>dVa7fPm/26MRp4`V(u=P@NQKb0[(&Za3j[
%fMkoE+(EbgOCKdd/IVoD@u?CCQ&1_La<>7M`rY*O@PjubK@dRkj]EKo[`dC[O3."D<#$'#!D/qeHmI*_ADFD64:i.tT'LaNr+cQ$
%.`a]F&Y'Fp.E-oHQ,^a?84uVX#XW'YAFl5<iiPYdWNXYXpkh&j+PsF!gdE;Tpa>\F,Yi2A%s,.CK>V_N-qP'&m?2/YB@."$Ms"rL
%38TL:m[bpq*ONs5i.ni>+g))Y@ht+Ip7r@akU*GObUDlV<!=bi3iM_g"j=61Sb`1;&c&C+MWVAUJ4c@/Z9L][4ZUO<8W*(<)NGoL
%#)Dr7GL89ZJ.+.bIK-ZKoHH<-1RXfS/S!0Nrig\L*Y.-10)*+A[pCZs>KPF)6-?9^6*/$0%;gc'`Xt4bF;NI5ZkJ%QJBa4:]1@K=
%_!4DsC:jV()2Yu4,i5+o8G\nadW*pTC.JDd9Je&uN<'O+J=PFm`H*_uMC:%-(Hj/@a>sh7aUk(Z;ghmth?m=9^;E,&U'Blr@Zad^
%.EJsGQ.r&:!?k"PMU1)seg>@T)>&3oM1<2[2UaqO.<\]Yo2/_">'Nn.@;/mrE1gQ$3-D6O@<c<PUV*Fiqk<>d.832?&9(PB@?=2'
%`HL6SR%jO[;_j7%VNM-rcIM/-J:4Ld-W?+h$u]pJLrdhQ_Q"3/bJ"Qj-M9@E.TSG57Ld-6Ul&8A4SWeP%p!2,*BXW22usc99LhGg
%TF`p9aA]qJKLG8/QUJBk,QT%2K\Ks^<8Z;c1&L+nNI:%t-09C+%*bth@SA:ijeDeuK!/^7B>gj4[1\'4einbg?\EO:n:lU->!.iD
%#mp&823,3g/IC<dP`\9R#:'m,U:];&g-Wp8j<8H"M5+`7$788&=1"/bnth6"g]Nn!i:\4K%+`[D$Z!aW6!OS(/2rsXlmH$1g/]D3
%0-LU`6fiL6Uiq?ClT)aRA;Gh;>o!f+i(F'0AD68V`k$j.M<DGimg$s`ljuWiQTCCD?oE[;`)(3j$-dGHX@11(Sb8e'!DP/V_'HWK
%qjX=j`/T&OU>R\W,Y&Q3",36%6(`,:@-*l$@.:S-EE15k*A\YocIBX+`@K92R/5ap^cYjBC73Zjim&S^+'Xs!_)G:U`<E*U0etml
%e[>ISjQr[_9QD:OL=a4m"e9Agk!WqTK`E)MF"'??GF06$FkYct*>($02u/4CTNI5X.Ks)o`M;Y,%GiV]27a9.:ciaU`0">g:U?!j
%EI:i^YSeX]`du?u@SD\>BPZ<+^jC2"50;9KfuThk*cXkTr-1e5iDUXMXqI0bP)-,MT@#.H*Y&M<jQ.`S6iaB<+$a?`#M1IaEq[b7
%GR\,PE=DX]YiFmYn-;LU1]T?*dfER+]?P\)#eG94L+>]^:3`C+iK"TKV6uCVX56!'gq+?/VCN^%UZ-C)MNQrTa5.i$'QTC_m0+dD
%7LZOQPp-'#-5>9CjglWL3WRq%CY]17^%p7@$rgaSA&J';VRM\WF+[BLe^,]U'@&p!WKTTFU1@I?lO,""@UF6X&p>]o69BHB&:-SC
%"-Ajc=W2FS/m/>s7P9W#!o,B&OH<EZ&&(=Pm[qP02)VbY4*)2ho4U.mb8G2)[@f7+B=$S`&<fMO@]kLU<Ace6Vt4kdB#.G)iFo6>
%H`"l7o%Ga6Rpn"%A/BmJ<2$ZXFd+;m^71M-TW#o0KXb=SN,2oJ4^g@VbQCseY$VIBd!UFc60]`a_/=s0R?()(S3;X:mI-Nm0uPik
%rD.U?<.O%7DNGSVAi:Q[RO?!8?nu$BTK"idP2iReW<\Nhe='@m*f8]mEbnK?]o+;@gQ'R&KB7]&'MTM2E,KV_j-gZ]\E#s2SX\Y=
%Tr\U<.2[(=Q&q(]m@JNGm\$@K'_=R^">K4H/h7A,i\g<eQO!ef*Vd"1$I+,_-'#LkW@>@fe?4^9]SMc(JT[V<TA2oE4:E!OD$idQ
%:I.O)8)M3@7/!7(MnZ5Yd^=Ak*F\j5$V#02n*^)F5f*\cL\*ckQ<SN_!R"0H?mspD/!*#QnqR%`=[H'EEN3\46_?!nCOn'n?%Y@I
%]e7@M+5[c-+admI)cMIoK#.j,IQo*`63%'Vrr+m]f6BU66)c8DjqX]m'Wcg;`:sPA5_NOV-+]314I[Uj,61PS)&!R>mXFn>$RO_'
%4Uu!<NRcq`VB5E-bqXYIf/(94AmZ)=/&!oF<9T<_+Ds62kAfErif!m\V%SLC!\a\P`IG@m:7[;SO#i</pcT"UTcfO,r9ZPWg?H-6
%1%-$WSkHr!r*inj`)Z#"E\TN0)Tf[s?7I;V`[OE[1i&D!3[@$#4IF*E3HM*h7""hF@2cih1SWI4+"%a<Ga-:l4WK)(aU6B*nDl@m
%1poO]POK!iTJ1C2Jm]uAL=eBt6Af:rh4dW$,.'^oh_0o8#V0:P#Z.6aT*8pPoZ;E_<.P_tAI"_2CK+K,4gXp&EO'U`BH="X0:5V(
%q';#)dI!q<$KnFIU'fY:1*hR4(cQ,9'"9;na/J[`4?GgVa`u#V`&D./=dRo3S&4LrF/Rh!!8l/ECU.at!<RQB`_?$e(j)ibgJjhP
%@6-s%\Z'LUJAg.!E<9D'>fqh?Wm?=YS6Of\fcn/-5T4k6Aq8+KM::07)r&-g7@W-s(BUi`kcQ!R.*gt7$&W"WCq/n7()Op5h]ZT,
%"Tf!GhY2:LrNt*qNu\^lBqa+0U]`1L#OhInl1BFQ]2EO0T"@IE12aHddTN>u7$#J!f</D)Oq,^-@jTeXTe0#r]d0aZSEor0E!F9U
%lDb7:Jqqtpno;')NVO=q70uX[82u0MnIfGEFCOKA/W8*FC(#f"@M>I%BlI#qDunrQ99EY($G$f8R-nR&9!MOJ=THb([6sma4<:-<
%*G21(S=.J#B+%!AXPf)T4=kTKks.eC2d(^mcV#R73ba^>ljACu=%q?uH.3B,B9)K+Ij(L[_dhs<ZDIN2F')M*OIqp[eIgRQ0Sp4p
%\7iB1T'?nt.3bs*<1[kViG.-\"-K;01CVT$,\F0==bJ$A\'<8TiJu$(beQ:jYpDNOdmNV0M_gc,LJ&8t/P2<o"n%]`%<I]^-q.X(
%K'?/,7R14%X=M*n[B5@)Z*D=b]Db5;&-5TeIihd&&'IlJ6h2oe_F`/omUR8Y)AF]+]K6+RJ^:\bU8W<mPPP6?/5K?'0*#WD_FJZP
%"(:;hR$bl%(j0k8`D&.m\CngNnaO')EZ`+oD&1hXU#t>l:<ZX3;I;i/]<)?TFcO%VNPJR`\;6%%#*QJ#+WI@Z((Y<P^Hf)CV`:]L
%Lb.U^16t?7M#.-PjUV\Y#bQ)XcPfi,m)#h9lf]4$`127Jn\e&p1lgPUih<3,&gfPfYbACh]i%UmS'm@pig;/9j<DO040+GjHH>-0
%ra@th=GHMX:e];j+qR]&?!6e;%)]?/(ua&"'LA7O1eaD9b!D7^]K<G:>B@MgFN+o/#'s,AYO'O?]PHdJ&e&R`2UR-ipaJ6=/(:BT
%-Z5d!$)T<<>a+Xg.QETdO&P[F8]/dR]uf<cbZ9eeQ__cZUbBcP&7Adp5ura+=LS\FZn(!$Fp=`e::SEZK2fHY:8]nggCR1q[b*jk
%G;IZ^MBY\+fTk)uB^D`l/&&3m$6OZ!SKk5(aHkC'hMF-8dq\Q"c*Std#17GORb3[e<-IPjU8eV+Ed.njmG[";XubrX[&NJmE$s,j
%JXhpHoUB?^!*Ws4#mdFo<M:S,Z^Mm5%Noaii_TpVm\*V(*b)^Hhk[SYm;3)L<&KQc_jP:SpE1b`PJ$6BLq/i&lHb;[E0/WhAkuru
%+ZY^M?'HX/<Y>fr*2ASMWdk)J!prqU8^:*p-ieS;N8gT(.,[C2g,3M9i"%YsiU=0cW^+c0na?8n1Vq1X?h\Rm8@4@l&Rk0D.52#n
%QW\ilVQF+0-SL<c%4C`IR)<!&JUA%tOe>.3<oib*ZdEQ]<1IO?+*I@%QuLC8!UX3+bT[7#kC=3jmo<.rk@kH%<KQ8RL(DCJM4dbV
%+_js*2<6UtGA"I^\2?S;ZtnR0WA[];kmsGiF-e8?!)?hD_*$CZ5i$3D;s[$F&3c2Y$="o.)?DC$FLJ5f?dTTX,D_Ihb[M.XmdPE;
%-$q2"KYJ<hWVg#]N$d2jcAf%k6p8&I'4.t0^:Pk#GkP^Pd+8i3+,[5b'J_4jT-asJ,_;BY)ZbQHlCAM)o&)-B]q?I?8PP-rMH,bB
%r+1=D820<#NL6+2i(];VCf:DNZW'r$5HCcll,#%`N7r-?*T;QCH>n:09DZV#@B8/cSi.66OeG@*2DU4U<3Aq8g:gs8Ud!8cD(K[/
%qcs8aPaU<`gqZ)`*!.Zkhl1t!.5l/c*.[hN2,<M(esBs5SR]3kfHn'f2(,t;[VK:P-4a8+;Fje.#;I#Z"=hMfLeD\sC@Yp1foJ\L
%EPa&7HNkWjr6E\SG/\L@r4,V>b<0bVeKGLQ^1YT[UM'p,PIV9FG$NWrb5l+:OBu>WH&\PPF8(d:LN_tqg&+#)9[e=H^><635r@fK
%&.]L4c*6iOr+o"!l4k`$.=@_+?]7f^\(e943$aI:,F%#sG_PiL/&g4>%-5>_l?_$2FG4"^:a3F^K<.c"L;XOj?/(Vda/S^'j_f)J
%,L)%8i9%=EGK65XJ<(Bs<BN>7-*`Ia,.t0?#J5<5jl.QqG)2"'kIpOF?'8bTC?p^(9fGkJ-HB=fdM.T5WhSQC:E]'edZH*g"M:n-
%r3\H-fG'r`&f++Ea;6GIW.L6RSY"nU.jf#/pLmX9<*(nlodDtFer/([<3:tq+DK]QUafd$Z)=?GRE-dOc*P&4dffEV/m>naN%;M)
%BQ4eX(l*Fa?oo?j&V,V2QA09[L`YRLP,(KW/+^,p5^FotUqJW/aSVs53%PZaDP!QM?BpW!J(T-u:%GHPeLacPVgqE=m3Qc&0qPS<
%i-*OI+^aBm+-t)F>l<AFHA;T&CBWc%PftNt%S[GuDH(5LVV7^K>@'$mQFU.;idM*q7c<O0Oq8-d&eZM;ndna)(>j+s')"#C84@Mi
%(*P8R;Ur3X4>Ac;kT3?,OHSe$fac#SA&sug3ha,LQ(r46Lh_SpM<!Q!6P8l)bcZJqLj5*k6'B+W4Mk'/9!1JO*YQe)p"7#1%R_4l
%l`=559'F/:i\2SVa?]lqI1L=n8e;r\a_7fL:l25tF%VJ29d&#^U/HYNr/A`+[Q.((mQ^sBh*`AEp63Q*1XLMR&r<sB6:)_+Cc;Z=
%Jk]8/\'(+@WFD9ca@>)6[HXh1[OHlPKab1F:&;#'QelXr;.PILA=A[Sg<:F&+.^W)eI-"tFn?CZ5m;uq>#k)$KY;7U8s1?s?;5b4
%geBND!uMBlq)iOe^jH5[/sTEOD"3fcRrCa.JHGq$^O%Oo1NW(,`O9?G#tl2eYOIu=Y7mZ5Q<@>J)#p?r$ZITKL[.40BrebJWd*nV
%6!a3TR[87WV,f?qXX)n7Wg%o@?"WY">P[b<as4\lK^@GPh^r=JYH(&pO;\LFBRs6QG:d]*8eZ0IT<*(\9b#5!_XFQ%MN`ZV4jF:6
%41!M8ku?FpL6A?M3b^iYSIctH__>[Jj601$17/)h-p'nW1[6,Q!a15B@SMH&Op@$u04u1M@ri@&H:.1[BVYX0`pudBi2U7*ZH%/:
%JTa<54<?>):mMgt'MOQlcRD#>"PK`raKOc+et4pB>`,MEXC>MP%BEDA0rDUR*F^.*h&tT?+</\-WI*;HWBQ6,3b*9YCiKnDI2f?W
%=ojk267ET`7:M?.'ou&t%r89AVK3;-NEo<g$b&q8FCfng\:r_!V?/fpiY/\@BGAkRbDp[U0TjDW4m6SfMqbC)&C:*+_o&glO>'C\
%fk=A:A[KCt!C+LZQ0Pj!:*n&L60`J?<QN.1PsWN3/b4i_j0mIUX>VWHKH:70'XPu5+WSG3DB.dM#aL.k)R4_d>Y%FgC(1tHbB:L`
%s,rW<,[b&))k3Gk>//$'JH-U\b:GUKM24?:5;,@ZM?@ZD3C8MU4GepQ+hWMEra&A5ls`mp<;-sm??-N8:_J^R_t!o%i:l\hY`(u?
%:I>4iKqmFZW2UD"]G2P3jJF>E&=M;Vk+!n-a/%h(k3C>4\ss&SAES)'3mK73FuMFEY8qZMakc<1Auj(@\9uk;A>+O@!29^d/p&M_
%!c_/Ys.?t`D3!Yd'",J)6N<ao-pi6tTQ=I0T1I%HBJ-ZFAD^8&_up/D5nRTX]HCTRrq13$27%TP$Pr!pL3aW)I8HJ?=d@05TBopM
%dt?^?8A\4]FZJKC@SFp"a;@h9;P<l_9LTg=J[+9KUjbWmL?h/SW<+j;P+;#tN]>@QLNMObf'3FA`PrrY.\acNbii;":SBWqes"S#
%q5[?oLlUNS5'$!dR4j[trl/8Vc%q&q`;kJ."4?$^U9*[o(=%qkfkpT5%>IkKaT&N!CAcH;j.pKK,gHYrnpdhJK:3;Pi\Nb6,_h0p
%pk2s9NWYiC^qIlXq#s4NX;#J9V+flN0X5DF'okG@<qr_YVupLN.mkE[PV:sMH7AC#&J%HJG,Sst9bq3+kei*]?lD5fJ-)A)L;E!n
%0a@Ib1<q#m%c-,@b!e$e*b]d\I*D5m]@KFp,+_^C$iA<fM/9Q?-(o36(WP!Z\pbud9leB<nIrb?J9$AR-@)9fD\s,ZXWP8LJ9\;2
%,_pn:!O0KUpn]Z!("--bVP9k7Y<!':`c:2YlL$@g*dIk+\I13O4gBQNLM)VT3dK+M#a$fu/'-J!MLk2dKVDM;dNFQl*>Mf=3K03R
%JqXFXkg_C1`pbtiDRjMjU;ouq`Rn4g+@7c.RL[p'E]#jYE=YRGE(P#5U*a43O6*39<>Wk-_F!`(=FpFoR.5]5o\]rNT"MEISokb%
%TmR7YIUS>*;Fg4!%nH&OmS(UK*0>%RkVoI<8HELmR5$*-7Zq?W2isIKVjq^[]d*-0$C2(5.0s6V:BR6dJVsXX'>`?K(mY=LK&sRh
%g's^>3D>f/GhN\G-^(",'%l3^9/-A_ZXEG++`qu;ecDHan-a=>:h;6jPi-'-1.qC'03jS@@VZ'YgE8s3E:ap\J^Xs`NKTmlTP*q,
%L8u\<'M[(&E!o3Z`=RNN6G^C?,dpF@1(.l)6fJM!XOVoH'f_chhlOsH<YQC,WIQQ4js>"8'*WLK6mc7LIkrl7"u6:O<,ghH&qtZI
%K]iIp>@9\b4-d]S,1gVhKo+h8JLe-J`htr=4<UMY()D]\6dA=7#i%$ZBAl8!gqc[8$iOhul_pK6bF(8-Fqss$(+UP&/+q_[@AcL3
%0ojRI$1pP5h$BNd\-<.l[*VmjX[RB*R8]_/f?<*i6Y_=?'Ucb^2>o"q5U1u`PWfgR_M-^8%_mWihVgs\_a>R()hotk\IDV-)HMfU
%N-`]+At@(c_un?A_B_%W$:=5[J=`\N!M\T=A&;/D0Ob#k"@I\aQ=bp6!2F-#&oMulG;RE=?C'NlfN@)<W<\.f<LV[\&hTgY9`VNO
%T]R`i?5"dRL&bkH9,An'WS/R?S$9o7;X$5/E\UDq`]EJ@(iDe&9=He2VpS<$-!l?g2j\0Pe!D>eOk;YE*7MHHB[7CHo4\tjomu`f
%,ACqb]K4bB;XiUD&WAYod7^^8::Ua`QJE_g(W7SUK_NAVGXS@e&e<Sq`"7o1*eo7E^'A-cPpa3O7;j@.$u$&Fm=DjM@?V:'fWNGL
%"1dn%kEohAl9AiW("-em@]36job9:.0>TD/6Y5P==slXO-HXc%p]0F`At$$?+EP4G#(^d$5p@?+MSKE>*lo<b,C.jkkU!m4R%@VY
%TE/G=TXKnOTm;O'dCopMNnaW9$S"jn(.J]QTEL6S-L,S%1^k->r!"HoJ7f:sQi^>L_\qJPo3<j\l/9'F9jY]8EFS3Ci>'f"C()I?
%K),Wf%ns`L!Ja@.K_,!p+;3-:iY$2%K43JI2.W"dYa'UmL:8hG%`^^,2_k?,1'/@?>pk2%8hK59'>kjm\)biq$W2N!'/Zma0)-8;
%3J;6ZkUqQB$R;-WOcq*7"QG)^mP%n$#Dck1;rt(dQ..M`As-Ud_aGc#SOX1_deP^RS1osP'%SiHKdZ_N(e'5pdtqN2Ckb>D'k<#=
%l[sk59HSml;:GW)d!2Q0"7JZl4WoKZ$^BR->62WAW.GEcA`+#VqQso.!BfY(0-k'ujYL*0=0ihkr)G`u%E)XZ6V/W))W7<49FQn?
%^+b('_mXT6$Mp?VBr-c'TUMSm#pU?i0kB#(-BI"pQm8G:?87FeHCpd+Um,WsJj-LQDMfkDPoQ[r6nt,<P"OuKPj\b4*0>-6):_(7
%,j5XK%]utG.Sk2B-V\7]&O[!N(8^(ua,+AW=GUO.N*('#F)[:leZpr9=foKC@bqXn]VDo+?*2=;cu2hQ!!G0"V(seu,/FAc\S;a-
%Z`s+iL-Vq0ru`;T9BEs?E'W?I6I#qcA?-tg$Ci!_a!-g+B=?YH>EN%`*mp`rWD!oZ@p1!?G6bBD4KbS[63KVCn2cW>iNR4Ia[ob6
%9iM9]N9T1I_<NR2DbDTsV6-JQf2d`_#K*X;b(2f/k!iWRQ5#U':G"V`Y\5&\K38SC([EYMVZQ]Z7Wq2:91if:X^2:F%gE\4GP01Q
%6q\1$-XDK8<q9R*od#!M:[Z$08^<W1)F0nD(6m)I+EIgS7#[2eJO#`u5t1@YN%%qu+q!sK1=bW^1YhXqSkK1&TaF;CQI9ZUWW6PW
%Q90capsD`_>:_pE#m!.*&kBH3E_L$jbpdZ^.6<)u*R_ckgCP26"-sr.D?Cos6C=MdfT2P=s/Lu^Te8PqP[2>Z-G78?kJ.b*9XegF
%&Qh4U$JA%m-idfdGC*$!UWgth?t(!:Ml9S"7&-G[WHOmnaGq_jHc?YdRRsN[;<J0f(tQU2JVglK0Wsr/Cm:Z,kcE/1#,2]g7HR_n
%3HZ-:,]rE@o.Z<AS+Zl>8R`,YVY)O?@)q_AaZBLI*sOQgdYTF!*5$2d25rQVE1B"DQfF3dj?T-Kb^H=D['ImVhG:70arD++Uh<Fn
%k"qRO4=P:N17*(%P[b3c*ecF@^HL(U&Tj6djp9V]AYBZV&<LW^6HntHQ>1Edi<RV?"dTrc'!KGj`UsT_>PR=<DF2CEi61(]iSnPn
%l1B!VDFiaJJV,'P0+XSj3b=Y%.2Qls[>kRT9J-SF,8,,Gi,Sfa6-?robCc.FXOr")#K0b<=*/D,i3[4[Q@g,"idESk4N`sPEm#V]
%([21a9ZJ--5f#\Wo4#O'TJS#b'h!n1$FCdFa"aACb]:q1E+K>YN^rWYdY[()XIf%#/&tG"8h3D7XW:FPD'2G?=QT$NQiT'1Pt.]/
%.]FEC>!CV7.L4ug1YSNIH8.#mD!.$1B)F0V4;H.W)^4<^LlpjO2V`Z\%?/>u$DJNKEC5eglX@<V-O*N-&X0W_i/n9n"d;kM\Q&DS
%T,^/C9K>Be&dTue?AE/\+WU`]),?2p^5`O;0Ng7<i?sRto$![A-'L97#bu8E-:_hp&k9NTahc7N9Q\;0IBZ3I5!i4hprn-K%[X+\
%dh*ic1ld2bLuag3TUl5,9B#rVnAkX+!B.7CaIs]#Ut^Pl?4.d,XY=cH[e!`SJW=8'*J@OY'AC(W"*tYNNe`9!;4M(U+JFn>"@d9+
%o<seo$[.Ed;h'HhNWMh-/JD)i@V].LjC!`f&m\W#?nu-rFFk^?I+5imaPfB!\kYfWGao*:od1r)&gOlLH/Tm>!f"p$5JmYs',3H_
%Ol.H0E]iS4Q18YNO.CgB/(=3W6S=-]$&0E,;'Ocg$6b2,"F`uTjC4?&J\2c?Z5Wi*+N5J)nAi@6P.:i>/TA4j-s15dm"TStaUc>Z
%EB*_30s6[S>r+u4-KoG'Qnb6ZjREk>8u(<a-t1-N^Bo*HnNgE;*KO2W1WGGjM>;fc*]^3aWT1cI6*HP=a+7SakAlO*nL0D^6&nIT
%o."c#"N%5+3)GD6;+WJEa5o-[iJh?)-<ATU\8_q6=>#..=)HsdXg#g]eW8a+_A\2#'\4iAC)g.&FNX*hWYB3=JB!3U\Huq3YT$1p
%j%p@,3RP3D`ZZZAXCTehAIdW?FEdsV`^,[iEj&4bC^j$D(bq&ekX>"NF-j-A#e_>_?lVj-Hrn0$LNk.G758*gPWK#4:[$djohm52
%ET,/;g#=NnA,"YsAif,[=C468MaJL]Tg14/($ICe=(SNoVujJ`:9`_EP#85=`_[\Bd,>;?&qlc/`PH.QTW]KWiV1]0'Mpc\j_3Wd
%:`SIJ3.+,O'j?kHR>;NCo7j/"EJXDJnM^L_&#:d+8fRnaR)q*,M+;^k-oN(5C'9HIQ5g_OhC7HH$#0eZ#6EK!aq+dY@1#JW394"+
%k&b)_#':ZPo)]KlJrq--`Lr)!O5f[DH?bC5Ji&1:7lci.f\q?.:CI4nB4U)P&1?OXXD't*."fFRVPKjsF2O-S>j3PVCcL3MF<)80
%+:a&M#W"RINg`\(i?4Ea'9gR)?l=*<:0(JdBFF:9E5]7GAr'qu![I`!'b2?6,"mlnE!R<@XU?R?#SU<*iP>kLIcQ.eak%+u3(2e_
%n&pr70733l&e:lAa9rbQGi3sl7>-#=a%m!"?IE26&.U);<o/9:&<993E^iI[K0-$?Z1L1'hp>Mc$3u?in`JP`k?ts_6kD+5\<IUA
%Q8'3r7X!m^CZU-M:r(33%EJe$!`OYu-T]4n$3a3FHkW2>9@_E"ch95T'L&R,5_>bj(HW3k8IZp7^^\<nV`8Xud-WZ/__Em"JK#(d
%:KcV1\;;40DG^/r+E1/plk0LB[Rht1@L@@qUO+GnT*ddb7?])-n:FDR9"65O\D_1*-%K&,kY)$8Q,Aa$s$d*h_nY.Tk$Lf*HcMQA
%b5TE((`u*gL.W?"9B:#7#V,U2;-eV5I]Hk.rDomo^FMB-K]S3M8=R5ADDSSr="e';>)D-B0EAjf.(jJr`NOmjQ=2eII90)M#Rc33
%K<^+JEPhQ1kkAVdG>Flc2CMji=Pq&<#d1MJ%AqVNZGcSt8B&O>'S_#X6/7OSdnKWCRKIED'A>CD.>bk@PdJH+%:srL!JjNJhdEd#
%O@2Xs'm3bRP_(oKXp)RBid=,<OV+P$7>M'gA1a0eW2V-mc33_J)AJT&K)%;1kEg8uO/Gri8d1SY^-,@a.?T[W)0fJRZRlV\#u%1f
%,/,'2)jKjZ*L17ci#<Ffb't?*hN6<?fk5p2p5T796MC\S3i.1`E,R*/&IR:InO_,cp'(OIf+YI!j5?_`]cheH8[\_5(e=:^9sEKI
%92YsB6YWcB^/0<a%MFo9W@XoCDj:[Y)_s=U`*/PbpmbH%lW"P<LnRaZ.>m5t&5.T2E!;[I';2fN&#8X,+\r1*`s(W8*T/33?KR*K
%raIt5gK.]DK]T=MGpCHNo&t#n'9Y:RLEIdI&D[=u_X:/ihIrPV6(3J9+KSZ[9M"#Gas?FXfi'OHmhJ:(X6QoC0o^,TH..%3V/s:(
%`=L--"lt[=NEA\*!I;T<`CZpLDn(nUR0)r6pJ,A0N?E/(@Y'*g\7r;pbaD6N^j=esQ9a:\gk_r(?VGRE$ZiuNF(&1X)-H[%P&$?C
%%Cr!(=GGm!`WRbe26re5NJJ"E>S2uTk(R:&83#H38BOUQ*tiNY9LrgYGiO_A^`1gX3MtY/1#A:#K3Vp+G[jKCWMO+;nIj%3o7>3m
%'a.XA.N!*J\jc<EA%WstL`hfnN&N*N':YCEhA/]+=@U+DD]#,M+eE)S0j38m:@SMh_BP6(9rt<jQRL_Ao'ojTnV2E?$=X@])`+,6
%dlkNlK:#c5K(6ic3Q+]L`Z#(@jsM-er$I`[#fdl1i1No,2b;<K5NR,Wa,m\\(iRJ[a)XHLH".$nL/LO%2]f^bdu(dAi"i()-%ikH
%bCRI^&`aC=3HQ&Fa1Ff5g/X(jS?5=pIL[(\)Psa/+l7HDNh,,<m8U\cn?,)&(P"HUo?b`5$ub>9-EBiYhG=?/P<oi;eM>iX#i8*:
%B(EJ6]YX&/B4*L1)j56?aIE"]R&/j-36dKPL(iFKL0<`r+<Wp!_n4lSJbe/nh$m,q8?imdR*b/TaVR;3`m`n'dQ3Q'Z.k;6.23IP
%Hif\0]:fQk7CSYI];qiU3(?&_:QN#qN:"X&iY,VFWSJ]iN7pb9"uJ]MB4?&E+n?'9;.R/T`!K(JC4)>/:hYR99tO)p5YYm7'5Z"d
%_6eHq*F^IbMF9QBJ4ngh5@J_fR-MO+fo6%mX[eK/-kP$T7s:XE/$]<2NPC"A'*tl_,]kI""PF6eD:Fdafo>)4#WWH,2fslga!7l/
%CIU!4>F=5CKgB*'@<UZuU5ID3g5Y+9R8i82YaH/H"knq>*2msQT\W^>UV(MC'/EWc$+(WtFK4I/mDbr*8uZ952kCS7pckHq_tHNU
%,SOoOV:i_h$FLg+N(b&LKBP=[1^/)unjB<[1:UQ[EJ<-VK#%$GNpR$"-*B#3)[0>a,M6mud#hc^[i8V#6mq^1>F!>miHD!V$J2lr
%[i<RA9OSNN2b4"(U6s\p&csbGjDGT?OqEniYq[`l-#tpMkQ$VL\Jn>R_<_LPGE_"$/8n!Rjj(F*jDI$X1%D6<<5IWu(D(UGg,[%'
%mc87Z5Nd.o_;1KP:/ch^h'eu-0S6o6be^h\DS]!q]#sE[h^%F'aR,k#In.Jbm!+26,+f`<jU76r5NR'`r^\/]#'[spULZmrGEZ6a
%94EYj-ZG)B]l=c*FPuO^^tn'$8PD3CE4=BhBUIOKNY_(F[i:ko<F@3Q7pB%dRhKZu.Z5!V(P<M^?S(0,J@iXJT^#cBrWk&&.YpN2
%2ra6V#Fdfa)a2Ad2@"<8@DJR,<4UgCar/>H[i<N10Jc80h0:%fjY\d%)c_AMe6p/\7PUp#_X/\,M4ND7C,HD8"Y@keC)RfA%A?=m
%/ei9679g*>Xsi!HE#4Y72Z\,t3+?GsdVXV7l35rP&k]d.J@e+;$3N/A$YB)=$3bX;"G:S:\/Tm]:)t!e2oJ8/q8(j(#Up*)Z"(C#
%,`3mOK'`c`"0SCcjG*>'ic(ID%1Yl8&@3'A>#[c,h!PlP9PMFgK@I-g$hk\R&@@7eh'qtqp21NhNqXs-43>nrQR-6L9nD,W:J+\p
%2^%DpHe6Y(#03sgOl&ko<ofHA79VIsM(>Z3"VY!^QSPYSnBS3GDSTaZ$/<PdcB5.loJ2$C/#ZZ9:GCTS,Y3,SS4P5mDBNr/\<nJO
%&Qm>K9oP]rM];%T+`r?ec7'_6h=*Q7X>6Ff>/qNmiH#gQ6[s^Nc>n6"d(+^Z6YAhCS/[hK"9]augdkobjM+(^$jt@>aCO^TR9qt+
%\Nu&#;RkL)#[F3VJHBd=$b<lJ\[1OWIi'C6_@4Em"j.8U9J`1m\J+9[MW=s`/(2KBadluY%n(;#efep9JD<^+:_k*25[(GP@=mN/
%.:^RV<<0agk5bsL]*ZQ\2IUSQYm_Jg%=VYF\;f/Yas*I.\1oiUchLu[2[&*]$c!TsGe/-kj+P:/-\U+*+l#X]TnU;l2hVo9'*L8N
%(+bn@i.aa]X+:8\6%FjkaPRauT]3GcW\WX1h]CP:n81>*=kMJ3Jli*.f%"1qh?Hq*eN#F147ckmMUO1u;W\+o>nX'jlXc>47>5VH
%3b$<3j>Q!dV#UkSPTXPs9\_7`l7rBX(L_\!E#Zq\0L@2#D;^<3[P>U8=2PM<Tl#G<NT"u6D<p?kCV*4W[1.L'3JJF[fEs]Y-CjHQ
%r$fHuK2&?q$^HBQr]Zr]fJ2,'-6#LGHC-2s#L#)0=G"leB08OB(=Ko"ZON)a(thXH3l!U1q[$jRp0$*4"LDA9K,]KL%>GH)N<s.-
%FV59<$JEE<_hTe)D+#K\6"9TB),N;tmfM03#!ua)3?9S`jgb!jA/jDUeqPkh)i"[<$O*hq&n2$*ODR*.<-gjUFjL`b`(P\uYA-hQ
%W`=I<a>UUOOX;u;Cnhg\0a+dVDFpH^;B+GOFRI0Tfg^H.Ai9s+)dY?##",hML5?"E_UsTU5a@\Qf^8sL0Xb\q=$BESH\!2M'e<c5
%-.mjKma3<&n'jMCC`?r%K7kq`N7c/H>$P,ULi)?)A_7;u)hoMEYlq<@)Bkrq9b?&bs4+1X(p@WK$Y#U0*ee'6*O.b`)6o/+4Cb$[
%&DJ>D%(?OO)fZa/RgWZZ,6"+3"2mZZ9OV1L-A64Q_3>3OKPaC9U_7)_Cr:%cb3]LD)f#$WSgK81-s@k>4kHH13lGaTf7s2_3?/#n
%##N,Va1$:'3O3]QFD^XliG'uiD=eoYP(qo&;%f5[g*D[M9h\4![]lK2nCmZ,F<9t.f-Zi_Tj+5e4(H@`W-mu9KS)Gg[\9,q*EBu.
%/t"8(`G8t+OX#g.Vea19585WeSHtBD0j5l:mECiW'<jA#ERbc+G*XUr_.mVN73beO9HuS*T%tu$@)Kk2#%A`nZP0-Xjtk#AW1C8Z
%O>B]PJ8FEO)L0tT,#I7HE""O4lA&e,$G86hS<60KUhKoD%=&[TdnX5^(C\b^L`/^^4%_U!R6F<mL3<c[G*3^0KVFGW'P;,j1'OO*
%1;O%87A1[:&72(eZlt8-SVr*HL3Ok&?%ejk,\M#scpl#[V)1T!FTQsl=(T3\LJ0^*;g^L!H;Rs%e$C4&+,dl;SfK'k@`$EFoH^6<
%#W`o#GN8Qg`=KK(@0rD4ouTV4?tsj1BTO@C_5tL'gBfSRUf7B7"o+0lKs!Fe?:-%TTjL8oG3&K5V.E.\IX1],i\m^5Ccu`/8D.Zq
%T]O@iCe/uj+QnEA%@s.jW#1^=j^`M-A4(ncSTQeVZD5bq"Hj3PJ9@$@h&ZgV&N)BhZ=0Xs^PEH,@<]kQbf8GfaAmI`5W5S=G_!-i
%Z/PCqKF8h?;R-WR:^/t('f/YDfJUhAMp02DM%bG12DugP@hu8@Z%7[eNXR(@,;R`+T_.S`Mg7e/`NC22:b4L1jQAQ>)ZqXId1@k;
%`'BQE%>ef_HCR7*9:"$\(lDUQF"0lM.\?AHM%(ULWY\GL"V=XcjCtCRjS>%>Nl4CAqE+n;D37Q:fn-;>#3N`qR+NOa84a@>2Y+>=
%1EoM/X(U0\R+Oca%)iDWENoY(D(QP(:8-;G)SpVF:i))?#6m9;$1it'#[n$sNTq];*!4+!TJLJ0K#M'H1qVZ74_(`_jY2'7E2R0s
%MMMUN@KU9DcX.G52J<qn);./7$3EO2[h9fA#TVG:+V,O+LJb>`%NA&rfis@km)hk7@9f#R1;kIS2?GTqQCH$NJD`i"Zd>q3#i:BT
%7]R_t:;]Pb%[%2&L5kV#.C8D0CNQQh*h6ZkG]Q&j(,dZ*JPXjeIZm*`_SSbKO[HHS[5]eK).D0"_EoUZ1CP4LT(1l>L1.,n!lKb2
%&gp.VfJ$%iGQrk1KDlUa=D*:qK:#D_()Sr#+Ot>&0Pj_A)0%eR!J<^oe4O.X"6+om<[JM=?@abI_SX<>_Zc-!fN+'#&JR-h^Yk8;
%U9IK5pb3-YS:LfE,=Z,%Eel#$',3@)UVa\k/&Y>2]99Ba6<Oa2'K4[mGT)mPYV"E/H:h27]7:']\0VhI)V-O:Nku!1QjR1'KhYuf
%4IBqQ@A>%OGpe3\7a$[LrEpI#_WV&>[tBkdEZ(fHL1/^?UFVTXB_7%M&D&6_Cs7/jh]'J;;;`=?S`k%*84;kXKam!>IL1tML5Zj.
%VFsb<E"+t;#mqX)QKULE'K3s6nSX&"%6D0Eg"78R.U5uLf>7/MC_e@+K?Zu_BL9R*D`0>#R=l#1.2`2=_?MXrq:?rACuRoaf2:1f
%]1<Tu;:m;59!em3S+8kOmjN"(M';7Gah^$#8+-S7NBVV2UK8uuZ>:fn$6-*D@_IgNC^O,[hbi%Y"!Ui$$6/nPN"?k(fHB;u,nr96
%cfjL.KoH`;0hkKs+=>S^UTj8LH6S<b`l9SDSN@/t%3n3q#\t-[$k&\!MU=$k9PE(2QuUdJ'BHA0au-c'.(Na(@=tCJ%RRkUM-VGf
%lp3DdYe+"VfOtmq.KSS6Ab]#7fTqpPPSse6!6f*f&2qN_q$<4VnVP]:WZs(s&B@0pM`B?+MPP!kOb6ABq#!UKXVj.E-QHs8##44d
%#b,k9i>c8,@?[mJO00V?"8KP:T+^!HfSE?](kuW62?ocbQm!SgS;WPI0HO4.82Utl2@'p"G(kU/Sh^G59M!h"B0p9aTWh9[3ujru
%;*\7q,75CI!liUkKoI7#3prG6f\fMtg=?Q;)\HP1C!]iK"2Ws?#O%87ijd'QMSdBg'.5/8i3M8DnLZ;.FMH`Gn.QQqLlp`#/8UR/
%b7YRK8hdr!_SX;.0nW#!f]\")6dg[BNIDe0QVc>5!BWIYKUlu(1/\fE7P+mh0qtna=A[Y[rRFk/$6,UAnS&;`%:U5sK#.]uV03.P
%)m@)BXU,=R`V@RYKhZ[,@QOr:F!0^LQEfceF#si;]fkc7M3]$5@:M^HZ"i*'f]X6/,u7t%=PJf!PJXg6N<@;:;]%E]?$;<1aVYUR
%WX:'uln2l%(S5rkVj6;8>d4>oJA$M0hSdBtKC/1hgP'+@iH=/e;G+c#I)t(WJt:Q]U($D,*be&N(Znsr$.ss&N_6S=_Z%iq/i!PW
%q!3N<^@?!W/6;IeiHgqAq\nb^0Op$of/R*2'D+.-\=bd.6G=3HZ'):6kmS@iJOqpU%A%OB5tIeG`a2$nacm:K`Y_bL9?_1log4PK
%#!q@gEJY5.8if&j4+7ZBiaDctn/;cs_5_Ifa!s">aLd0>%:o/>mTKTiMS&S&5kp"U%1-D"EY-eZAit\Y,,f;8;_<!lI2&fI1"T`,
%E#-SR7^bunJm:ZRS-!3E\;%R"4B>Z'f:JBX'>ua61"%S*CG2ZE6F_b`(nTnR!F/"f:N[[r%8dS?$@!sbOU[mh5(QpnauFNP>GKZO
%qMr!ZP);:D>=6=W$s[ShP!Pn8@'/DK#JA4deN0s(TMTG!*YPK,BakNHhf"+RL/a)RE-NRt5k1DG*G>lgKK&rZ4DQq;&BDHAX<Ggm
%pIh2_6S'5-dg=5:NAO![3+,$b5[Fc;)F!(&6kbM:(l^(7Lc$*50M-t,%:@"oDC,d-E8YDd#8RmVc:&G!2<5!'5"N0cXJ*B3c";D^
%-IG6PgS=WRdmGVTTt<b='ls_c`^GPH@3plG@]Dkj.lt6[Ufc;!jD"i%#e2o%PAnC@`hRN9fcFgjp.B5"<dPu)9W6L'F,F1r5c]I0
%N;Q(P<_#Ud9p!oHX9$LuM:GHW?imD6!P")c]P<O;"hrop!G$gh5G;)pY?AhG]0:S_@jJ-j;!ANc/#[1kUG%8"+_63(52fHC-3tui
%@&cAf#Ycbu?4Usb82XA@&CZj]e]<cg/@(C8Xct2!<.f_071KWU!7P'tKPE/1!XPG;J:>!D#bP;rlk;K=PgiRh,o7`@A[l.\SD#9\
%]G!32PI*VA;aXYHnmup1@j3DfKM)cZ@b`_l9+:qb!eIT*:<lJ&:oTp*5Tg,^;?n(HbbU9/IOueD,Hd13OW$+fN'Ic4)TF^*/13RF
%#do+.o_M0^9IV+/1huM\TjrL;UTPGm[0q[c#<iB!=k&j3@[Bp@D)\SNC^c1j=PgFh7*R`u;\!q9)iUVtV,?qo>UY<;+F8;N64HU(
%4=`c9e:m9T+]+(eIYg;63EqB5c>qhGe#/b$gJ-q]M5j-.I%$6KPs(*MLDBG<#$Rfd'.,YV=j!:inR8tMYB-V8)@fmaJt7Y4bn^^^
%)I*lr)X>[`ccVM,Vk%K-Jt0hQIV*FIE>g>+'%NSJ4pCXVjE'F.B".NR7pM+bBhh_Gg2o_iKC,mWKCo>_/]";5YpK8WRg/U<jjXWR
%)A?#.82NO='40ceXHW\kSXLt6kuEH9r>PpE1_WZ-TM5ZOm3ujTfPo!%NfJ,D'@\l6,7)?3UhP@5cmdEPRZ:8N45ij81'I7e_+Xq=
%KS$C$R0Gt>/%U!?*BV**0b&\@bif\X1k\N`J>/XH';a9IrUc3JMCU0/UZ'"'#qmc7\l_E>Yn.5Ud<2s@[H*F:ZDBjEFX"\gY&Z@W
%TVV[qMmY>SZ?3L%ZD<#ITcB&>K7"R7!Fp]pXE5n=OLAPn$Wi36/K2tWaB"ZnV)+l"<1:>r<12/aQlr4oW^LP,hW%b5_MO#cA@/-[
%4D@>7-4^\]Me-WSdA6Z[&LK)-AP"*R]9\J?c9c03OJF&;3XB(22Q@`WUJ3_r+HR6R#>J5oM\h7mQ6[qG7d%kOe-SJ\#[_ZZ1EiQP
%SDkXoBp_Bt861IeM-Q>l#\b"Je-XRe/@TU*+C,,:`Ver:LVa?^)UG$OE=!]r9M>e^1HcXS9/5SNn7]ld`Fh2>7k:3*d*YD!`,H][
%UC5PNVr26eetPNDZPF2%;7D.:L=O;K]=q4=;<iOa7cX6#;e@l%\.R%F5t9Jr]M)GdOO&n_A-PM5!MYKF]P&F^Task:d?%Qt"Y*3(
%`i!VN&hLUJnlAT7i"N"4AL9j`%E7D+TP-WE.jl6Q$;5^L'4!aI+\si?0F+k-:aj^k8q@*X4Z:e-d7*'4Jqu#n*`F&cX:A/m1aMN&
%JsuM^5\l"-WRU)N(u@6G6UQ"uZ9^nddI]JmTeWZ5f-N1/KWl$Nb$\oXN%dug6>%O@$'&,$Ll<'$V'dsn@/uZ[TcqL3r6,H\3^p(5
%;^O?RfuP0K.'s=.<9PrG/9G?EPVS*34LSEU,uA87hgc24B!V[K]99Rm$6:UmYth">^upUQ0JOURG*>Ri#Rq!'A%-67"bTeZC7G@!
%_0Clc:a++G&>6m"_*J/;(Ep+OK*I2H*>Q@DkU^-4!=#)S`Cj@\B]Wg[=jVtiomR2NNG=ukSHLO1Z'(d-G#!;h":]N4ibIPB#;-Te
%$oA6Oe39Qk"/cM;F;5->,$Cr7&Em]MkkMjW?FpSr?H75,mJj0apX:eoo06Nqi0I1N61Fg<S*P"INS_'i4Z['JZh'gCY7,pVpnP$"
%j514BmFgn*Roe=pVgl=m5.s",Yt1L8C_ff2rl?X>q"`s2md^=S88,@)ch=RBD6fcM@I_n-^]2>*?F2BanD2,,*J'LJ":T\UY:G]F
%1llGciQ8CPd)e<rPHV/)o%1)@Y.eWM!S%6ZU)D%pEqBmHOs$Yc6]NZ.I+io&C]jH&S,!@:kZNLRGIeS$blb/P/Yr?J60faU6nq8h
%k%>>o3`oV3Vd2TZ"*In42k?]6`M$"MDP?o#c2'?D(99C@^Aa:!JETtO5C!SK?)\h!KD:]=8+FqnKm3UA1V=d:V3;AUSB+J+-75'%
%IklS)![9YH=H[1J'+#[qTI@_u(AcD[CH`)2+mK*M1O']"An"]^od41\)nPjRpc4Ih2(eBfMYpq,M&Z2nJZZUuI:?TdR`b(CJHP=4
%j:9["H5D:I""!&+?P!4>:l#Dce,o*V/<A:T90Re:((h$.5Z%[k*LXto[r!7E4?L9eWL-\=8VBaM(d#7Wpm&M4!ici^`CgG_Y<AuS
%Dnit3Gon:4c8"6AU#r=M'ji*+,8_.C,-O;0M9l+3:ju^G@dj+&JM--][bH8/:V5lA;<A?hnWV<9H%>+T=F4u,_ehn_:!m3%?>gba
%S<;p#N-:rd'R1s.=66kfk9Zh\0u)0-pjsus>^/IJZ4u0kUGut46'/"m9Hp&80a-lWp,qTA-1.$PDK[Kgi:KlL^d3$CFBC-Ng3D4P
%J'gLoTt]JrJs03]A/UtHp<kV&=2I:o/Tf=c66B7In=9\aX*E+rdY@1c`3`Wn&')R;7=JHGNPJH?<N:Y*dH$DB;*nV_E[YsV*9AJ-
%?I`fQRfQfW?7)KI8&&1'Mu@890P(@MJQF%><od!.V.Z'l/%!;]&KM7Cjal"&OZog:RgNF0TtD&$A"kE3ER6!,2W,V(I"h3Y[J)T9
%p<o#eD)Zl5p)cgH443A0[DNho@?<r07.)sUVbb,W0>]urM2nXZ2t*]L>A$=G7[A5XI?uUpdheoU$!=j]H$p]@hZnW$#40DEO_82"
%+iiqZQS5bqIf_nsr"Z=3\IuHR18/O53u0)8JY"6b@Cj6@Uu-:=k#bg.X<YM=b,Yp0MYKqcoRILr%:o9NO/BB_?'0I6L]o_QPEf]:
%M/]F1rAE-a:H4ZC7.*?\i?=aBh[)cCW1C^ciMP?s&r\s'S>@m+@6uPr%C#OINe^\PClqRrqs?\/B["%GdhKm1'$qmr.`@PiRR%@'
%-b4(@W3gAr6%X'*QMVpZVeed=m:,IrNOR`t.&,CK@:X9P;/]tqYRm$B@Bd?06OF50gD\7%Eg4_S[E>ni>!oT*(1D42lI)eol\+U;
%Nm]t2S\Vi!^4C:mNG,'=qb<,>/e1l>PD(nEpCVOZ>IoH9F-6B;pa7aaY=+<U&YqMZ*(X&$6[G^T"WjE07b/0QJ^p$pR0pS]\/b2$
%.Vc;@Mq?e$g$mpW2=_PcV>C>[jlXq>ecf(Y4=&L^_@*NLb&91)(+!=%&ds>iRCi//:WBlrF>3^Ap2KlQXF>l,&!_&[_)ja3d*B-N
%k*l,%)t8%9W`WEhS<kN(F0.t=MheA874^!m9UDToo.Bg[MIM.2'-96L<`phLOdl&%&$'H&1(TiL+;[P=]hQH^iDLc;fitM;@dkIS
%pPcg0gFNACa#Lgro?c)(AEK<8D\%%`]"Ouj/`c*U@cp?":@:Dd%l(#_R6c,ZQ-,([*`klQKM^W8F`q25g^tVrT1&57Q!&"B<SEO2
%(p3!2rS'uS23+$#>k,-1TR>u+%Fp?E$Sb9eqC5YTDH8=<^7iGJ+)#UZ<0`^?I7JS*^'=Ut&VGk.nBVi[3:#Q>WX>)=1%(c9PqQ+o
%F;M'VnBP(*mX]4XiS-/_?<+$'+sEbolBK@i[)hO=bb(=dDt7QfYJ#_OiV@!!L`2&i:ERr`Tps,=+-qTNi%Q=T0SM'p;2_\;9*_5l
%4P$Nm?W1.0]n\VWB@Y^$".D)#T;0Vr)W*83g(l'*$r72B4mAX7GMY5fUWT><qM9_S"C8I0J&qYdR2'E>d0X%0WXY1=:Vm[b=Q\m[
%&t8+Hb%sM'JU2HWq-l5b+Jtd:ls8<?GKb;;*K]0i/5/&q")&h)5&8Ei6=f--X18Ojomt*tJ2">6`!`7mk:itV(b"udR2*7L94^tf
%Hk9^u<=Y1pUEAotH>13YIKDNFcEi(8=]b:_Gsc"3A[mMl2fYR4+:=lK-5n/W28+m#81.R;Nr/-4C;2lXpmEXp#A8<F5nCeg?=0Jq
%@4C[j`T%\XaO.)B=3[=/9=n>VXZYrY!no'+29LYdI<jRF%Z0hhJ@`jn9m^n9XFStooaLW3NkbW!BcSWnB:KY68!LH^qB1`b0J%`/
%'\:UCq!T?If!2Jn+:WmTpcVY[FG5Kr(=b<X[lKrjAM3Y@))Gp9J)1\0:pN-1GT!JA;.4=`@LR,%Cp4%U](&/HS1Z&6MSc`?,L@Af
%`CUGHd5l:Jo>@PRAZ\<Q;Uq'<QcUYrA3LU*nH"$#<FH^_:/9E^,0r#5?+e#'OnY/1X%AKjFE=nMLk/nP9c`K&r`#n8Hof][l;2Vj
%1Cc=SeU_IjVpgkaGsfF4J4N,+LO7VnYV>9SlDBD\K5gc6m+30-+$fI6?HekIqj,dNBbsUN,,*,a`8Emf4,#%',h>:ABif-Yg&Ag)
%S&LJon@D.=g.<L7-1+Z3f5AfoN4e_9DSHoh\jPEcHK>p^]CYqo0dh"O43uXmGYk0jM"h'=f=o%0N0/ga5&l6&T/`mUn4^IRA5a<r
%f1l3"2KE/H$q;_=Vk5J2I;),.:#'mf'CtG!K\ghrP#Yk.TCViB#/euF.RmtCM:u^!Q4p<]&.^5<O]]PH0!_je4Q3:1-40`&gT%o_
%;T6+[U7.@/BP5euh04.hI!q#<U/6Yi8,'p+1c]/umQ;dQ\u'[,0q!n9Q:?;XK>h@Md&l&O?b8.B[F0kKIX'@2Nt`jV+4#8pp9RbC
%&#^Wpn\/;f/Y-]k7t1S24Gd*bcA/nBH/bHHba]k_!0g9</2ri#,7$;SOTAW&(2I.*`s/H`naHd5Rr7L6B1F=Mf?+bYKJ(h;&EAOu
%4\(M2A.9Q^[]D\#[CedG9@:muL,2X_!h0QH20eJh(d60k\duZRrktb/V$L7rdk+PZO4^c+U8CQ+0r^EBMUU:+e([WZn!/0(aZt?f
%;E=V2!r7=;(osa-`K>WVKNXQ;G'=Qo"Za18!`dU20X0gY83%ieYC/D`^:+ZZj*Q]#;l&h`kEF0Ap1!B]7!gX=8k'qb-97e&l0g(k
%;b`A$:"g';aToAoVKc&QnoDM!Yl5uRE3kLocpMQ0@*,R]9H*qfa>'r^jg8>152lm&M*8GN/aJH%6c"#^jBi3qYS1R1V*tV[<CVA;
%`l5_[oJH/i;KF@-_C)b83sY\R\l_?6?+l#5;G-#nNBnrm+fL5==Q)S]Z/pmR-3Y"O>]S/(i#QUVlK:mCKRhF-Fr5'riUe2fe$DEk
%'[ag",54[r@ufm'aVciY1W;VQ*2jcUHa4L#E#scJ/R0&(W4#Q)#k$5]J,Y]J<NIg7Ha'SuiX-pIV-Z[tgD3M&%U*kS,T<=<'O>]u
%2anmcaHEcL+`"nb:#Psejh-slnTUW[ai1>MY.4eN4d^%Ogi28/_PrqLCn30SBg??SS&6HP88'-XQ\7g4#KkS!@BT[>TJ#b&6,AgJ
%:cCDa^H:9FXFtWQPcQ9!0+>A][4Fl`NaMVUnbP`PXpeD:Ypbh1ZB9[-h1Mqj:p:+V=i(0,SO+Ah%h]6;?5!=B9<q:CYOdba\_jd6
%XPSIk$7KX\M3i..b#^(=edld5MX%5eZq&_NGcWKAD1PDJ'NVb(djDGJ&')SWlLk80M=jrHjt0&O8a*7YMrI-^RbY\uIXPKsrFq"Q
%'51Fk^S0>WHPg\IC6f:ZL$@tBI^;^0Atd>P6?q5?&Y:Dn6sGg[J$h/TE`+m>N>IL:;*79Z<psJ0]r8J-'iHFOp-N,e]U&j,Y<qZ1
%#N"U@k91S20.$kG8'N]<Ao2t:Crq"*dp!*H["Gp&CHJ5B(Jb&UeL8jO>`%6Wb"/>.6l&t3\"\$aKW^-XWjRMiRD]H.iG\l)folYF
%*::A=pWsYr83h%)55"CSb"WR14XW??R%=t%Fd"HpKX",W?%7NCZPBaQE\/ZB-*4"U)<\=+&ujHUJa&`i@ML$sRZ'ie4-s4d%VK:P
%*b's_*b2ZO6(t1rR^`3,/Mq^GlD'6>^@Hnu.f^09%3>L77<T\J%^/8QAhN(T7.CM&)%EW5\On-K*8S^T)h<ZG7>78Wisia-6Hn?L
%jADP\ct(g?NCNLqP_C$i06HiYLccX0-s]Tr89U"Hp6!SfbW#qB##1-$:la[_#HsD7[Z'DDnAEh(9Bq-2j%G"9BOJe)DnUs9->j*f
%'o4&=28r\RdM[S5#ckYh#;?'7$*i99?7\1PTnR#FW654/@;J(.>be+On0S7`\=td0\fEW^'B!qJ<'ou?ius;R;Z=M*:5e)I!P'OM
%$P9)q(5c?7<!gc3QS;9!k!\89*9&tE3un6g]VZ<nr`J6)F7ldslo@0<[@gMPp7/=K.$GC!^cXG9Y$Fl3!1<C]`ZR`6:.-_nM*gJ?
%$!ic=O$ah==C947_\Z%>!;%c<A."mj67q7@ArY%Lr5!!I]MPfg5q&D4cH;e&SHfb170Z1lOgoEF*JpY;+E@)*B>2eqOl344,a?(]
%3#MS?!Ap1VRUH&,m*H!uO0F_<67,2F$"Jj?YGM-JZIR`$6jJ%P=MeX20#Q`!dUt[>O2#KfSM:d@NP6AlFV`;e,b^n=$*Tp0D*^9B
%O<@<GIlNS0=<>eR(N"]Bp-kIE-Qk(e'!XRLg;9$J@SF>nf2\UI<]DiS]ki#t\`iVDN8!/X!sXUh:DS!%=]4VuKL(Rf+Y&e.4>%Et
%:2PN>SW",Yi$=_,`ei]rg&MUVg3Y$'&L_\/o$A]'/L<aM;l_50dt';XH28gjhbql:A%4$-pE2::X?ABGK_[/,)3.c2\h)T_%&D2q
%TE6$48IE\Hj*/$m,%mRB#*?>,aV0TtN`taI+aI)t5-ioLS0:lVOg:F-f7Z!t4J6G&_=KpE<;e)sEIpX-Yg9[g/$9[N%0dc6JBV4[
%7\3=AaF]FmDj$q41d))4c/R[$;f&fEj!E1nK9_A6e-csZk%<:UJI9depq;96<,HhU"V+;6?@VTJc^AT#d'E%7f^V$qQ./&1l9^Om
%VRB=&WjJ$lLr<q&OO.!QP)2mXY1M,<')T;7KdtCl)qi2(ol=R%0o)ljcF[M18l92jqYqbCW":o7G7iK4!,Aq,J>m1So2<rU8JQXf
%CFiTU#E9\Gc<0Kk!2$2$K7o8E0$k*lKim0e&<j84PuUm*fR\FL\+95;mirrsU;Popg:tt-nYk^BaUO8"c<!Tq^oBtP7d"rW>XCcI
%r6.LaaqD8L8JmUQRpu>8#=09Jr7VgLB5qBm:4@h57(KYF*^_'I=:l=t2ZcY8;U>D!gc(&S<IPK[[Ltrc/2(!A+pL%T-7%<288+QX
%`QgLV7]rLXjOENJA;M3q8o^r$B?\@W#plu6Nr(ON0<NE,272[+@59#X^i*dmOKKJ!.7K@,T4q`q-OD?s.+>mJj,Sgqe]:Ci&%r-V
%K5=E,La!$NIq2FT4<+$6I!lXH&Q^%e8ubt2_Vo"0R8QTR,bj=d!,PMA<X-!YA(%`d6l60:`^3G[Ar<$t&)8$sn-L'\!5)kS'?rQ3
%%bjrf<Jc-%^qrcB"rcg]J:OcmCp7)6^Y_Omi+4B-blinB2aA(T]Up<>/L't$nNpf;KVdH&4PSeQ75f0'lDcF,;JasmiSpN].rU2f
%Um<QQK;f(<5oR9ng7T7/;%Q+gdO_8Co#0#e,C6AbTtVf^:.>L4,lU6[K](jcCPfCgF&J3Smm5]Nm)r#d6jIa&eKlHF-l=]5;c$1>
%3fQr^1(6![<K0cA88DS>"BMGV:nAOHAkbT/()dj-*1qt19pU^b/EW9j.U%L9,:B0(Y9mO3RNhid=isWmo2^9Ibp7;/Ck+C\8RAjS
%F<`3>Y*tf]R0u9q@OE[@c6mXPcN>l&]LAU<##fD2fU(ljF\dd&=`qSjU*L%4&oANb%c".N4eVN8CH/VP9-giU&43_g-j[-L)2^hG
%&B9O7d$eJ?TX9?ak,I>NA2%?e&lf%=OGujL&Xk9_Wg6@kdL3G@AlLeDpdj]_)Am0jS0/F5W+]&KWijMGEV6V7Z]c.8-dk:X72/1)
%caF'cfS`+`ne)c.=>/()ZP-as`N>(U335M\_4[):n&e1n"%?.^[[]]XYS$E#9Q[^!%>ga)0<hF=QjHW[k"/jW\NdCf\&l##BF?Q<
%JhLi-!U4)VL.eE!2)kR_8DXOl7&)>)NFOVd%8jIh!r;L\LtXe)(-RK[dG+6S$ube>X:q#[liVf>oeC]YZJ%Qc@S0f1VF;uqU^%3>
%-PlCr4_q2@d(>h3WgHU5/VnijA,sM:,dX_g@suH!cAJ].-SAR'2C,2P_,<qlDrB0*'SW8R-623D/`<eS6DJ;*.hVl^Yq%QoD[A_c
%'iEGK!j576.S1XIkiIbS8kh,L@l7[aMP!.I`"8/*h6g)sO@./oj;'N:,sXJ#;ZPZ3/R8q'<6N1DrZpkb]3QOh'LJRr^i9&h:>JOB
%DftXcK;bNFit=etP`"hJV+Lkp7PqdBIKN(*-)/u.5n'(NlsP_\g8pRi%/i3?6KFB&W6UOPe_I*We%V_S7agZ`i)/%<'$,FG2p=/!
%h(FB[B!Gjm(Y,-FpAEdD8/1(T<qSFI7e)c/'kdeQp!CM%Bi40VV7I%2KiL%Kl8ad4&mpM3%'*SJ0N\%(4e3iibp%qh;bf9LO(WSk
%3HD]P$Xda`9n)%L=<>\+2Vic3@f/K(($I5?ckB<Q?/^^"Q^,X2Q(UVkSF"V!VVXYjP20G"%XhhC+$`K+0*!D]otI(_F$Sfl4#`7^
%=.cZRnq0h=lnR+K>DQ1f&iEDrWLQu+@Ne=#NMsu2KJQ*cJQHcKX2u>&*%'%<&[_c+<$rk+<<3l#.`"-?ETJ>T-l/)GXF>$>E))>C
%F@nM!05*Cqa<HjVOXHs*"uXfBU/>Kr55Cj/&&(i8TN20k\MFVulCP3'@SR"CYY#:pUDQ7Ejd8\:$3^Vf]<FDgUVQU.9QsA*Yaj`A
%j<7*':M&YAj/K#@?(HtNj%Jm_&Rgu0G(erG(q#@aXM>M7jLO5b,%9RbP1^o1JiI;2#34YcCCWogZm9(HV2-ODQiT>.+RrWg`q)R`
%FoP^Dl@W,X+Cq5=(:"[r5tUp5H60eW<c2_`8@rPY)b3t;:cZd<.loacO9.VA+:KLA8g:^mM-uKIi:?TG2J+TY9+j"k,GkRtO[GUl
%^"rsn'RC-ibKj)tm:TuNYl9Nn8CBgqj)`T</a&nAMioB[_$>BS,tNJaLj_\1T`e]f9\RE\;P)OJ:^P71?HaJeF%DNgO)h5%_Xg6m
%hPOJ9hj5gHN0s+:/I6+,P8EFNjZue9'$$2Dd<AL`.!5o:V3V1NXofoebfMhaBiq"(`ns\M%LGMCT?,`RFV_bp<BU>=@?TW3V4aY]
%d0.bs*^?%/X-o?d#NH:D"5\1e%EO_Y^#K)PO^139eqa?BhY!F5dV;p9gRN'q[D:QX.i0!H'?!CAd:"kG+g^W</Md4aC$9^VS43T3
%`na2koLA$T;Xt*LA^3/eorAS&V5/>TE_[^=lE>@'ajW5(dm[B>ZD;]FP+I'f.48kX-6bmBgdO)%XNWD_e240Pb598ncbOjlid%W=
%:^]u)dYaK+P1G@O%l#(NRG"9[Wck#e\k[nQ?tS]Y7.N5B]ofQ_</:R_bt-R3@/W^/,N)"mR/C(p8qZI/2)Fl,nnk/PVs]@:84'@=
%=0S\iJNQL"@^'"@N$Z$lOg]Bhn^Y.SQ2iS(>&&Wbi6TN*juIbuKN_r=C3oXJjB`;^jG(Y._h\13D9-h]Mj"p%92`-a`(l.P+S9sb
%Fn0s_/k$I#$):8m^hHN)Q/-3hHbo\cZFEPm_':\"fZWh*`IqBmM7cqlUL#iu>$4J-+CWTCoUMp%3@g"hBAI@n@]co]r;E32.8Yoc
%kbK>)MTY_mi2#.8a9=io23M1"a(QQg7o>3f2jVVf#<kelDW-ikgmu%"$#]eLLg$I&WkE^U49%bWU;7A@op?@&KI^2n!ddH3lGt;*
%ac2RDP:6iM#i^gZ#;Mf"3d?jhP%cVeTl0Fo)K(FPOCoqh_*`'1f\V`Eb>K$_N3\5ZW_#6jmK+nM?E;s,qb#6Al;gTInE!0q&]d=;
%.o/%UQo'%LF?F=?*%:\]KVJ&nDO"GoR8AoiI7-pMStM\'mZ&]MUrh>)%-n1"_t1+N;\bPP_rZPcS6A;6+eGMQMflHt!b@[U6;KB%
%%7mQ+95UL5af-H0s!"/LAP5do,E+eZ4E9-cN\r.$HDNj`YbtsFM,";m._fP8&)De@9lVS_D^J9C61GCgBia68X?rLM$VBZ0.f6+$
%`j-/",fl*/.*GL6W(4gZ<#h/Ee*]g(WCQ*i2YTTNdM@'YiHL;A5$YG\@pY$BjOnjZ\^Y^*j/&8<X@[r@HJr77cBfD8hk4]71:.U'
%VVm#l8!Hm`A:t@_)3T*%k;R,i(DFaKL1?=PN`_RaP,\dV\b9O/-UDiPC>?M@9!`Cq?<sd[J:u-1ht9&nTg@6Xe-Jf;hYfm+Hj%6%
%hktj0=buWa.;Pe[lDu;QqpO!)</:<.1^`JV/@"dkCCq'.eM;@3oT&Gi?HG5e[C;&Cae#e2N2.smXX04Sd;4T43N8[IMe,!B7#TRU
%/4m5WC:$9IQEEXXgjo#L[0<+&:Mf0=`q,"MgoM9"oR/c)b0)!&dn4f-4%l:cZcNA&kT2,;@<S*ClmVh4[ub/#%IAblXI4@Z$("s(
%Qc"geQp=_3i^hG%(dD!88DQl*aXNl5k^^uFZ`Y<K=-Bf>j(")q#pWNE_^GgY$ajn*>eCS;a@@fck3-/IK47Z7eL-ahe#Je/&kI\D
%#N`trTJS&E;Q#Whln-@C0RQIU'afM)[rVp[iuqNS6Pn@*al(g:$:4o*jW<+\KY@4W9!<7>\Q8$)+Bmm'Lq5&^Y&J];Y.'\Pi5KFH
%P,F:iJ'e`<HcJ.T`G/'L<"%FW5T#bB:p_FA\3]?pSjpQ6MjBqs+R?GbGAqL:4sYr5cD^OH7;Q#u#`7"S.Qsdm:S(mGg8eE0QU-_6
%\W\7T4Wm^.8*3mh6]/o)S6P4-5$k8]$_H(i1WaW'9duNeK#\Vi/O9<0lmEsUbuarQ03jUWCKSEJf9M@_nKjj`F6#2T5+f8gg"R//
%<#WEZ;B@tZ/,<;D.f.[/d\F8_AY28Oc&'N"l$FY+F5UkD-QNdo/-q6:g;ok[QJmo,UBCr_Wr]i9Q<7\l:^sGg3BCK4>6k=B(Wfj&
%DaV?p-O-'_6df?&jHUW4-\u(dARs>ip&"[`O0rCD6WT#95jB.kJ?uCE<+RDM?-V8&R_mf2+h4T@$oLKA8qP\\S^P%S-TD=D35hM+
%2/>4Hf/i5d#$);[gmZa`nl4jL_X(io)lr*<*+PZ8]kl#6>]CME;4pp.V63nINsurrHcl6((psFCaOp[Y,P4Ge7'XTX<MBr?8p)=e
%8T43"FfP"IX(ko#l`Gjj882A0qL_eCco<sT`J"tLX`u;)*i><r8`9hq!l>S/mXPoV0;eU`]Ds<E-j_Gr&m.C)b(;0[?;k`-DN,4+
%3Ih)rirjLX[IGLN\HoZ1o*do;8VN23?P%P>B\9^^69J_3*jAi-G]E(T,=<9&dHi6g!JEaa9/6'c!&(XFG_*;>]XSm9hd^&&/ilQ!
%gJN#7&EH)>8/,j8nR"!Tf+rF%I<J$Dj;.5]N?gSZ#^gVm*SCup)6_6s`GnL^Jh#6pc,2Jc,4_gV(7uHP<S7nK#>QR[##-4S[LV^W
%b&IGb2bTO4LDMH%a7ZoWXWf$\5c.ZlQ_iDU.4V-B..kbbD'>qQ&*b=I!,7eJ/Zobb1kp/7Y]3Jj3"1HV#I1Te:EC'NSIZX,jocc[
%5Y?VA<V2.lj@NpV$7`18V2-uCK60a[J/<<INY8I8g+MITUiEQaV,!e]>TASe:,*a;+t+%('+HA9L(]lM["F>ublaUti+q[TbumWX
%ZTcON_Db#KVgukiY*]/*2mf6C&Va=n8p?C:B#55C=;9%A5q3JU&85";T1e`s5iIm=4\Mr+g=2qRM7LobnrT*6ie-Ql;MG]0eXVFX
%HHctC4KRmG=qM(h7_j)ir_p!EZ@JKV-?,@[>#\605#^OIB$"7HD_=Y"-2q/4K^M1(*)*Q-pjlT>,a?AA+r5[#ZrM!G*jOrVBd-99
%K\f==-$gE8"fEXbfh(HZ:Aq378<B@DX%]d];&(L`#/[1t4rfMJ+nmV<DQ)lf`)Q8Cho$=h="k:`H;cu?XFQGpJ^PBL_3HBT#nDe"
%CXs+fCJ/S38t-JG9..#+bBBc%W3GIn&1gbY;>(fSa;PWo\TfkCj`$g4c6Z?R8;8f)9@$U4]Y9!t/a,m,^@.Z!1*nsdl9s\ropBe<
%5hK"FX69a_h*Hn+)/WLf\qtSKed\W+j#Um>9XI1t)-&;"6\.hK1^$I^ZJ7Hl)]5Vun<"o(gk&C_.Zql",4`[P"@R>fX#T*fMNlp&
%,$Q<1ITUYW7EUdEb(,1NgC,TqY#V5Ri17Le9T*CTYGt)PCO&\(`Zu2QF"V7%]q=FPLK/mtk9V]@F-9e16U@AE$.bi50=W[[H\76%
%]7`Qi-U/t/66pjkhZGNTP9a#8LFS]lT$>(YF+ZtD8#C'"(J^]D>$%)dUo?h,9;>;f#k-?C0mb@")6FTTPbk_f.UC`ucrT[U3>,L9
%McnX\1a\)D0r$Vifntmc?P!Pk$J&eMC=T,QW'p('DPe\)BTgFE(0H^>b7>C=PVc#dBt5$^Jl+9X'B9P;>16@QXS=p3:`W>PUKPL#
%ZbW5:,<:1b@%_YA\[Fl&'O%'5rsB,7qOj8C\A>MVk,$K+cTfd'-r,r'KmF$<W4E[_7Wj\)-`&?0P!A9Gd+Tjj03##4espOl8Ju39
%6ZKIDiX!N/6[_2WS<li[8XtPlh6`&+8#04RGT*>JGTrXh>d.&n7-$)F*gaC>VKtC<#gP[]-Y.A2BB9^k#q+CD=WT]ceuR85$a5_8
%V5pmo@tH#9i2Bt=?8J2h;B>S9YusY<Wh:pH(5AoaLC0rsa?;pH?D%J\OC[J7=3RF;\:D0ZC+$E$jo+,BRtY&X.T5Z]niXM#i.sU@
%2eCADY_>j*iPLXjL?`A%=k+9Us3#gF0Q`0]4Z%oX<MT6m//rK:#HR[E9gMjA'qXY<\`(b;CVjL[c87aY<<P%[&BE3cd+Xk]4"pH.
%]I[H(XfL6grpVuSX.u[.3Fg]9VV3Ta\<iq&)eJl43kfEp.4-?\i/uKQD+V3g@pk4nBssq=P^]Do:\k:9T[Y$&Cq>I>T3jn%cm<HA
%%fcnMl@K*[]tf`"1atsmGSusq"@&_tH4<RHb,SAiNX:E@G#.E!nUOgs_`cIH=0f!%R4QK*oRRd$,%Q:uX)Cr=[s/76r1)hHAPHWe
%VdPcs@<A^h:m4j;l=m)6dVP"-qog9+0(+EFS=Tl_fr.hen0o_7n>#0aC&K>lSfZ+D,+d\d-G^6c"F6-`(*b%Cnm,gd&9]GVR$2Yf
%Mji#eS>*Yi4cl=)9bHVg]Q=f?PNS0`i_kMTW"Bt.H^,srd1ZH,6a+2k*'EFV(0aLs!NDLihKj1eHgR625J]/5+UgdQ(^_VWadU5b
%V:(DDb(R8e_Pfc]jN:/,@#[6Mh+Fo;=!JX#`IKaMNPm')U/n)V!b*6;MJ.'D&OWWfbPe8n(7Nd=`,gB=1$$HM)3F^)2G00`H`"'#
%A/ACtd&0N'fi!+JF!R\N-*q?u$B4L(.oN+!E/>$FN1_*$pd1]r')>,;&\Jaen)N.Y%Zdr_rE-Q5+:ThY86+[_JF1^_(Q;fb6>$RD
%+lMW;*%NknCH>Uo4oS(7L!)&VG&bq#=H8PsQAWklNeBIDCkg)5'@rmM2FC&N01^N`b!"tU@0(mH_D":JWlrA"kP=JETiqGjS")R2
%LMSn3g[/*H#[Z3'+\I?bpYu!iqYfY!d*3GW]tWN?)*`ABEm7sRC/G[;kf^<$"i@4kFBoC\H'N?>TTpW+f#^385oV5@OV3E0DV1[P
%*ds<3Zc7]Qk.'-%knpRK88dj.gOPEN,]e;<G#m*E\XNXW7sde`NeETt)Q)DG6VukF6^ideC@%;:\Y\<BmfdPVP`eX,'HFfOSKKAF
%YZpA2eL8WaF<ncr*f`_lW5<`)#CY.aU'Y4V+Ub'<>M)1>Q6fj;7S,-Z4d@D<gKt<q?$g)(nq)0H.s=GJZRWbF-gJ8O(_B`MT]C\%
%[K=.8<LeG;!jkeBIk!2@eU-MDhG`s4a*`Vjb`hcg!<JKPBIQD')RX43)2'V8%^FMQ9_5$*JI[@#jG:%WVa>\oS5^j)WmuI^[r'W+
%)T[Zua!b%];b8Ua+W+P/DGi*-/;6#\9UY`;MBI*U5=V8?5OKY)KqND0JPchqcr/9AHQ/Tcdh>j2LsW%ONbgU#8LWX$:HXIY.V)*`
%3uda65d#s"JWEq7Ta"jK97$Hudau/P^*=AT=CItm?rdY]QFbFik;;;X;^b2Yf2?;D2<tGrFZ?;UpGL]>knVFL?FGHDZK*nLOOK=1
%65L$DE9/.$#81OoCh"8CLJ_Fl:<CEsXA[H-=^M.PqsNj8TopuWI)V6ZNu*()4<chcAsrSr3%>'^)edO\W3B-<pmC6>F0JU/@mAC\
%[@NMDiMfbkjahk18OH`FXMnR6rX)X!bX/AlX^$@4XAbNVA!'pF3ttd#hLcLO@^on'N?+(uf!/f"j0h2\rJ8uJX?;\m46MM/qjB+B
%(X3)*LBYrpLLu04A1L<kC>\l^WJ;DMEi:Wb;?pUl/"IbtmNc%shW^45mIV2q'e7;F'jQT#lr.<ABh"fbhW;P\pJ;$o`PbsP==J$F
%KH8&7^K9M2Jfl@,Q*`OIZ+u:rb+84g;Uf/d7*(Y7XeLX4W(7KjJJOBnhB8M2'B4fToL5/c>i'n7i>9N^.#%2MG1%c%eY+I<*58&3
%Pn_F)44]./(4B4(8gESL^([,KkJFCW_ssB9e1-a%Fb'H\9%64Rl!Bm1d8sX-93)^F[@N<iKre`l(1>"\_XkGS\(OTldSXoA7"E.6
%fR7IK2+BYe9lj@`Ie!OIah1tH22;nc.4.!\:n/a-3&Z9eIuT(83HVYFa$U)u)V5H'%3[ar?;OX#aY/%?1^SpWH`QF:U2>^?b#F@<
%A*95lSVO4=/AJk2H*qZb;]WaQr?.INaL9gFM>fc0&Q\RR;1MKE7g1rpU"4b/->Nr,%YR"(YGpn'2MS3.Gtpi8$`:\9mf:^q?;[+s
%%qPo)Qa(+ZTq&&d6`u-DNj;RcYmFPG3NeVR;LQ4:kJgFT8eFiV7T#G)002n+RXI=66Pq_L8n(OR[%fi_N)Eph'eEXI>f*[u9$KmT
%*Xm9BliB$0p*isEEr=K(Uh[FF"]k)ChF06\lJg:=(-h`Kb.g/dqIOsOVs>/FDXZJqqY'RLmeldIV9dG:]""?S5Q0@0p$($&MZntS
%/74)*fuI^p'TC!QIfB,;Hi-+7YR?*`qnoW,ks*q;rjU!u?A-:!MuWbuZZsm3oYYmTO)7RY"ocPBs+Gd'9`&8QX8kB3T)<2GqpNT^
%XnLutIe]E++'9f=`]cAX9Pem8J[;-+=DRX9Y'FqQqaYWIhE(GL19g\+3:./AIW$fcKD;L]FRdJYfDo$rNH_a)UgF=%7f.7RDsa77
%Q3X94gi\,M#fmH4D3J2>2/p]5qZm+M%?Nk0\P9Se%pE8LTq#/$'V&?l:UoO6eqf'!^O.\1'7YY\Hs!p"/lnRb+ce8;a_e0mol&l-
%qR/TJD8H>h*8Y;^b7i`FEc(W*Vk)T1Q1,mGfs^A=IBNSEo$%4VcfHq=_&C_n51aslFc*o*BpmRHbP+1Vn^Eqpg#X;nB(k,Dfu<EY
%:`8-\X91JIO#/k1FZOFs-0]7^>I''OHaZf.J+\66m,"tj:$Q>NZkK`Mm\>^5anH%G7YH!Oh>1HZOUhi<DdEm-<ae0[R:R8^,)_*O
%A4_fbWfCA&(Msj^*mdedeqj3Arq;&A2iF_(#i%is%YutNnrkBqA2IcACE-\i(JQ""g5`8J'CHtr#8[?+D]>=>`C@X6AeT`E'U"3L
%EQI"L>eZeri>"A^F%JFAdKD)[!2Z@qE<@,2&G<Wi0Ho&hZ(9'fO5<gmqZ7]e*N;$2jY"E"KlJhQQ0@d"gs'bAB<Br<4S1N4G[Njm
%&eAM?[BX"dZ6Y2AC9/L=<8K*[(E,a!Is7*(ptai?hWg#%m1rIt+L807DO88&(M<!cXc7?TX7PUdfHd(Q[S;g.m;)N7$apP!eU+rT
%CL9"`RuP`,C<+KOj>3C\Dd9kr+KYS+eQZrID3thVLZf^0nQ&ZVIe0&ie'>+E#YW@3>s*Nu]WVcJS1Yg$esJ=qd<(KgJ(!7NdV?+o
%ThHM>/[/8gbQ^YVXE(],6d^T^Z@2B2@H4V1GR2cAB[-S<q&c6chL0B`G'@qII<teVi]f^%.Fu-gICjm8puD*m[hmX\/O"UVm-33V
%rRH*NGGfEMB8]!iV4YYTkQHK?<U%l^.p6t)&'^=uFud)MhOq-k'HC;$^N]I=h/1_<(I@oql^R3YgQ10uh`El.3UVFX?U"JQldtnj
%CZpi:s51Thq;S\;p$kP%e:0hUrqOB4-XYcD36-MEqtQIAID5LKQ`J<qp;`qOK=;X]hVXm=_;;UjFaL]Ic.T.Ub87YNoK:pgO'c5N
%ofp<Ch#7*G*<5f52<L+]JW:QFj7Mo6YPS(S`SIR(Qbg\&=1'"*li+-;SU#@,n^FPN)82.?\(.%I?Trscq>/Y+F8PB#?+cQP+h22i
%S[nRdJ'ZI/T&&1/^M*B:m,jXYpZX!LR_N-8gqB-'\]NCVlK+Q+\#JP#B7AP$0)Rc*$bpF`hK>I&[O0kehu7kMH%(0brpD."hg4J'
%d)NQCU$J3:mk4%R2Qbn)GM_8#J%`?ST/5RU=)Y-\mbPRf^;'O,m-aKfZT9sM]X9cp`5HkDlc7I5kC:3/s*sc[W6Ufn9@n*_F"k;a
%h7;;32trY[G%nL+k$k[]T'b;#q;#9*q-W$eBFOY5p*[V?Qh(+"rU&;6?Z&YH^UcCoTl+,];)bY%I?7`>Dd#<$rG^NWaMoSjFQ;NV
%q<dG&c0^J(oLlYU?]K'-?JiE+\=5E_51!T.b4tBDpu<1R0,L6&9Y$_[bl4#NiF'eK9Y"Ho_W*Q9?J_83?2jE\Ru931@r;g9\J`TN
%*ZB)Ur-&BMmU43YCq50MGHg0=[N(Z!iA'#+ZT>Eg[bS4\J"0kps6B6qc-MFp3-XF)J[I;;'9Co)TrfDB%?FoWT4&2A\U3kcq*-Jk
%rF:SE1L@etIf4M:^M0V"A$,P[VtY,d>b#+bgYBEsesg:\[hj,:^_^3["R#Dcc4]n]Malg@l*9i\f?ML*DpIh.1)oq3Y()(PgWN_`
%,I%10rq>I<g%kATVjDK&J^_fO2;BfM.u#UoZ^].-g].'EeRj/EZ@Dj7YE*e]@7g5gh0APfr9TpM:%RL+Xp<^dm:Hd3f'3(Te(`oP
%lSj$cf5l8GqN\2Ucckk9T72'6F++%\%ed*mWPQu@Y4b*KIRa@-nPK4q7GBQBlG]o1^inSXGeZ0+LXIok]t(Ye4.57GqSS*#NUM.m
%T()`jQV,TjNG%F`cj+kVIb-<*h&^>.B(J,9b->_4^l3-hn!fgPj3)t2[PbGSoO3qM3pD:QBncBOISM!_DYISb_Ya'ZY.K`H8H+,[
%IcpIDe(]em='+R/F'd'sm>[GKGMeuuCpX`aS)\r9_%6).5%GhijpV.Qr:[%0G`mEQmED29O7RdId(;8Jq7J@Dar[j92YCYeZ@%[N
%DD%R;StH%(7N?"&;ga$972na:`YdKR0CGouoXOL[m#r;uh7':80(.m29t>5T[cV)Ab'J&IGrd=[]N:EPN#/fZ1"eR>liGkk<jgeR
%gXiWH/oQ3-Z/"`>)=k;'Z,>S/UPm_/.`'ih^)RolJ!1rM(ii1i_4(&WN-NPFbjY:20=/n0^;jB\O0C<ef#ZS<\c/P.qe)^2mpUA=
%$l+7fX8@C:A%h6R`\XAGqm,bY3M9bYI`o74c)n\3DUHFufQ1ZLN8;euq/OEYg7Qo17V?m.k4IJg=Np<9e*H>kbO<b1cd1bL>?8ME
%Xo:JS&Z0hus&Qn?jk]'WM`7gm:X@=icEH]N3dn].>L(c5CMlVcF"]'b3Bk;2(+]ElPCL<Y_t_P<b-kQbdjsG'Dm_BKCAY>-]k<_o
%2V5HK.%:,"D2Z>MYA^c(`NIOI3Q7e@anqIapt23A5GL%'He.Z>CjS/u/*uB:jlO/)WQX\Bd*%@5o@"SFbK\I!qs%cg!pXah[Q8PW
%q=EjSS(*nk[(AE5SN60&b&)98`k8pqRA7CNm.:Ybo(M3\cCD_o[agGnF0pb[h4)k00.uZFr\8'6oLlYO_IcK/(N\M0FOdh2EIDmk
%kKUfaEVFCn#+<,niSn]sCPM+1G#*SbC[B'QHT8]fCSpKX+o!:PYW!qe6J$))Z8fP3\=,:nrpZWLi":LmNlm<'l&^bmiVRTfQnhP$
%FCnn8(Pb\K?1Q=e)Hj[9f,o,^arIM7*i>Yoi_os**`F]6SBgKEf!FPM-o4iG4ip-<'YDYlRBcY"-teSi(M-?S%_4!C>a0`YDKElf
%feH^o*=4-T1DaWRMR`7^m:4:-RF@RPdAZe&(M210f_*qf=E@?b*`F]6SBgKEXFHj>RXNDZRIr0SY\J"G?1'X6DcVVEiD&Y\EFXK)
%`!<u6D;N+(iYOfWo(a*C;gJA64[f1WJ'INYm0i1AZ,*\02"bL^$gY\Y1P^,?+mW;mXD9U5_-pV2XD<T6D(jJJ5M\6>6!ZRNCV.6\
%S\lR5XD3Mjm:!'L6!68tCPPpWYc9jP<Gd[#4l8SRHe0=\N(<AA6aD%R!'ErMLJO[mQprkQ_-n6&VU8qu7'h\*')8EShp'=&)m8"_
%7b/?1D_HQ"^\mfro[i9p\JfE;*W!5eo!FJDhsL6ibsihn^;4#+Y$[^6]XZgGnE)!ulh1)<h&!Bt%`>^/lIq`Z5c/gN[glZ3m;cn^
%-O[o=+]04e.,4%<]/5KL$"Z7+ANOsI@6\sJ@:T11ZY9C=H2Dg_n'B`1(*BD)A:#*56\mD-VA_V#K*qVfL@06UF(ZLM^,JX]o=FO?
%9]P$lf<OY*s2!*XSZaL"prM>[n7Xlu+#d9)Dr*>"opbhQldTiXcaL@q*)#boEYXu#m/-[WGg,q<i1d>fcnkO&am1nMKAE9e4JNFV
%;OJk[n@RM33NMW+[gD\Ocs!h)]Am]rJ*6RGe(]em='+R/F11qYh'5,qI.:'MP5?)PGi61s<;IUbr=8AT%i51ncUbc;r-)5/h*_*a
%5N9G5F%Hl3h^obKL\U>XQZIu_*oapFefGt9m*+WK29A50G=Pq)47:`^`-`(Mha>W^_91%3<TiB'bPO6]a#DUEh7T=8``BgY2-"P^
%`;+j/k^@LE[X.W4q;p__cgU;Uji($!mb.h7B7L_fdC\KnCe\]4Z'=/'^20[eh"N_?I)jjQ?/K@AH9\,uBm,OYH\L+g6[%s\D66_A
%&)"[Aa:?80m]qUaQJQh)PO4I$N&:CWJ%@d-^](l[M<CM?^$F[US'V+SEH?DSp\F4PMpH<Z:Tl^s[1E8CD(L<NL-,#!T,1T'GFQlU
%S4kHDEa,:mc03IKAc"=5Il:QDAN.jM([-Z7JVA*E\LCmITlIq"oNi%)[MV/:hh+'O+*QB6nE0E>=jsQl5?R$_Q=A,q7NM7$!KPg_
%YO(ngik,0<0<^jSrh'bpY8eN8#KP$(nT&T]*#pU:a325IEB#pap<3!CDAI9*YSRNB0*fP@%U5S2a3-gi0AB\<+&AKSc8^p"B7jj#
%4\-*hiHO-'n^o=++!#4XK=d)N\M>15'CaK*KMB[A*:,_&@a9>QFkFX&53t=Hij#&%0gDp\p\2Ws9:EB'\GQ!l@\^^:YW;.@K!t!7
%j+5.U)k5kt+>M,JVfmMrI%UXjfGh:_jphNka$jB^^jA5kQO`YaD%4sl?U"Mhe`i!]T+?_,r*CL7O/ja[#$^CiQ+o+)_;:NbcT!?D
%`MQXJOra/;p4h.g50Q!''ee;.l*9i\f?ML*DpIfZ2Van=R(4L2gRS9JqtPNF!WJ@nq`'Rd?$e@L0FY6O0BHT8m=U+)KDFTa,P:/W
%(UI#eppt>0GLk+)bcC>\Bi'-7[^sqik6'`<?a--2d`WjSB+2U:3rBanpj&EtUW!1Yn71g<-'/UcN'4I\p>1j-*e>DC:*0spN1I@u
%pMJ1tr"oZ'`id"CK-0.3a4M%i#2%(BVm@"\%[QZqLblfY4[$D=^&7`h@SVA1IIE^;7[r:-Qd4H/2U@\(j1i@@\3&I+/Y!ZJE8=kS
%/n\0):TiPTkN6`$Y4&R.Bd<3kZ[+K8]WFqs-Ss[=5G#SLs7>XRs1:M15+?'T/7$#u.5f"a\i5kM3Lr/ASomC_J;+Q,T`\ulSW!N,
%K4jUik3,Q!42-E^]Y1kEZR"I?gZlo@"@!p::E/39%WJ'&k]ZD0qm8NLcU4p&+3O-FfDF;Emk<G%hG:'-/1ktqXjdIFjK3iu'Wu<%
%<Vs!EYCiTlNXOl%-%*u&bW[>#p!)IkVOHk(.som2^?,j@*DcL"dtPi5n9+IX[;=a;$'3dR59i7&%it3&nTs2'H9K!DSNXIDk.R"3
%20Z:e%bBFORbNhIm&;j$@qS#.EsHLK@*K_?_g[[?g^Ir9*nkZkH?Cq)%d)Q_S@^eKEsHdS@*[I#R*<*DS_5B3m_<XW?Mnnl3bLVu
%Cq6+@jc8[PYib(jic3^oO6pJ7)4&)>aKYW+MjXb@HZBPMhK'tQI*;[o@Lp!^>O:/*=hNT%+CdLYkf[Qtd&G1fn`/`qg###$OQbj"
%l.O&3YQ$?#;u#MCf?60\C;+Rij)4#<d<d[1B(fkEVU;#Ei9fVWRen9Mj0%u8pN#]HHeOrhm1"Y9O!!!-[bp90c(KRUH'H?.f6En]
%*%PIn)qu9MZVR7jrp4`mRPVL#>J9n/eZ@d/90VeAk\Y\!fX^)sCo`%AZBjA&hnD394.lE(VO&A5f\b2<g#piPc+Z%7`8*on3jF.R
%gcPJt`RXpg=J0!2XV[I=TTdYSgS^J-mbul:FU8lK/MMH6Pkt$k"mQ@@o)c4IplIFdMnfX;JpXKA*AiD$B!B7^ks6]hmYuBD_haD7
%5JT`lrQ<^f2e/&9]D^23YA^Si+4S.+Q%MtV:l7H0;KU9BhYW:[cZ=?7Q(eMT)o(E[llf/Ma$'2>>R<GN]DpD_1LoJBqkfbUpbLd%
%*S*^[^?M(X+7/^t0]tT8!YJ0'i-2dDEu*ZJDfP/mD#(4)rOBJS0:q$,gqC9[T67Z^?L<f?(O+c.?>MGA&"DSh05.u33R6m,Y&B>A
%2Y^S8*9Zs&f/LbGldX5KM\!1F%t!@)O1F08hRJUfjMPDY];kLNQplIRhT#l7MnL)BO-&>l\5!cge3p$$H.L_[-Hs1;hQt6`gRa%S
%Y"i2B1C+Y@Z%h"eiW!3X09s2^\+n90.u.B>%l8"a2m'j%DngQj9%k>i&m3HNe_B6?DD)Za907I$LlW'R&\$"F[.fN<UW3AV31?P<
%mQ;fU_g.ZYd[b=U:%baFSGddCR<X6go-fCJ*X#+W?%O)M'&YA?ohj.fpH+5i@IIgkQNTD5M!)J$VoKT2URH/ZB$oHce;n<RKsC?h
%bOaIQ?efPHs06?Xq!Rdp3H'*p]T[4f,Ar&QrkEO1O-?WR]UJcorqbun]j+#Jdia"#(M<3iLY6#E_ee)FbWc$Fm+GF'6dWc&P2O+3
%SmK0W3ThZA*?=Y]dqX&48UGD.aMIDON=e[aBtKi+_=b)$m9n)ke'#peL%DL.f0bGWLIncK5^2_56]aKWqP?'qs)e3+%mrZd"OZhE
%Dm$ilXWV-;Lult.J%E-2s75\M?b_nMn;lK,HM-=C,m:pLn*Y(r5Ps(aSppU"=o@d\`uj,er6bOg%t4?W,i?Ce8A<:Y^VZoKD#a@h
%-Mr'sc/PeCJ,bR4]P%cPn/_G3rROh@aZZW2`^S1m/ZqY*l-frdb-m>&S:0BJ$/cJ'Bq@<5>2[`+QGkRa$_L%QDrN/A,ZdLf;G4!V
%-cT7&_,%JboQ@eUpiJ:)cTu)FA!TRNF0+p?fGoANg`1cXpNE:'L-+j@;9u,#V)@`TT%FkWZde?lnB!i`_0Z$RD?'53mpn/dD`d3N
%*M.3LjNNf%Z_NQ%F)as(UG]-FK03a)FGrH7ek2TNV87!76=8o#/+De6Gq>mb\jKi&mUGdmoZosp1]#+`r<NMse%]2+1jQA$l1Xbg
%78nsXjYImK7hs%D*HJfa_0CX<d/KsA<9qS%.LR$MUQ([J`t)8#/*$IV?!]WTS(m)3=`)#@K/R^+4F>YVhqpWsW4'lA*9Q)JPIt)n
%W5h^1;V$8"IXs"&fM1LuS'8G)J[969aT+G0*KJUB])67^fpC18,(kAjEgUi9b1J]l4q/`PH/ssGoPF+!KCn/K,HP17de"ROcRk23
%^]$hA<^ta(2O?qdqDR<K9h&5(@%TQ"qu,>MU\Wtr=L9Gfb9C?OrqP=Fkp9o>_&jJc[N3;9gXLuLg["_7jTXW#g'7/8gPZmJkF@\o
%5'\d'c#>PEXD[M+.XU5(ceB63m,mGNHI4TPqgZ/kGek<?-dUgf;r=tlm*4?<L4P'`@AA2[oB+NJ(-h`K\81YA[r2(YMUmhIE15M/
%#'eHu+3_SaGOmnJ;>=ZW4o8l\3l\?"gdaS7s-D"!8K"EmiU?N_+;1(Pr)kD#I-sp"gZ0g2n+h5"I&IRC%W+IT5u+s_q^W>SrF*Uo
%%W6%+[+O%)b/Drbp<)H`l8ulsED(6#/\T]rcdTAuQI!`m@.bQ)>F`?+=d%BrKB85i,O'I/a9&JTqUr%OCmIQQ`m=(0)qCl2mAhEW
%&fmr`BquYn8mS"92HcU9n)5iCoc^>$gRoqSUIb8tP_8Y\Y#c,l[_#!p=F9FmMX\)`V/+hhF2l,MNkpI=i?-pB[McGbQX%f)-_F'b
%li-Fl.6d/l0<fa?j@)8]l_loG.dtOYq@gNFNE]#%hYDB&V0mcAH@,@#GseipVltAAZ1H3h;.*:M'&#knNJ!IeeD_qf&c\Zf!ZG)H
%:MQmh2l[l^T@"?*:TU,.7@EJ$nRqj7Z``b.qkU[J[@">MIX1L2neo2$gt-KchL'6Xg-8WRUaY9VX7]CPIAV-,p.<?IdDokpKsp^N
%p7"ioaDm>Y#Z#Js(?`9,a*uOXXYF[al9g.FY;@&<I]X^7'*lnDO'gf"I<U-`F8M]f*0%aZGI'%0Nh:dr([g'c?f'RE8PoJI_DYA#
%h#)Err99R@H+U'EiP;DTrD'5B'ctL.034^?HcL24=r?KQ,T6EV&((ZSmZ#o,V\]dQ)WPB(!-sU7rehc?J@;cZP"98#DZc^)`KS[3
%//G1<5oO,9bMc#J+c7EVgK2d9B_#WMJn-K[*,>##.Ck>_f1\N'IH9o,EgJ?!S'@Q#@V]3o@<IU!D*LkET9)tjoA9)@[ET6l-!Vau
%0>kdO+rN&qM74(8UC!KJQ@s+'VE&1Y<%h=In4^:Le=OM!`BG2X_3HQ<)bhHKBt)"7BT5f>o7"M*JCX<3Sq[Uu:Yt$Xd=g)7%GFd:
%R"GZ3XX#`?](::RGm]j]nIcLBh!QSQ0KR7[[L;VZhRBD//.5;JWUQB8+j4@Gm9s*7((Td7#*:Fa:']/2BKMfpAAle08+aT)G>+^d
%#E8ENVX<[,\*^#(:\4?P51"^=9-^hRLYNZhadN6:ZhC8J_qikMa3qsNXTciA2Q"9c&)"<u@<pHFa$G/PiI,'i]S)@O3=h.I&X'@t
%,JrXq$a];s+BQlM@;N^87mXK3on>nb>q&1Ues;Cs=F%D5r@@Vs]<P^qP@;sa#o4<:AJ>jI7HlU'Hi`UTRd;iD_mVFI)$TD]kJZ[O
%/10lpDaTeF7U.kZ,*)eg`t6,1`S#NN+nD,(:J/cW&)"O&c&!1u6X*c00]MYRKtu&!#a:oL?6,L6`5:_X5%"aQYqQFOqNBfSp&(94
%HIA.=p@\j.e)WVE)$V.to%RLi.]qesZ_M\h8K!9rr,NY9]Rj/Sb-Xa.CLLYRer_YT,46OX0MA3Q0S#mj.rfongt16a4>3M\VT=hF
%AB2PF'IjDpC0L\I$r`ql)`,=p)W0Zh4mu?`m-mZ#m/_oV`^3fH$RXm:)D<_Ff7bkQabr1nN8\BL&%7O@Rk-XbCYQO6$FMhZE0S1r
%7k81b)o(E9'g5])mJA5nd)3p?gT?ldm=BUjif1;Qn'@6:$[N:0bNuYq0>5#`2gr>I"H[@.rkuS!)@<Epmcq;i%;u16*jU5Pm5?N0
%qH,lZXcI<H"i$s0m1C0m,MLq^V$qB"]ShVoZ*UqB\*;OGj,1]3SRC2\LL,7(MSg4bPMdso3),#_V4u)uk[G+ceemg.e^HV>(95%@
%P1lXcY7*n+FhC3ZP%c"+`eJ11[4Y0,btjcP_f+<W>"G-[k>G!dosTi[hDcncW*?X+g6tV1>8n9R_!?`/&h^&d;0,%`YcTl^D<%(1
%7tkU&PZR3h2/W:HIem_ZhZN5,\k7p2DsK_g8%Z<%Mj__Kn1b,Gd7`8:N+TSXH@Rr7?-#e0&b\W1&J.l`'%Dl@Du4UYZ1<!ndIMY$
%FdQBHm5\-.>1Y6LQf4PcH8!_k>CQK)(JAOPHeRc8BZ$g*h"ae"9i(r*rnK'j;O6/s$`SggC6u?WMjs[.$YkV8(+)i;e\QX8oE(R4
%o!Y$-@q^:hTWO>Ke:c+M$k'F2"275VU]:o1hKE^mO0fHhTkj5#,JFW>#R_n1D,!NB4HU8D)75RXW\(<neYc<IiO@UD'(N!?l$HbX
%,f^i.ccL"r$_/+QP\/CUjC'<armb'+VGOBC?l:"N@0MTSd-l<W94V_F+&N"6&W@Y8Ru$OA%<etQ5NXs0X"8_U_,bb+lYt=Q'?PM-
%KNApPWNL)OK'#A*Y=?Q!>d=0PS'\raj"A5_j5$b!VM)G3p-i'[Y1=X4)p437q@gE'V)s&tW%0]![bVk%T4#pPr=;l9e1<+(WRj7)
%<%8l6M->,WZ=)&*f^?'0[>@V^5`;V<4V.HrhSWX,Z0+DIK10S3=.;q="t7^l?qB/W5LmOBX3]r-C,=J2.R8G;fPf6_k_A?)+1!qZ
%Um_,G(Q15U:1'VHXtVG91o9#kULn67Hr%N*h0?.1b6inu[-<_hB$?Oah6s=1P%RqPg5b7a+gt*D2MPY/ZB,MTf\Og#`>,l#84uBu
%SOo\EZFg]n=J=8-jdcflO.jN0ronCLD$tTJC_sPYeW??K7^mN>mh2K8D@:P7RY5u))N:f+"hn)C9]fV)45<P7Zd.kD>u;Ea,km":
%M'ac2ajtAS$_-!R8XMbY5EgG-bAQB8aX#%ggl0uUgK-3(ji4$uQM*Aslt:#5<f@`+A&S=t[SYhngI,ru93PIj;0XGenb/.%d`$sl
%*#-Di.I\5tcjt_D[VOSP]@YbCQOC"enhspS1)/&NAk!oXH!>-UpOV15CSaW2:#@Udjc6]a&E].dbAArUp=1Lgk<0pR6J^s4V5spS
%]//hR7[9>f6n]Aa'06XhLrR]-k[qf>:VU$SA3,;dc8Xn(-j$(ooRbk+:SKKcGu%]uOko0e7jsLq.87<_YKX)W7!o)_%#WA*s+Z4c
%[27M6$!pgTHn3BV1H1bse!@,5lW"dc*Zc#/FV\ejR!H-OK#>^>=_F3U!t26K*O/lfd-Pgh^C,s1Za!p]2+?3MbR<gQpq+l7r[pU[
%/Qmt8%>&5,ZIZ=%RSDpGBVVMjTGAiG8Rlb)TS#9\:6G60F*+L6[!fFm_D>?aE!/rhDR6&$&U^iu=7(jSb3C\kNAFG-@`Xh3:A1d5
%3Ul#BSi951B*a(/&DDFm^7C4$>T@Ik!uI`Ml-t0ansEcC[!$*0%aeKY85[d-7GEuT#IJB?qr$7$SfNfh[s%qoTTcR]cS\VmD.oWa
%F'K^mn!mh2g'"$-bcj"W_579`KjX#/CPr`V0s84NG/(c9m'[klBPg[H7RBN+;Kf9,qMI)1%@%!PK*.CqYQ&4hN`_F#TS,03*Tu%h
%oUF0=ral4QOA\)(AIR%eFhc5XhY&94fT[r,qX-"aQn$h$is\#\4T+inLA'MuMSf&66-upN5]H\s"o3Q+b5:e'>2u=YQU)28K's!]
%Cfn?O9ere$mc<:I!L4GXTET7FL@?U)i-t';;5;>idGdu3Uc%^MrS;+-Ii$W<1,(Ec]:t;aX-t:n65H8SQ\>\==PJ:.^Pn0G6\eRa
%:4uOFHN)+De(aKC9u0g$=2j5/VED7fgGV'8=SZPr1qg%DN_NrfNZD0d1Kb034aifS5;0lg!#B0CHa<`Z"jOGS]&[C`^uicPrmn);
%^\%fO_36_2%j]JP"7Ts->2'2!b<u<_g*J,!Ub+b.8)/EIId>6_7N;+Y@+gNrrm=cbOA'L@&,t2L,'jbem`XqJpNOejcFi$hBAYc&
%0JR8sfMF=@CuG&X%^m+/IV[29lU(b19I<+8-'KJVgXC8#X[r(gD]<-s#\r'\;[iYTmbY<&N[775SBq-rocI'nP$#S2nVCS884Z!:
%84!CFCBDU%&e_I>lI-j;[u\5+\OUlkaeH@E:#3NHFTtu<Gds6tmUkVXL\UW6s%:0)=-E._rGArh-NAM)nY<F9.MU"2s2Njafu\-l
%H2FhZdlD<Y4Po?ChnSHsLAj6kmWS>JZolSr\h<cFBI&S4e+(Fn6mj>,5:a<N`oqoi7$kW.DKm0hhK\it]B`f8Z?UXC(uFY,H@E>O
%]\.(E)e4lHNr7NiG0fIk%C[WNhH\h$rZt@tDi?b/$Kh5*p]pNQJlU]@-fQ%9r&<!Bs%iY21a'JZcMunuF^'E:rH][f-\eQZI:E&?
%b^]R%IQLXm4ru==]$A0BpLXl03)&d'c0;#O)W&uO'+Otk5he\ZWA<VI48?E(EY/smg<'VP$d`PAH]9kon<_T'UAT3&pKXtRj?sq7
%)1p2pQJ"s+mue[a5-[K!31g(Y3%FS[T+!"aBB%TQn"5C5(GsCXe%NLWhj2j]2^VkPR^BY#<7,'DlB-pK(R`g:._[23Z$4jI7i#Bq
%(:B?QAp!f`CT$REr@;3DCS0s1p:YP&g[ADH;TsW4?QQh77gDWtcXibDk_!c4NJgMl+ba.cPA&3Diue<O(^\3^$I\"qW(:\tXL=0c
%LTYF,GIVe(GC%Z"/q4b>]`O7]Y.o!]hOJ['rotK;gsR^0M8gGa0-,W!mn8,Ys80`5.<5.Xhl%\^]0V*=Sgs;)B\c)<Qc?R0\1<YV
%#*E+akSI(mn&(1<Z:T^J,m;9r"Mj,[/2pUn!OAZB0jZ#p6@ibV0m?@.Pbp[*Q-3#]fBjPqrL`"]Jg:1$$l#e;*obUZa?'e0h:Xp.
%AFrAnml;f>4pelMeiisE9!bq=K;3<9c!1HCS^(s)G0jS._Mo!.Ft)1f5GFP@*+`YslIU9[[rQB*`pY#<Ja$A>7C7mD5X8[.kuZWq
%N[PiP`p1S:k<8Ab1t9:q-O/H-%kuW8_a"-9F`SCc7c*O,G2E1F?#6o?D^,#CEH-M+(.DURn>Y#4F,eeBXm-"N2+U6r$T9e#'6d?Q
%HMg..g[4sGHGdb^_O&fOI?-!$G<1N0PF9P9KI'7sbTV2GYI/[brpP%/Hr20?6E;=4C;Uh_eamj\>kZLa[O`Y8!XU?NUmb'Jr,ZjF
%%Stj0/&q,oNi,3'X,oR*4>okg&ecJNf-*cUPKD`Fit#:4mRNg6lJ0er6E;nV<[0A_\#fjR;AT#Jpdk*g"[tu`<iRr.",bTcn;Irn
%Q!6In/D+-pM$k1]Z,'K',nh0$77@^A@n<A*O?*]8<0Q\k;IE-RA^iXa?;DCpaJ&q`fa)4q8/G/b-tJD/UFoc*,Qd6S0hZ%naI&)/
%o,PDO_QPDGPI*k\9'7OX1AtC=-N)9NX;sOFM+M5nr7<\T!%XM-ai\p'1%u;>ho$3tl38cW+=%BqO+^#f=+eIWE'as\2-&SIeeQ(L
%XB?.,84ZQ:`D[50A"r-V1u'i#8qnR&O_caP<Q)k,/>Aq:B#mjrgYCgJek@tt?YP0.Q^FSNLWi]_U9-1O*r5B3&gPBP%*h"E`JRAK
%AB(0+ES4$Wf)0-D!kBsNh\iG438[,)?KsAdOs[HQ1:s:M@rZN<[_p\N+U]Ju,tX!30d&.t?,\]g7N09>;<#JS+B@"OGS0G3e_HAs
%QY&8f+a=tY;i:?UXd5s9mm]ptC6cdA@hi^8.7IfIE,KBU,EAp[RHrq8O?C)2St@"J?Y2utf-7HCai-TlXs-dIMlUBoMC_:SMo"47
%WDYJ5(<89WMB/#p:K_M_X:fg=BaQ2crL%Uc-Gae]U.0S\gn`pQ9/U-58P>d=MM/mP/5m[.&q?-trk.)o5<gYcVd*nMCS'qr="I&L
%JT@p;OC?Thk1:$-:/lRP8b?ei=i`+T7H/q)KZtbKaro`sYZ11R):9F"CDi(]-cM9^Q3\H^4,4^)H_-O+`gI*ME"4.G#sKS&M6LUF
%-f2N"bj$Z7nmUtJ]Lcm&'HtJ[-*/_[,8,um@"=Dd8fKKfCg?ZkO"*I_?M2_TQ<jc9`tYN88]cWkZ!EL4Un5NHN>e'Cb=_3@*g^FP
%CAj[QH72`d4U9MP8*)^*VEesG=sr:;`3n)aRWV*f:LiYs;;eEW$FqN2$cPO.]2jq<$,%J)"BZ<tT9<\q=KN)J@E_$UXH0:pX?n@W
%;G^9)'cBuR8Q)j;*f/K;[o0G!b<_5n]I<oeUaE&4UK7mrT702BLZh6EEY48"B=*OmlXMoWCdu8"7/Jc[0WB`#gRhTe\f8,oKZWX?
%$W(SZ'pIXuB_@.ZiBkX"Jh,1S(:3'<j)D>t('G;=,nnf1(_o5;6:*G]We.$?3-SMT)0(i[.T2O*=G%#]lQ$@F2cO?W>`W^]7(FO<
%,E?$);8tXlPV1WEctJ8;k"[)mBf%<H5`1FPB=W@I2-LA4W(fu]>0i!67g2_%NmQ"cmX]Io)[+`OCg"X,AU$YME(*Gi9p#]H;l%jT
%Nan3G?_b.7.MTu^Nmg*lWLAa2Zc],T+l?HX5q0]\5@``A/lGR7"t#?D8oW*kF3GP&_gf%eApiMQoH.?(3H"l7ID[W/\m(0Ffu`KD
%A(4<J%0.'RZ*s],Q1%cb3c/kF(aF9ti<k"=;PpD[;7Rmnb,S0;8\NmuULh1LW[8?:8>n=@bbcpJ6BDu<hC-ZAj+_Xf68&I74X7!E
%MoJ-$&Yn6]l5P9XLV,P*W;54^R9.VM7`tuF#;KW7f_JRE0Xr#l8VthCTcG?nJN5LsMLI0MkQC>KCo1NMAtkg(GFCp2m`sqt.LM2&
%faH1iYSgt.,GPQ4I$j.?9h^t>/1%rtk,r]_5Db%eF`q/q,2%qk@rAU+_9mpW9:ACc,V+'&$fe(-dO\'#N=O?fX.0kBK9i#C3^*_a
%6SP_eN;[.UaK,msoa(``fOT9B3;AJ.<$SM>Y(9qp62V+q!4<N7d/u0Tc;^K>CM=rJ]3g^@EtM_Jm5K6(4SX](1k\q(VR$;YUoGmX
%,1[)9;se,Tc#^Ycs*8Mc,Ya0AC3.:)8PXmc'5s4<T54[F=cf`6Wt)NBs)@#\<!L-B*iO*f@-'$DS]'n^:(BuDPL.rSX8hiqQ2!#>
%C`Mr$Ca!'iiN=pDs$/l$g8BC?K7E[$@qot/q=<EH]>QV$;A&"gW-T5c-<$tL/1;EQotPsn-qachXiTYcfJnjhX%%Dq3Y$1>PoMLI
%LEA?S)ig5&?5'u=5*du]E%5o-OX2Ws;cNdt7!)$/($:2I[q;*Rbt;PLVUj^e/9c-LoJ7E`UU!lE3q1OIR#]+pf>'qIWA3Z;^_"dP
%l2UcbN(?;s`E(03h2&+QFdTB?#6*=Jd)t4eBj\e83!q\gQIMg^9.N.6p&FZ\/ChH,_DXc0)('L4Lqt&42r#]XEslpZ2U;joLSq9J
%Bj3Y535CW1"U"tq/;O.NEH=\5F1Cq*s/odZdoS0ei`N+>%.3)"kM+)6_io"g[?"+\Y&(p'&*&Eq>?Y+73U-S,s7N<OllBEgW)TAS
%p,;Y,>Lu3*Irt<I@Y#JFLKcOmX"T?qB8'sK3i=X@RVOH2I/J1$`W%qr/o>]VkM,Z+Z%lSbCN7@:G5D5_6MP\s0_s>n`<)Y0cQIJ6
%F&P3OhSF\lq"pg33dK/n@4HAtnDX$hp#!SECKKD3q!Xg#s"7>9g&C/a!.FlS+N[E@L&8Vsn)7#Uf't%Zro`.hl0btQgcbHT+h:<h
%NMZ#cp3(V_-!I<=s!&:<-8+GGMnAPoA=^Mcb*&p8@96d-bSg?W+0qanl2JQmD"PY-5$7&cT>!GEgU[.b"&A"V9E-_I"N@-Bg+\<[
%d/OM16F>Ks`&nMjVsQ(@YC=B"b5^MDgtHd7P&&HMn8pm/ZbOD$(E(YVS`@`;ETa-=r)]fDql=dcKP8WP'lRo3pQ!lKU>,M4`c5W]
%37P^+B42I1qN^+7a_Bp_m'"^sC%&R:dI+FR2lh(LHJ[?/4$.,gm[Wp\B.b()>+pmc)HD#Qm'sBs`aUgp.V=1a#b4^i$ej``fm)@6
%fknCakP+t2$$F(.gabtGpWC[ce"a7uX'Q.eAXo7I9)ESjXM*(sXS.\"Np7E1FIIsAS]:Y;Df`Z@hqL0Z?1mQUbb9I=Bl"nl;m:?B
%l*><Y4qbMullDU=gVJ!tP,#=&MJK_^g-V9uJ'2L![cHuYkmT6T*c)pjDY2Z'>I*!hG7i8oDcrUM`J"g[@[ULjZWB?&_^rT=5($Uh
%<G[sIfu9#@E"5r5)p[EbL[-r;MtWeB;,75amDH]m-Yn/*%(:3,EuX,<NJ4LJe+UdfGOP1mH7P6lkIR50(,X%c5Qmn!bT%.D7p_ao
%0goNJo2hhOKS"$UM=&40]nSZ+^5C*f,eJDYS]2!-ktd$B47)31=dIZIKA&DlIW7mFXf]D?&)&E.K2XfklCADK-ZcJeN@4"nUV60u
%'ZkeEf>=c&gh<:Mp*u[%S7gjVgR<M,*o$V*\()A-+7$V8E'*oGHjt-Qr&O@506MUcnm6O#cFPA\7uj60d!0g.i-o`mnZ:L<V"D*:
%N5t$]5@@?:EE.HLlEE)JV1mel.1?0(>)W:LSkHgaZ.A/'BqNPGAGr(Zjjj`f*c?@)c`ZmugKhnS^8Jjrf&:H*doT>5q!+>i5<e7D
%1kc4+_XCpni[YreLUt:>%3Yi2YZM`Nb:/3>eUbHB!nqN5lW[oUF)U`$b;9u8f7*[.qV!g@p<2/;eBIb(jb8Q#WfuWBFKud3puQ),
%JU>=lJ@,ag7fRPq[AX?Qb3J)imeq@-.qH!BWT_HFr/+1^l"'C+lhm9q`aQ'ZBGu5Qg<iMGS%GQN_4A?beEE7(O>.<L9aK?S3JWFM
%M"<<mk+2>?]$Gabp[$Eim<^BLBt3&Jk*k&,iskGMF_io$mId`<VlrFRNd1rFY2]HibtMWn?PBi220!_[4MH"^9JV&:6jYss_C&,S
%]Am+A/ph]I2(5I#`nWT,+5_V4l>:HH3A+q%`Z="%F(6954SK>pH^B/.'BAK&LJKt]=/4_M*cI&0VYTbs/t(SiiT^,<2sC,sm%OGC
%)W0m%$F-,$Q#Oi32@mg@VpT"rl;_WqkHD"!pQBIHdgXHa@I"4H\U!]=rhZ)i&PuP.ml;b5OFkPJS`@UOG.<E_Jrth_[!Q&O?VHfM
%9..Q<oiu$SYC"qt*M&.5%A[S4ZB$)G*M8:/T,hfU0u8K+>A?-GT2\6l(X>S&H-2o9b9teJK*9Ms7>ai[([YO9I./W2fBp1b+`n>T
%g;fOu`K/lqGX!>[+0C#I(F%uA,TGI&QcnXp`jfJ%Qn'!152"RM4_PpCb.#6Id(/!+;'fF!R.as$VgZ]5d*&r-GI2L9-#4r,pW;RV
%p`s3l,df\fU+s+q)h0eMa*W=/?#2Ml.05I7@:V"6VJ/orJ\@/U&),)$-NhS`%i\N7^G/\Z%g]7e_*IJ.n5!-68je`-0s.Nh>?($.
%n+_Ct0+SpufO)#aU!VYm>=?3T4h@4I4ma7q\`^9Q=EjMkjCpbtS6rYqhD#H40QMb5m0grMq#JSg4@cr4i^K2>+(+EQ_qnCf^Tq`9
%1_'@4i@h9[\p%<ag17]_`CtL1>Fjg"a^r)finmmc-RY64>rHkFq_+&&a1][8b;lPMYnT7UW?fhJGd5Rqb:X>q43)tK=?N)uTdoc]
%4146'S:73CGU9uR?V*uOgtuQ+3'Og3OZ2<9j,J8R%5G3DV]lg>O0$$A\bc,Nj0/4ZYt.Ne(K_;([4enoY@J0FiA`63^')9;7bVh%
%'phOue%KYd>9k"e48iToiJM<TGKCNKS9k.Be`A:O$A#Ie(L3/GiOhpgdb\3!PJ*O)&?A/5#n?.D_ir9>%X`klZ].VMO\$_7f^AM!
%L2IMMK;%KZp@)VaW4R<m,1K[S3o9;t`@$E:!M\6s4"4i>0U0S(h/8#IAU(k,WHA4W4?Mf7HCG=OSQqe,#PIXf]'N$PNkJMXm2Wl:
%<P`@e7[j=I7M*&@b-Sh7ZA#V7S%<YY_XQ@&rn`cNY/C2gepq%>=&GHF^[!-;fD2jY[,&om*fh>"?oU@7o[oSuH6`8hS.%jZe)&*M
%q!fN%K;cjpqle:dTuXjADPoKK:7de\X;W<@?63O1:)^rW_c>GLPRoRce^i`hQZT_RO*_-&omc[qpK))Cp"*MTYI)Y1I/2Cl=\)I*
%s$lm-V>YW$pbMR9mlg+[p,7-VCVj`a4ObXdB7#D<s3akR#HIgUhOFs6n/%TI5@AniUTq*iaJ@EkrI"#/"j8"`[+t&?;3CR4)ukeO
%)_-:6kP[E^jnfbPdC%HsiKhj[-!]RS>sE3K*F7sqqX;2elo^'I]Z-`4a*S'MZQneJK',W#\C3Fnm51>Kh[n;45iJO/ceZlTj.uVi
%YgbjQ!0-aKSjt,lH_Z"@+'iB_em`b]45P4'_L^g`-i.0,^jl+()Fl"?)SO%CO:$Hq1j%(bFR\!GeFslt%ZWI._pnaBK)EW&%g-Zl
%)LDm/[i=/3^@sRHOTgm']hLYs4uqBQ`IsQg>I4Is_=Yq=Ha;7tZl6XFH9us+NO-NN2"V[#R#JRu1@jSthU.FkM4m>p4uj?FoBflI
%T@]sK5R^pF(-FYaHX?\nb%WpPII11]?);KjYpKfs\W56I2WZF6IZ7c]1-&FVQEHhLlRUt!rCGeG2">P2iA0YEr\3[W@Qu"+"m(O8
%p5tr$mrbe["/J'(e%ke@iT[@',EQB84e[@D/e/>mr'GE2>(g7f-T)g.&\i!soW#-]^$=G4,5cI2msiTQrEo!B?U(T&\G,;R^3&00
%qiY7"**N4nT>OZJIQBI]lf@P?L,45Q6BkdFi\_C@Y4;5T7#K.ng[-^>qj;:D6!s>W@tNg[:#W1i(GD-7(\!UfkbSo#9jC#iN5YO<
%NQq9Qn"K%k_ktU]o%h"H]fO)\6-sIF\%`<g6,WWt:clbbqN>\JV&AWjp`8\4B*TB2mChq1/COWFcu5.TQTVH##l<4'GR9]I>qs<@
%g"s..=YR`O8rO\b0'cpgj[tFrUj;jM<I%kF#u9`6M2JHi!8q^%rKm%RYaAd*-eH0&n#P(/<$IBi5g]J=)-guJ.FQe"9YS^-\hjXC
%]i=8aj'O+BYKIRAjL.%hnsF_go9D74Di?`tK=O?bLXeuG`8$r.GFNC>bKE?*&smg#m3_:tO'gcBoPjZ_be:"LqpD=`h3VVmZc>]D
%]9>=32kDYY(`g.G^XjMk\S^4d=g5@^BAY7'HCd<l>krd9q<[Y)B"kbd5;2Gl1qaVm-`nJmS^HZpm*sYW#IDmS7jkVjcf,9,bj<j%
%NFW"<e'kju-a-Q_VpirFr8,Ymc.;[b]q'6%>1r`p+3[rIG:)pB9;em6?fodtA#%;$hTAE2H0o_Ji?N^8CpB8^IQ."rHOgS?>MIQS
%NM3-'cHGVQmAj$TS*T\+D_M*)ptXqsg$/IS0=-iiis-*!UNb!!8!^TljYOj,icj@af(PGSq-8-PqgNR4DYJ7%2udRf0_50[CX]B_
%S=P+Vn!sq6P<PE7](<<WJ)1(V>2EGs0fN/2\D:C/]61'9Gi.@=PL#IX7NQG"ChBk?k',9m;q&uQak__n01N]@S=RFhAoYP+p>F?Q
%VmgiI2E0CfphT?W_Y2-TIbI1'mJM4tp@l\BY>;Xi\p#4Q)`rNDq5h-4G5!@"E.<&rl#%];Yu>SUbVftjmi=N\Gs4*J++0[5bO^RS
%mA,$?\SN>T:RZ%>c.:@-[t;0g?715h6sGk%o+PuoAFk1\A8JV/f?IA-F:B<mm``s0:Z$K-0Nr)P'A?XhA8aWRkBgPX:;>W]1`:5e
%qSI4o*Suo)4gGT9@9YqKGP9Q1;"\L>s1TLp"T!:W,r/hF4`='%Vsc7pGkgeGT<\1M.nAPCnsO1Ok&SUo4FFLqmJ`Q'\+!(`T-%A6
%Y+rrXianhApX-lKNtt4Ff&N;=2pf1)l)Cd,0>;HcWu9**0BY+j)0oubBf1Stob>Wkb\K>k8I<RXbdG.sh'+3gVtQnaZ.WB#rHQuK
%Sp9sMU#!G,Hd6NAGr>Prp$GUtI<Y:i\U&VoH#l,D5Q]4.bD0<mdalHmpYR'b<EN/YmA&79qt4VkGPq5mhm<p-f(Rh7(/ZRA[dQG.
%FDL04mLi!TcRaH"&)Y[/n"25X*Zsjb8LL.FHd#bFZFs`u48<4UiEWSa3f)&[V2)#DW7&r0;"C$RLGNQfMlj.MMk4OEnt2al:Bu2V
%2gVf/l_c\2lVC=&c=:p'2ZqS,h1'p%"0cph[%HB*bs>="]e2C),Bo4:cgTT>*u?i0km+?9naU;B=e1t\Atg-Ad'9n+r:\X%k,-25
%07mc-NOP4'jD?7JFB=C.T*N]20>Gdq?_$#&>"%N+`n'/If"hS`dNSLl1tT,kn*7aVl,q5j\L6^PAd0S*T94D@?FH0nmr[VpYGNIZ
%P%]45?17]=#G9b8^ID"cNc&a!jhn(i`;iZ1Q;;h]o6Vj3QD/HedqX:1f(,#N>uR<9]*H4%YO@+bSj/`jqXLQblHX%)Bo2b6BB?tX
%l*mdIk1]R-Xbj`ZO[U9uqq`"@>^tVbR=2]]gg456?G2]O9L"IO5$&R]=r?Y?L_oO6anN+2BB@"mrm/4U$Y5K>>K-6j:\RmX<mKK9
%^@!%*#bQIoINkNU?CJXcI5'N*p0m>b4qgJ/s1l+sp&+7$q3@T<VGDn.\D,_ThYZ$)&md4DI_1)>QO=B+I+T%^au0HQod#%mpA6[B
%nG35aX%U-[dIka%60,(j_W($&5C>:t'E6]j)kB-^hqNLcKuMl`,O;IEc^p(I:+p/Pq(#OQoAEH;?[k7dB<M+g)TR;TWYmZI*q)6_
%BA[T#jJu(J^G[$<h_^P/2f::epMYPP2bW`mZhWjK:qE'O3ZF9Dc037HisPKN51BOp5"Z[k3<ojNcStYq]=&?e_QPbC^&#T.?unA.
%F*_XWcc0.lj)6$#(@]C%,W)(tUfDhY%Ssd:#L^rVKDf<(<muOt]eRJr0V)4hM3G_iA>#ep"tS4]@p2.E3abl+Xo8aL(rR%64m]6I
%VahY[>jFm.?^ej8>fbqDS,+gNVhdIjR<hjV@>u\;4u44^VV]-ZQgX=M2e-5Cj>-n-Te?FRp#''\;:U_i)6U%>-\n]c]i7co51@9?
%O+n8'V;%`.k$QZMoW.XL*Mj2kO)*)H*aYhs<R],6jgruILp%\%.lk[\A>WZj*e$*XY6-=+T;g0s1U,:7/X--C4RSieI/P[I*VcYl
%S!j?[]'7u'7lBi-@3D=*KOq$\.BZ]\6qPq2As'Ua\CX/n0SrGZL0+Ze!126oO+p4n0!=3]?R&&.M*p!=o``Y3[4TW$Qi'LcTNZ,K
%hi;W53<,+#79DGYS$0;FSr(;ZltAY61tUVK4'\:5Am[a.FD'j-THtP^J]2['lH]%]\'t!TZW#9:NJ@m[h`pYBD<uFR@g&+7TGnV0
%#D.]fTLOoSjbJEYAkI&VT$>r8@M@VuFJ6=3:OQJNCaT%gT@-Br?d_<Q&+Z-_pGC#/`^[Gdf!EC]e*o/7h`B$6LMLgsCT#>\$P-;c
%7f%W%0$]c,NkE^.qL7h'knfXMXoE4OS=a#^A`KkpK0J(HRgSJ_J$"8*P##r/H/6\/5CM@6HMl^uYQ:3GP:t,(BCB0CL3@WbF(^!e
%jCRN,fn:l!:/q&Pn]J6V^YH6,gomBmiEZhMQKN2#FIonK?_+8mm&b^LPBu3N]Gfg%I.PhKhU7+\P'eVKQ>/b*im\QihgDueqXO".
%r8%rG0suFKB1GYQ#=d)2k^/o9hWeNmA$t"N/DRZ$Q[1%kZlAC^QfDKr<.TZlXdu`oO7`maP"4EKJ9uQ[IeVfVq2)dT1Qu^kqGGf+
%WpC,dO"])@11XRu&$&L9"nL4)(8;3f9)FW<K:-!*F522>jBhGolB<h?O4lb\pC2_RQM[4co<P0oLPt')4XsZ/+7a:=g)&`s?:ph#
%Nr/+]rQbR0N2*``s5EFM>2*s:/rA(aCrQ.X(6fQuc9`hA.`B%rhqc&'^[f@I?QS!+>W=kC*oACW$;U`PUUMU7(&@"7e%&P\Za-#1
%#;9=)i9\@Pk,T;6D\lXP\,6aoc1gWqq>T'eC:*PJj/D[I#D3][a*m=!r9i_eP7J`eIJ`0klcZeSj7oskrT=^1n6b"SR<K9@RBL]/
%n][!hLFQ[C9l:tn,Nt@.5krA\/cqqiaObq9Vk!k],%T].nQ-5C^MX#C?WbWeVk/=H.5'cNNW-b$2V48'I`UBi*65C(DNro]DSjW=
%=kj&:D=\"R[)]d+BADbBQ&&Q<bh':^Z$s"JmDs+f:;+1s*X($QXF##'qeYpqF8\i1K7%+5)_HN19k6:\`[Y+S)!X@KXh36?^5-Z#
%p#ru"j)DA@Z>n;/KY3h=UY%Kn[PlRZg6HIobQMap"+jjl^Y55^Ch4^KLQ=WHH#S5RCIA8VEE<3"Sm2$!99`n(*ndH(Xmt"IA$_@P
%IdC,sCYdiP4IgWC6m9COUS#65f#7Hb=c_!XSVc1JfC(uhM4<=!CW;4[G;C*nIlqrEne'ATT/lHdSU5XJHk^\;5$<.*^hsB,XJS/m
%PeDM2B/)LDmcWHVp61K,fu`uHiD;#=e\s1#&;PuUT-!r=T5a9bT=[Ug&TQu02e<La::3,Q03;gsfNTlj/\pAsZh<K?lgO"T].<3A
%q&\F"p_Fm!Bl1&_&0P9rm6*[LB!]`X$_+3QqZBl`Me;D4fb`mVhTSbB?G(-XYKVS?bH^ZfT,sC`*\5R*X03nb9^[<\[Un(J4i#nW
%<fcODR0fRVPm:d,I"&EsD/+9(n>l)ST*M[N4#^c$52PYU5@D7OR`3:ocFA/jG1=?=Rpi4shu5XE379>G&,^#t<gMclN(W2@dP&W&
%\d-Wk&C(2Eqe5Q^LY8Z%d[X[7H]EFtO64E^hLc3.iZjXk>8ofQ5Orfq'pTm0/^AS,IWN3Q2KR^6<Y<<G5PJb;?bYfGdm@JaNg=q$
%0sg]TP;#euH1U_*m*G8+EpI7bDs$l;m,[/s[XDuL0?q8!J,?`2)m.^Nq=NP+Vq1G$ld`Q<?$ps9pV5Rr+j)'V[5daLnOiW<oAZ`*
%OPNBd$b8F,;pT>?[p(r'^81ScdJ1?k8UD!5U!t(#B\T(!B^aFBrS)P1J]O`*2C:U/opb&([po=(mBsoO\*gE@$6O_'q"j#mP@;Z+
%-s\l>fU.">,+k9Nr\4/t>[P6mUQ8q,03@2:\=f._N>32Mrh#f9TTU\3(?_/o`-.YV7W`US27fAZ@7Hf+\_gXoDs$0ISML.-G9G)!
%M_9A[HD(dTlMfGpk^$gKM4_6Up@8.KoV3WN'?tY1UUrn5kfiGO4+0/VI^o49airr?hR1r"m(^837`I[a1],?K`'%8eKa_X-HdIgL
%&Km>BB?;aq+?l+a(mCi,nRD%fLXjl9ZO^Xuq!-)0(L+#DK6"?f`'`ZF,!u=kr_>&)<@%=Qmq)UD<bEL(INQ;frFg&7:V3`g#CC[;
%Q1)cBMp:\K9u^!7L^#,T"2W(qo+Ra#c^mj,W!sQX=rU[N0\[h1PKh]<rN<jR&Oiof@:p@FO65f"UTClYmbTrOMRok_"Zp't6a2T[
%Sh8hfTPK(AVFSs55:k)LVr)%F%lY8B4;]s8kJ"c*ALngcHl%6Z>Qj(6%n>uf".HFV?iBNHm%&\P4GS]k`KB87B"@g7`N@,1lLVF&
%4%H9kR<P3mfjsM\=u3"]No[Ctmc$N?1LIaOhj".(R@PB<^H_WPGj=]0K$9kKWJ0CqZea>RVB^/#(.M%W^-JQ_6$u*KUE@#Q_SK_(
%0)j)Kb$9=DH[Y)pk2+Q=37cEE^"o"c6J(KXQ6l3*:>r#X:rVfdnH8mi't;n49:qR=/:At#B_Kc(LJLte^Bb.ihPP_<UJBOiG4p2s
%r8m?g5eN0EBQ*FWrD>)r;0k_pNS,r1/>kPjk$*%iB:lmEf,DXY*lj1;UGlsQs#d-3Wr-OGHZA-";AnmZ8bU]t>POoH>h_6l<eiH=
%2g=BoDAGG<")@POdEd\5COO+H]M#-Vq:)I3X3J&Y2t;.sP9%,u&,&adO3J]d'YAPYqsuo2`E'gua_:mhk+?Rog`!oihU![nhSeQn
%7dnIO(!j#>IJ7<HrI+M(gqgn?J^1DH/[.ef^N_Ed]bf`1%#brUi466^_/+UbNI:<TVjQMf0.J8B@J]$ZhYY:(B1JN'oP@9-+`YR*
%f:@sBN"dI2`tu=.5CT]Z[[+C/S[P,MN%EsNF]hM3RbdZ</Z+6N]?</2Vk;snFbj>81<d7N(@L^p/Pt><o@8J3U,+_=9IQF'St/?o
%T9c>ZfYXg]ba-NHaVS;Cc5+0EN=S9g8Tcrk0dN]cc<R"O_"!;=444$Td1u+?>2+7^DV<KOV_a7g]&OJ&T@s*&\g':WnfXS&qJZlk
%8e21$-FnVnLlme-S*@V5^!aQ?2UO(A:/6q,+GS`nqu,m'rV&6Tc^oU]g$27\]if9BH3E,(;;9hq,"XsofZB,>GH^m)hCZ_DHLbV:
%gZb'0`S#U/p&5Uf97Clt`qp4GU9/(KFpn-(kgIo"@f>o8`d75^CF?a+2^$3l+m.lfV79N9\SYL-Fs-Y_8"&t\T;I)j2HOOP-D-p#
%p%kG?f)@Mfldk3GHb]5]DdkMp:)5ku+1IRQWfSPL=VKY!>D0.o2iFs2Ru!La;1^7F<^5a4hk*Rn[a(=(hL$V]aM"k0iaMGhB[l_P
%F8JnbA'Sm.(ii-"h:gQY<h0YnP0ja8lK2>pIh?ra$X8gsSNq;.#M*fR9KVm[Btj#;I(,/chVShaCS5t@hXnt-ka/h!nnrhOLNJA+
%dDhgQJ@%g2+$=CW]^NKK[X7XWl,1!*mhD-()dS!mC4fc%ECRnBf]"K0r9DC60o-m/^jbuuNcV3eWq!-P;c)#OIC$LB+Y<M&FRbA/
%&b#SHld=;4)r"6"#(?9ffXF)SS(&"-G?4:VJ\eCB6"u7$5OKN"[X2@&1=.j7nEhM$>_/jEqU4'ldF[NeO8"R$"HZN#Ddi8(k1AVS
%P@V@#7\<F-IN*\s3OkMmT_4#qJ1C"0kkk;'mc$C"Tbi-@Xp-kk9?l>>P6n%D]PN#Lqf&V)kdqT6P>BqOT@YLTF1,G4D>\eOhU7t6
%-O5po,TbIIgZ,E6%rZ%<Vn8k9(H+3A\!WKN/q30&#<2*\pV4P+S*l2sJ&u?$^5eaAfB;aDigF\@,<dj5DYBNi`Hl\g8i"hbR[s<G
%AhH;Q?8nu>4'uI8"kL8k'7MbM*NND]LjRUVjut;<@I`d6b#+_p1k+J&q:=8tHTQD!m)-kgiPsO*`9uSbqf]OAmT:h5">."Cbl$=W
%:\VX`%j,WeCdkhR%]T$*)tOT!\-rU$`>Np,Z%R)^*L$E9O8`!VXS#Y^[FbOZMeMCu(JWUN?$T5<)f2,\%Pac4&uj[hXfIK9LK,ek
%<OHY\Z4?U=pU_fNj.!`gWi!X7i%6&=2fLuQ=F<%bAD#f]k^cr1mbjZM9_0@B,qH'#dq^SRgX#GrJSTUAhIi8X]!Cjeru0kF%<K:h
%El]ObO&(ORR!uBsOsTGChrJKW6hF(oIoCL%_F2/tL,Ih;rViFV7.[@g;u?D-@\Yfc2Y0*,a+'*!s&sFBia8S_YNcGL"Qs]AS(kn%
%7c#,Z/]1V!a*0bkX8CkqZP`E<%c.h"g1%]G$bcOTXSN`Z?'!r/F#(";J!o(0f6m4oh3&Q:3Graf)e1c`\GFZ^d;a'E;qsH.W/R!!
%jG!+d.KG<F/!Bt]nM6<k"d4g7C#%@ZMm7XkaT-EIa0ltKP0<ulj18Kh!h8/+.mV8I1sM2<\:UuFa-40S2`'Bg9RtDJPPJbocXn#u
%'G?R9$\M5c`HZumMIIG__0oQuf&AS=RrBuO.aX!u>R-3t^!'A>Qmf,kN2(L-8FTVeU9lrC@Ut&oVc)1;*#I-3n_sU,bbI_KD(0Cf
%1.#O-n7=4&PW)6OK#napUj7th=Bt8u!685sbHB#X@V%l26R#m^F(#e$6iIXQ&c;to0o^QC`gpiG'+Do>,t@6GAE<Ki*;pLih&#91
%:Lp':bq>!X!`NETV9fA>S,jl`jYC<#\Yc#.2q/INEV6@TDbTj]j&b5N4=sHV/f'\iZ?p)lm"?q12GuVsS+=R>$mFiSM\t%)n[uf*
%O\%+&1ZLK5%i.tbK-h%;c+(S3%`0lf,3)[b*[m7_G_7ANbf3TW$!UTU56OlKj!MmX>HqR7L^7o7`Am9q-CtiXPk-Il-V:K5</ekC
%M,+pSfnlq!>i;?u37E"hpQ?qj05#N%W%p"=DMO/o`(cJI<^D!d@U`kn,tAYQc#>1T&q`X6%fu3hnYD9mn[OEAN-Pb@alb?%Arcc#
%"DVmsC<R8g>cen(4%Y:R[Z*\`_\NF<#gs<D-%^O$Laith%U9'm!RkMjLqomu&?K\C`W9YM721C@P74BF7)aH&?_LSIE)qlN;r'H@
%Dd!`%D&`rd;BXuaDpZ)tPD4HLZUC="A.k6++\5.?$$>5Sme\P,F@$"B8[K5Be4ta`<L1K<=H>.gM=>!uP9j(Y?m;`moH0nTCKZN+
%Z-kirPa!cg'SS:e6i\Ya'&;JU<6eU!9L@mZKl2bS,OaP+i\;C/\AGAHGZul$P"&d(9W@e=AWt58M==Xf,n6>oX7:'sWLQ=ZfSG+k
%'P5^EdNWhdZgpGG)uZqU]!>"`<"Xb:P%*4B'P4Ra2A0%%W=J`=!t^hj.(C\u?2pR:MG/j;MH%Ki^%+tXl(iE1:j.]d;AL5YNN;Eg
%EU.WRWm*e>Qsc/9+H06T0[(fK\?1pdNBq_J8P*G[<0Yc%,&)#F1/S#X)eZ!DCm(_@88t36'Dk41WG42N9tDLQ("!X-JYI$SfmN(I
%9]R3ZK$t?ROkK=I8O7`THfn>2K6#.X#W/qErE.-nHA;"!ZuJ\1'j:#S5\VYk(paeganp_uT4&o(T<e;'DTBr"RM)][Mp=&/aE;'#
%XHHI9.?lIl'g32k+M/=(29Q85BgFa](&ATq&gp":Z2kM]JdYeK.Wus,@WK&Qfa>'+`&P_1ms$_m:Wm+^m_VT,P>@>=.=t7#G+=*/
%/EB7!;?Ao*:h3_-jB-CSU-"6KTfeb$)H(BS=`Qj'#R0Z._=Ce:L+GXN<]<ke?q\X8JWfA#<%][-!(sdr%MB8*L(lWoHRpAYaOh\-
%XHsa#EF,`j;_jb1$W9;:7UC\Pn?G@q&aZk-\"$Vo$4Fj2N=8$LTk#@m70POOJ$JEn&/4k-`_@U)NP`h+-Wr]/>&&o<Z'!-"R$o%R
%):W+eW5TCCBb(n0-A"QBc7-]A&5!]eJbu)p\pUDt-ksBnI4WO0il%NE26,@C?Ic/Mbi07>5_[Bk>]q0HKSr6C!edUE`HXrugoMA@
%.S_Eu\G*WP10&Hs)RUYTR0ejm/X`gM(aLiQDjEd8`%0D8-@-,C&Jn'YM9R#gatDlb_$?^`324X09IRG_A["g!hNYkY8n<t!oJ2k_
%ND,ENGq.5S@8Al-"<Q#P@YmNg-iaB#=G)555<5Zr-3;1Z4Nq'Sdfso"JI?bR#`V7NDE;Z2;LSit2I;)75a<L)-Dci,?r0u/a[0KM
%XCbRb>'-"tg_N2:jTOZubZ"dsqC_oL+,bLp<"I')$gD^l!TNNn"bN`/hFDj[4"4IX4G<cHi?WhSO@]SA@Y0JWaf.PKbG-%RTFk-=
%U%535jt^t?"M-Ao[LLIWN2iO1Y??`JZcHrn1*P/'g+:^O<6J,C0oZf)SUtc6jU<V=-3L"o=)B1'&\FAfZ2BVt^LbMVXYV[uU9&IK
%Q=[;dTr.%-`7Qo/C`j34C^hrtbLD?0V5ca5':^ZGjraWr7a7@q>Op=aaSj-UGKso;H0=[`YGrY%E>^9C`j>`"Ae[PJ0sWdD=[\k?
%P4LEUjA?7T#+ibO(,s?fhUB!a*>7/i[)liM,(2kcA`-kaef`0L$]DH%;dAW?mmE6,AncN"^^.(NJ99C28XD9$#na3C&2CjSKk.]j
%*nCs$*FnjYjI:3\A;\7CfFj9U=f<3$#)--uOSAh)679W]s%:Kq/lJTV8sk$'57+]-Np.L&>]LYf@u3=fc,B>c1_h<c,(u?C&nHq-
%)(U;CjtDm&&:q)[6B;9e'Cd6E9`PjlL;,Gi"=]!?a#Y]cFPFb&'%,iR)M1V<gM@EPU/e:W;?msR)&!Q*:Qir<@f2UZVKS"//U+.G
%9Vs:uQ0OPW.g6Sqhi"35:(3[iOe#u"XElS*:0#*b(P").>7i!ZQ,7PWMArIl1^7tk>t"i6LZX9i7:4G/)-a,G0k'\Wi^qc2E_>#$
%%-D\);4<.2^`kdl,,J!D>D5!.:`jYdZZscl*-=@,05sgE]!DGpE#5XX;hPXi9W5k^m?*3A6#ZoaK;FYGdm]L*hLIm&@4)WE'd'9Q
%0!iep):POa*.rZL+FM,>63K]e1+Pe2N+ElK3[C88DAiThR@$uCXDA1i[ugjD^iIG(@pV'QG9_o^3"c9*jUD9F`Wo;LGE'ir+Co;)
%!(7$:3Ye*EB`aih,4h-\@-7\8A<(J<Sf!a8A`?6%[_FDApqh[%Q,j\0aUD"61OpXAKJp>R:8,L%5mDErk=Wt^1j(EPSnc1E1X8T?
%r%5l.paD#?-*42`3+22GM:+_g/,ousdgN"@&0o"G.^5EE6hI,d9C@Gs#1k_B4<Z"H_+[<`60tY6VZ_t"'R?\m#>I^RB>adDPq/g@
%#to>u"n&2h6s(EFb3'Z7m\Y>89_2L8Js%cpJ`Hga"<]@-k2"c([65duFb[>V%<O&[(ZT'WD?7"nJ4nk2j<RE]#V"b#+qik'^fW>\
%9G)4Wl00TkKkd;i)$,Y7FtsdQhc4aEJ]?mk";\FEkZer.`bLJ-!&u"e*@"Jg57'@Yd(C30<;eQnFsorq<<d0?OTZ9kj/P*N\e%M7
%UL'[@(k,*hgG$e(e43Qi;'\dYbW67G*gI9660uXrOV<f^N%'ki(-EdE;VWC7nhFtn,9Z))6(B5nFjD8@54OM`c9U?M-unBk1OT>'
%AdAdl8YUtR-e/B&!a/pYKXsiB#.+gtc;FlZISZ6d]m0`o8cq*f#piebp`P'`pu&_;O45LOc7g%!-7hn3.+C`pA7_b.AHqZ3e%p:0
%/1[8`_%sj;LN7phb9Bs>po^<:LgXCtGls9C)^dgB7!ce5N%DA/"QjkkLs\1<K,`h8WbX<4hPtrXEAka:[EA&>56i!Z=Q4o:WQ[BI
%eRB;pQcMVJ`?:Nod[K`5AmdLSPsXCsPk.H]T@I$NK`_1^`6/Z7$QqWcYS0r'`AIgY83C<q"IoVbE0t/@1(E/<=p&>DI\B]Fe1cLl
%)[^!S8Io/HOF#rDD"jsV[M/9>r(_cW8IrZcU_`TYNQpdi;,6ZsW7X)@$rDZg.*b*%aJ,W2dSQ>Sd"9Mm<IebmfTEsPi?Wrb/-OCh
%>Z!+++h#=)QTm9ZImc=!"^nGH\iYU.`f;A'(fBd;,mp.#^kR4cG!bK!CgnU0!i9&&k$Wq2$]n=kLM.:j$t4s6aPl\TEX>#KqUJ/'
%PLW6B`6oK08W#QD/mlc[P_/]TpujE$9jB`LUac#'1/^Y",'uVGk./qF[7"V3X)KifS=go'6_mXN^tbr,_(mnU'3d.h-'=*ik_qfp
%-V>m5ek4Y5!YZ"VX4e.A51[g`>D$2p0Nd>C/Tr;&N.FCWD*a;q-$d,D>r^NQ/EZ]GIY76P!/XAc@`_eX8T(JMfa(c0_P"oJ6Fse*
%ZOjHrE?/.jL""Aj.d'r\rmtC(!td#K9dY\V+6"./C^]ZI#)F,A(60.S&Z'X4%9>eE(o)4o-:ZsFL'"*n:g(V)`mIBCJe1acV3oGc
%,]itT(h.td;,DH](9U.t4G#?ZAVSTL9]F<E(_.-`V.Y0*.Q!.q,ga+ii3Ot?9EQFM6RY:EKa+n$Tu?A,L:L+p#Zo6"OChp70MrS#
%Y)h%&<=FO>Zu;Bp"WM7,)(/E`BlPVgW6":ZpiID^a"^X@`iS)M9mE['/IZ>OJ"c`teC?YL'e41LGs(P'%eW21NLPn.]sJ)e6mC(7
%X*udG&UI1q'c>t)1_p6)6qi7H,"ko7)7k*tV\@]p#2re)k:N4&7/gZ.&lBNd"7R!+br0Y%>N6^E,U58;fM]FV8?"G,o,_E"YU((I
%>=N*e#*Zl&&@7S[4r,ZD0X-$>#S7i+#uqNWFi7I&=Qtj"`$L7'eEWGe,W8X'gCR1B?3",#G(=*290Ht2@]Q.]<_jLiC(YJ/EL;_g
%X;2Bc,d%t005>/BgK\oZUM![8k>39RaiK0`9Z/kkO*IR"-'&'q/*&b%&cll0qdO.<m>r=)iXMCmQR0*__.6KUSNm`E;4oVRL?aG+
%+I%D#foD</BOf$_CnrNdN%%dK[8);?:]4G!kWVZDd;Y%\7%G&Lj`'"@)]YVWKQ'6`"';`K_$/...Se$M&^=S-JJ0LSaF[kiT$iON
%2l%?C7Dr4/ml@JQ`%"+h327%9aY5CONe,^`K9lKC%9f5t-Hj!M3hVKb9@&@tEXOSILJI:JW83-`0s,HjenRF/n[+ir8g\$f"#7.q
%X&rd9(=E+@;rM6FbS5l:+m'f_d>6>tK.TY:+/*@VEdg=J5\V0mYn?n9K2AhLdo/SE#R(7t0g]A-#^ZcNMOn_iNG0&VCL[s=QiR9(
%:8D@2+]9b<72BGk-\Q8FK\tu+^ojCa^^!SVYYoL]<nIgN*eI"lW^'0=ck<BL*f"1"_-E`j*p4l49ba%*cS6P_"Umd=_T2rTHNJ&A
%1LSTi)<+7DD)bjZ_3.A03c2B_1iGc$agBRgKf:>R+uV98@%lk0Ehklq$:XGc>VmDTSAtJ+JgcV!IKZPPFot-p'fo:2>i()BiRh'L
%^**n+f]tDM(rm"@f+EbQ7TE:378?c)_(M%nKuOum#$o6)F3Q42M[Pq'<3-p:M)^5HlI*LL#HK)*OOKoH@!Kj!@>SG@45"FB2*1ih
%K,-^l<_U.k'bll[7NH3q",t`g_'6\bM_#h;G:.JF2$A2f85B^'8B"*J>u'0X(Z`;lN:'8lTNeENbm77DE_3d9Z84='EPNqXJ\`Ha
%:'>fan6T#=!%L+u%KckF&KLk$PRGYYc.0*2f`P_jp/$.-P2lq;(@+6qcIC@eKa<[g;T5nu2aM7sJj:lb<"1QnY\h;aT$tj&=hk$,
%<ZoIR'0/.fJdRAkSFm5UQA@1.E$1ngBa(_5BYpdbYXoEg_ZXj*U^sdqBYP8H#K(duSl!X`?j!#ReMAsXB0r>M5n,"HKFhT=.CCBE
%F_E<M#?e(("PcM*"1Elo_<P/XO*`BoOm6@:_k&\WE;B^XL=:kS!Qc1W5T'`[]1A2Hi.gi.o4o,H9d)i;!,%r/22)G5Wj5Z`@g1N%
%C(s$.k=@C"H1Z`q@2opdT3;RBT"RY)iYH1m)7(It-X^,7KrmqOO9l(.QOG1P.'&+(QH:%Cj@Wrj'#WXlE*%T80#Z3U>nu6qeHf35
%E*C2D^_DT\'Q`c.l$ADeM:IgV["S;[[SIJ\6-^##?:bRJ_:]#&6Y%r3%`o7u:m43Edn&NC75D+I2T9[0YVWUOE&bsI#Xp:hNili%
%R.<NLS'a]K&f._og+eEhM)ABJ7#-hr-rRAhk7Rqs_I*M'nZ$=-W(rcR,\E^r$=66.!Sn&bV?d1,bTX*6#-YI:kscY)Vd3]ZS[\V=
%FGQW8cC@"0G?3:.T8i-CJgQRU=2]sm3[A\blfj?V?,7I(me!Z4kr_H'&bJah/jp``#a!)G<Wi*Kf,/<pknH4ET>FEcWShh'P=1$9
%iX<iG/`KIn8Q$Q.QHK6eEXFtG"Xb%rUOX$_#d"`%n=k'TIt<fdG!:_L:iY9\CG*+/h()NkGdFUu&3DX-Eu)RtGeqg^L2;X#MT?E?
%hXVl>;NQa0@QRBDXD6;hcA7n$f9]\FG)N(E[E@0Y&11?qRTegGbWaMYC`&Qa7D\1"cQXo;;)F$3ragid3%LhBLU21OW^0HhXFs^Y
%Ya^X7(#bg=#Hb:.QncHe+rk-b4GD%!4s7:3L:'m8>/Z8&:(;fDQ3RLpM6nAX1;p94;*`b8&VEb*5aIIp'a3-%)f'nQf\T@*B1RG<
%Jt1;tR^8EZ=V\&oSBpese5BtY6fZ`[?bp.pBF\KRNF@Kl?04n=Z`H8j(FDd3'b)/(quOgU:$($;6RT)fm?EkD%>=l<JnR\[MU9LN
%+FoWBcdM`tW>@ogj:$VdN;LF6eDi;$KZn:c<L1X]'-f1qk;C)SckjMM:=Y\QpZVs]C)2?lj2+5F@3@6F$a`D1SSNo>+Mt?CR]MqH
%1df`6&F4M*.+CPc<_jJSprID#r+qn(Aj#lu]M^`#5Ya\$cj:0s`k\N^QtE?:A6H.D"=d;$M2>RNKG_'cUM9AmE#k66-buZl.dON&
%/nZ(rQFN/_";<O4@`XXl""(ie<65hRKWbt8aUsEl_4B\]Ns<M<FZ`=J"HgPJSek<p&J_;UZJa7V#RMX_ff?"&]5-PbYQ7!ucDEe?
%,Y)qY3FkgY?m84]0RuTDOQ1U+juErJLgLgIEs2MJh"s4c"u\O(D9TctA2UZB&.!nZd/su6*keGd3AMi84>DU+6qc#RCEc4,X[iF(
%\30U]oF*m'aeqttH<c3gM`[\.eVaL8_?DWn]Qj.H+\G96\5Jab=hP[c%$=GW-(1V2MnDL>8H!H4>YR0ZVK61P#0nOS'Fkl'%N0CW
%Wa:87oN:Nl2,GdF8-lQE].7tjEAS4_SJmN'X;P4JBelk^M'QN6.WLS;(e5"j>>dGus"H5?XM>O<+Dfk*%4RY0A=daD,1S-')aomE
%ou5l$]Q2a_,Q^5'$5>h#8C][l>bV]^?:7-+3&F0H"L1kbFsrVi\^3q4noh8k3:S`G]1$<(VBEsEg7Ig=d6lPnq'b9EWQ8O'L*0#D
%Nsf[D49M#'r83/T(UO:'&j(c=3&<Cf6oKpDdstAs"qnf363RdG;<L6ZdYsguQb:hDnl#&dg/$bDPck`hbf9he7o0?8<12"\ZnB$\
%S\^tRNGWFZg-e257Kptg"_FkM3il^U1,B\dE^Q8d@)D]'"[/;*Obfl+[`m9'+IoJVN>m"4IgOQMF*QjG$eLV&+"1BO/Isn("WTgF
%1,6XI'$,S,14OPe;cOeO39;uRC".83GmR,1ceRj_KcIpV)B(/J^iSL-V7nQ*6Vo&K!A9(J=>YTIdl>n]3&$&J#EmI*/9T(J"Jf@u
%qFV3EP@l,1$*-*$/P+XAXf\Tf6md^eWMaC37RYJ1+\'eTH9m2'd<Q,b]W!c<JQ6lE!LNU9MC-d;JJR=T0h(FBmR:D)U0Qu)/h8$"
%@lCqlhcDB[o]YkTX&OSkVc89PXsQDE&@*b73mc"MTfHYeANXd>M1O'aP/W8rcGXs7N^./e?#GqY/^Wr<e/G<e)j'r"PXQLT6-pF.
%2!WIi16ILaVq"h7<r`SoMb)GTN4`$O)5*tp2[VjW+>U'W2e;rG4O^t*$7NhCSl=m;@?F\D#.ggL=%/;"$7O*G(PAC5">Kli+m0Od
%.Slda+=>;`6q=[s(.t!YL^@\Q*EX]+q#f<a;!SoUM+G.r0MueWX^*U.k:%J]"+k_/;b;nSc<j$^Z%e5qm9,O04eOZ;Vak60Y[:Ec
%R4+tB%l.[_kAcT,%B,A#!?0AXCh,\dII*a6PIQ0Z\2BB]"ha5#bH5S`m@grQ9S#g:>TQT_(X,0u7%+u%<YD8r`[8T_RZQs#b2GWs
%4A(88nWngh\NBDV_:`4C0V!k:2&AGCH6^9,RR6@?0cdD*-W7KNYh'HN"\+'aMG/pER(0?N9TFpYP.SAV?fD.X;+k8s!@!e#OU?#k
%%.N/5#&.X7Y+[W%TVtCn#m+qZ`/!ra63SVnQ^Xu[@;9p>3J0&kYC9$t";1VcGYlTAR/E5I\P&Hi.?*IpStUUgF;bj!jH)0`64VC:
%*:i3:iS5e4iNQ,i-qQ-G-.gap'N+9,r2M0@5k]sf@>tS,gSJB_2'rKaF)4rf;D=01FST/MF-_W_'nr\.+Tjf#Vu+\ckYq^gM0sP2
%eOKNGe5_?55fO-nUk5:@TgZSfM1+WJ46\A[`23jqXO=B/i=\/MbXjYanTP;9W+=)a'MZS&&IsT(Y(TeAC7l,CjMkb-]2XYYb<n%O
%$&?:r_)NKFC)ABF&So`]M!Sdj%.PVgQ!*47,:aET71aTrfmn'=*!O/M]i`C@o293"!n$&A#fuRAb=br5@%!FHK2O6n6sSsW"[!..
%k`2l8Ti;>jZ7OGU2M;]la:(0B_Cn[e\Y`gXal'6m@l]6></Hj'6;(-[dK=YK/R4=5(22oG64$M#Z1BO-5SC>(qRN1,CUjZoRg;]F
%)+aeF-\5c$V!;/6:F7d7NYoPIF?t:l3M8oQ8[YGGWjc=Z&M6kDc)>;*&Uh'_@[r97_%"jG9<B_E@[n4TTRiWC**VLGMf]bQmE;:9
%(bJ:h#=iOs6iEYh\I@_$0k''Lc^]^N;uM!K*pJef>o%s]cCoqa=7'b$0P!)eIU\RnP<^s4lZ*,eLf-@C1k"J;'4?N+*OEUK`#aVT
%aq7b\JUE!d'-lfh`,"IjEM5:@<`V28!M['EalgA@K>KdL%-''8d89S.3Grrr$^HNiht-I-HhOYTn#8rJXm/gj[8'\9+cC.FQE&q2
%b?_%n':1sPN+@79"2X?j*S<0%asP:m*_ik.(c7NjMqgaKX-+IBm<E6ag7>$]etLX$'<UjT[J1OGcUkTL&1#7$50.e,=#M=fTH2*9
%_lCFaI]2W.7INq2#:_(=?]E#L1&Z!X)!;Hr4roGcR98BVpHo$uRXM0sV*)ER?>2a?li^`J7rjI`6;/ORaM7*EkGg[G4IAWo>!J[8
%9nl5I9Jb'o".=dX19(hP!6UH-P_.r6XJB4$eI0N>"D<"E1jlEXl3=IFKpSitLgeDk4;/*[-VBsZUd:+H6qZ\nRefp.9S@dS/[Pe(
%H:jh[MbS\!&"lAZ;g=C)",L-:"<jn/+N%_.V"HuT5V_eZOc`,CU51Cd89*.@!@q._R,o_CjnYL6ZremrM@b8.)4=t(Mh-C:<ZNPh
%,(h(#^pGL`F5S:GS7%<p0j>\hd0e'BDSVcg*,.khG9o.@^5iZrnQ\FH/kmG.H@R^aY1``8_GK"'KKMdGR*thWXQHB\#QQYcVO!g[
%O8u.P=X#/Do`;-R:dItpY,kAK'8jY0,U.LIShdO%5pfdPerCq]joDb4hEY#5/r,h/3!qAk@PQ*)n_j$,cO_bo!e1PEjdG66&klN.
%jI%eS9601F+D$/)aHrQ=04>ofMu`^#'s_%sr4ItH[QIB"79SmhG$+fDP2C[3VUin'eeQ#cZZTj(MA%7MCM4:i18b/2GqQ)83[S\P
%'0)JJpjPT3#Y'gOq7^H7RmM<G;qk?:X#!`oL`3*i'Ur+1,nO!g_R7eT5`(],_RM'2?SDZKTi07un(?#e=ZUi28`D/]'+\k@UFjMk
%E^XZaMJi72/TsEU8*)9-5^kcfNA/BaQm=dh_BMD_$9e(#6D6M`ctmB69cI2&VW(JIq3!TXbc3VEb,40E,juL;,rAjR0D"h(p)Ys'
%b\-O*oI(;&"U/\q5GB-eMBhJfWt,b)fI0U-W9K2\$PdAU`hh!]A?CF&E%*hnDubI3!PLa0J1N6Z&Et.ud<8lo!b=U=b^M.&L`I3+
%60g#c)@?[-,+]kOC'tM&ZA&a0AJnlG*7GTaNV1g@#$!E&O`EV5b0nA1\uMceLJq@@FBY3Gga0'E;$C-gc`tcK+<:F#M6BIl9#kH;
%E;c18C>/bC'Jk,Y_UMV@!bWi,:>rS@_Nihc\`TS20\':@`M/m@4\@H-`B0K.ZZSk#XRjQ89;VmFOE47?;rhi!8/PFfB?1C]<`$<+
%DMo8KQ&tH21I^Y7_rT*pLlf8<9k)XPLn-Lo@6@7p#\Ve^!qQ^[OI_?/W5Am";=4$#G7kM%XOcp9cDi95"lr\5!AV'Rg`nMr5U6`H
%&F:`;oM4i7^m^?O.BQb/=q%9_i,J_:]8?$A1DSTW0&tk&=#kKX-CPjU=Tn">-Q5"L>&Y^-@FV5le@F_3[aCI0UerJ0[HL@dAm:e$
%3)A9seQS@):.;s7,Ua)GLo2g?>>=),jEXg(TO8LoaL!nkrYTbIiR*K/jl[nefH9TsnpY9fV?J<jo1+NJ.5V5`B9&?>.Ub3^-^c];
%YWchZ!+YrZZY6M=T2mV@%KWib<#\p&_"FVn[%?q%aJptn#[e;L/Y.^!ZUH)eB-%MEP'jPKNlJ>nXsO7?JjNeEq866k:oHdhn3UnQ
%gn7N5Blp"$1DN*#_Us9:4Q:H*_ca.`KI1U!P16iO7>6*IHsnU08K?>NKr`)<nePjm^g,@+<3:d=@;(<F"][N5QXNi1`sFm$f>8HX
%9o7f^e>s:u9OMQQ*%WRu^+P=i`..t!$86T101#Su%LPPs>-N)a3h=ALou0;*[UOF^PL3XAmPBSF"XliLVio2KAMK0F/]EPjMO&oG
%DA#5gI_=#eM\o:p'ru."&adgV?SIa\r"t1#HKhN3&pAnq)JO^3B5nIo6Y+"djgdgSqKNc'/h.27SD+9]%lF_kabF[T%[aYaIY`c#
%TMTfuW9P=&FC@V42&*2'U?'F;OgnkWN,(\iC?2E2@m.&lTuF_K<W*('<N(m8<LF%h\HUr<!of(t`9GQfLZYW#@pVM&bYdp7,0#BG
%R$,`uP-h;Wi$M/S?Z[J+MD.M[UbZ#?+sJ+A@EaUO2(Y'eW'qjeK9OATj^B!HRFGe<:'pM/i@M32Le0:_\kn]h'!0gmH!#9XUHN'Y
%Qel!4.3/qdZlgVb6Nbg`YtHcGdDl<>2%!hf6UNLFJ6^>f62o;"0NbMMjpm$O"N2G6i0tYKWMHbMjh>CW7T,fSnT<(,C`osA.Qb(7
%nqA*?[/-e"'S*+sJ>f?g>NYKF6]%`-4>0c3Ou>qm&g$>T'+d_T\V>9-N=*a%%&bqd4pP(7+\$#$K%!om,*TOPK-'GqTD-A2r:]rE
%Sc#/nJW$kPO@$lhD^Ip3F;X7N_F[qucho0VBG^BRMJ!ptk=WBI:0UglL/<TK[#tM86aMl:6HJ0jT$.HRVKqT..=LeL1nPrK1>s[)
%,GZq("*mn.M[7+4<u`J#Y]1:OFQkf!L;$^/!,>Yt#r6P?dl;*9+f&9@6FM3cU_W`"C13@PBGVGd+K0NFn[pFF(@nckHXE1+Hk[JN
%Xst:Zgh<Os06:e@M03]kLEMtBE$!Q*#F8&f6%I;3<i#Be1l72L(n%8"Q:9cU(LXGY'FI7I93:S9dmg$$BNR<h>5Ee$1\_jsO&cu>
%Wa@!;j;1j\>bp:Th5I_D4RQ:>.hU%c8MrZ1>]W/&fNlQkcsi@ZPG6ni-7G61&Z<m\4q+tSDOJM2-aErsonb+ij+8h)XU`P+aFCpu
%#:S3d(1HG<Nh&%7U4Vr<4elh%+d"/`*9!/;*@b)0\T_Pj>YBHYP,s7jK'Gr^cONDXZ4@<706"m+.f>ZtTHY!$VNGkm(MEVmQ:2Im
%brO4;l%m-AA(LGeQCSO]F^h`^RA6.-*9EkhA@s=tm$h)O1atS98,=#R6V:bO<M\Og#Z9a6oS&L:M=tT?9Ke?n+;[k7o#qhf0GP%K
%\n&1&AKIcR!04E`TrSDI2:@O2CSikmG!q$%_UYfjcPN#1Lh3n<]LoRB[arr4/,G2u'Kem,Le.9>r2"C=^,4q9;EMOMSTn!E0[AF.
%rQ/q[>")7S<l;[*S3imBL=79)R8an-o9[AuS<$P!3B0rrLCRJu&SDCG^uqS\a8(I+5:(kmV9mpnabLE?")V4r@8[p$7@(Kdb;D]N
%_5iO%?ces7nds/-%`-YjE^7I:qK9N6`%]<PgHRTXRAf1YeVI8(W5pNS#@&EFAGp3K4ZO:j^o8%]PZK9EE*eKf)][o%#oMu@@P&,p
%Peen&[8C-D.A(q9JrXu"0I#9;6+Nj?$eQCZ3'PQF4)u8#T3k;S6PV0Ck(J(hbK<oFOjVNE5mJ>uZ)S[IGS:2>Q(%K\2$Qd6.'EtT
%?]s>(VN[B<f0b03*,[.*;Pk%Y2E*O7FW:Gq]GaZR49=T2.9g1:UsZ'@f1VK8Q(uPJF1+:9"qTlQj.]RXVidt!Mpu.j-l-nif>=:7
%,Ag>1i42BL,R!:HUSd]-<jTL`,cl!^,cS@o3$OGMIEdT\,9oXMOWc`e9L6WRb]V*,!+nr=4!L%^>$%E*/ngG['&R5_'f#NGY/Kqc
%kA?l9nW<aikIRA4?dq+/JhF+FlXFaq0,ag%krS0aUt#VmKo(F-FU9*O+@&8m(1_3WK$(T&oKJgI=430RlS`a+YSKD:%8G;_C9B4O
%?rebGIN$f^LFFD-*+'"U'jf7/EkW]FD67/>IK$Z0.Ns&FbViR*&Q;B>T7meo--VD$-4>brQ%ar<EX3)3emL+&Jc89=)!3`lh\kQ`
%%.Q[0\L[7f\i)q3TSr-2C&!pt:X.HK\)\Okd)DhNhH#)(Qbq8I_s62d$KnfmDk`XJ6!?@DRJ"?X!2c0:\j!WcF]klh9VqIT_=U02
%'ZR]tW>Gr5$!h/q4NtLZi<*h%h0B'coJ7NoV)YW6)2Vi]^HbZ3V0Re6#E']@@Qi;iiW*$tT$eY)Hl[c-@2O-aq9FQoZrTXN)%R*G
%KJ_%p:6@@"T/lCt*_#QXO0-3"lejS'TqAa_JRp&0@25#mX'`uATZeKh$//Pbk[8q3;RA\PS5K$88>93%3]6QNU0,$ud,Rt,b462J
%8Y*J'0uhZdNH.@]CM^b--MGRcb/fl$hi)Q&-5!DZ,H$AgYR9V`Hag\qY1?Yn%l9qT1SuuI)7@QTA9X!.6rZK_qd<^3Y(NY?g41A$
%9A2f\#Yf-YUd'`V`(A>tOXY<E`6udKNBT`+Lkn^3p4qJB<YVQ>S$aG2o+ho=UVih&6RYeC@AHM!$]I[iM7t>Hl]A2O/1F?]$>mGD
%lXhJ31XhPM*eC7N+p&'T2coZJo0ZYB#_W`QnI*?,Sd!#L/5&frT"0A#M\g@/&(Js@F!V;F>,*%/2?ZelLFe\Rmc9Et'20aqONb^R
%gSu(uFVJ#W$fQ!*FplH[CW-c^3%2mXf0R23"D__,7ZS-g;K>'_!7)%8N=o/[1PI5I@OD5dR1nFkU>\9AHE2K*,#4PKH(cZK%5_=d
%+H#5^Q'8huINCXT[V0)h-5$n`QPb0;#f-`G:u*BPa]6gc^.'M=V""lEYma8J:'hP'CmugB0QL9"5n8f'2o-L@JC8J.WEC<JJIp$:
%HQtK1/upac'Aq=CH-4.+:`MH/"KQ(MUK5(f>_7qZ:rQ:6kjnl+`n#:2A>Xas`,M;eYp`#RTG65s`@D<eN+Ut0Uto`eUs^.>IBC_%
%3Jrn?Yca8!49L@a%#]pu6,(!#LeYU_c,*]tN1^X='uTIPXHlG*Vh/=tXY2Vdcb.PNWRlKip,1,4d>`i&;T*eh>,B5IH#o^H:8i('
%.97R;(bZ+;0MPJ/Y[6RL+tj_..*)iCUSOiI02Und.O-jfEY)tYjNgX`3T,c5J/X%45h>^A.`C*I6BI\Y]IH^2qFRm_!F_&jc.*UQ
%gj#Dic_LWeCJ+YuF9Qe&V3:s%)IUa:j#m;t1,/X_P`[\6Jk.jS\;"U5Y.;)gG4<(eg;_$_2lF%ZkEkIRaFUc?cq<I.]$^gP%u])J
%3qku!!ap`$!!j$p*)KTBCT;%?SKS[C]urkmFZQ$TXeW>_MO@.A#1/W!BMhf1VSNPUTtq#LFlMERU1h1<m"+"`TlR\^1,Umn:-HI5
%BJ@:F_mmfEe[77KLE`.u?DGO8E2Xl;*6(/6cX8l*GTUh(aje[Viq3SpTmpb8_.:pD.Ot`NNZ<3)0a3aY%eV'J$m#*::L#H]XFK5O
%jjJD3ZN2nQGWio_kb"KWgZX8RBX#n#`.p]I;E6u0n!uGaDWoZ+1`k,2VsP*lZ%`IH#t>aArA-:errFdn")&h$Jr("n#3'UC\A*OQ
%p%DGoW/jn-fj$n^M:Ws\L]/G#e2J9+QM&QCh_-hE'$OoHe.$A7M%9;nA771X5+UkL;?MPC#O`1Yrg?p`fbf1hIHH?XFU\cB=2-s>
%qIaDG=bu%</%[I)FU\cB=2-s>qJVaDAQ[L0O<Nq8%u5m/f_KOefYg/SUkXV]Un6RbBP>SZ+8:gj4L@n!BW/N..1V,fp<!,MJ+pls
%o/)hZ@*/\;WM/:hlOek=s3S^]-GrAYs25S;;q=1$iD;bU\OCi.T<Z5MM>*FDeRWE.3:V<JiQseGnNK=i:V>Ruoq)\di=tSiL-u!b
%_ug)iS9Sm%KbLY`_%_M6L-tt]'.7Sg>D/^A&=BajT`K3E)>?'c*4bVkDs[(Acn7dLqh.nLU#?^O&V`[QN)U*J:jY>+1isf(M%>Ar
%cGTHts4G7WkFmWbG',seiR#qs3'ZgQRs8dY"i/L=Y%K^6=rUE'8,`CmY5L"<lTSCpc_Lc"PHNdb%fJ2iY3+_2RshUQ6_j<R/qDNX
%dIX.4.JGTbFfdL;-uBD%-XFJO*;W0;?*!C4es27*B3bVWfQ@)kE9Np^F_1N)Z`X_5E7Qm#S6u6oE9Np^F_s5;PE1/O/MsI'D"8ar
%cnYn;BL8YYnQ4(V!jO*>%[kf7%Jtnc7;a%BOu'IEqQssJlh"oJ+jf.4.tkJK`[iMoiMVFSl$"f7:EqiN$\>]bWg5ae(lEq'TIY]l
%j]0[c6iOmar.KOfJoRCX]>cUcjq4m!o;IW.PfK@!)@O1S,5%TbBQ$^Lq1!__M2lj^Y7Y8K2k);%<DXNHWDCaCRbp:Kkhf_b3pQ/K
%%."DJr$YjG>>aJ4KG90XS[Ke8l./g"@B&@F3t'5[cH't'+(8aE\A*Aj;,J7'=6F7;;_WJQ6.uNi=5^O+HEH4acg*DG78aHD?KUZB
%6o>!<(Mg1HW;FcoaW!!51OB_\^V;OGeDIt1`:+6sZp^_*dMf5MacVAo0rp.tSt^0_cJ4[.XuWUrK;PXg4>:>XRCi%nQ&8R$niX8t
%?tIuh^NZZopSCYld'Nts]G^8bQjI;]7'Cf'![7"V6M28s&*lt0ci8R_#oiJB.&Huj6PTbs5**#1/^J"02)>@MaMEefKSYuIHdJX5
%,`[u+&j?S"J7YQkU:57hGDt-j'?#VcRn=dV],I[q7[c>&<\M'PI0XMd64eK$a8T?TAO0;<#PC\%PZ+m&/&%JhKiJ[GkjVm5-EM?V
%V%tVTp.ThKV(As0p%ejDA_)M/Y4$_opRik*@(<KV^'"3gj,P73K1HHr>_4oFUtV$k:qorb3kHm^^X*t1".`YlGImp6=pn),mnc@P
%$ej6P?$Z[L#B=X\]4F0N&3Z&s>Z&_hYRom`Bm)>kTp[e@`,OF#M,j_aK^`9\\?Z2/j0O1G8PZ?f"XriW-IQb=YNuf?FK:q(#<pU"
%@5IPmd:]GfN$_Cr!")uq"/;lsN'1D2D*&O6lQ$AI1`YdEeNZW9GHjL;57ldoSHFScM8g`lYtX.,HhsGd#f0tH.cQV@C*6Ei,!5RK
%*2.a4*ZW^S8Zh-_13Br*<T9Q+M&k-)q;B[-&=T<5b?e"_+P6bL/fgeU3Vr<A-B9uClF,(9\[psdKHTX)/2=NI@_l^]FT^pJ_"HHm
%]Df'u)Z[E&UmoN(dp9V+Wg`V'd'X:W0%@5iEOb0:IF&Q$b^CJ`-Do?u-eimR3haV5/<YOE!@l_l"k-%!;+8!b5VE_&,[s:QWr\I<
%_\I8^TmGT)=+`D2!1@*F1"V.a+inE5<&^P,"qsdp.3Dn"$n80IH6:\2*nekq1>"n3QRHt;.?k,-Q=V=;ek(d=!D#;oA$:0Wi2.\8
%=7[l*FTE!>Pb*8npPAo]9]jLcH*'pD@eF(Dq[ktJSGB]YY:1\qdk8HJSU'jNA2FlbRG<AMiftD41$3-m=Lq-oJJ=l'C1s#`N/D(N
%kJ:\TZ"crPhRl,cRlOU&$DDn[9kftXcWfGfkMTsp`.9+TB3:j7BHL5+6+,G9@bfeN`@UVj%t`O9ghf,1P`9tAihLV?-=S6)UFLmP
%@?E!b_IP.lg&?QI4]+2Y"pDI,2qLOS.C+HNW%.MS-n>kc'spf<"qS![)3L8sIP`D!6plERpVC_3G-G^ST]enE7O]:_-(1fN_j.rd
%=Pi9`UC&&j(pIXhmLZ,tgZH&]O%n@8".Ep]6[c6%!)QlVnU9:l%HX%TIQ>jiI=h)d"o0ur]E'Ka4TJ;hXgV7Q],6<*oN_Q.MNjC1
%)2u-P7%f2%7<G+F*VdYt5@ZWM@b@:TXZ2,5jI\g*\m<e)Zn^k(O9'9EEKXe(eAC)CKLXcd>.U"Z'f=Mpl@qa5C_VZSGrD(A*aj[_
%(rj'd9"9@5AaLZ0FpEku&=41q10M"M];R^<b>'Pn?Ua@R%3Is$gQZBh@-DXIrMODl7m2!eA)3D6*FLWZJ26Of/+2Ue*u+Z11GjHu
%[0]l(E\/[K`3W0s('?=LMD*sI0"0:6)lG!.%]+HYcC@MM5f5>Ak954/f!=/j1#+8!b"NM%Taqn7%p?>s^cZkh.[TC87BoV8/Kd@F
%mPi-(G[jGJZKtSaYLYu2`J)B*Ep^ZcU3'FY@O?fc]e*-V9\dX`Z!QAS.akTrLp4/M'3KpS&fFYjZN3T#_RlbYNNEX3KP]$;E[7NW
%8Z#q.b=nm3ITKDK44??$2]0!o$2-+&gGan(m:L>+*3=HE=j`-h9,6^m'GYrHp_;g$XBYpX;!;B@l\5!6BKTR&SJCJ6F%%#9@PPNL
%/CER`TFC_#6I/"=(/)?7XFAH>V1BC(0mB8p_=B%>+_rJ5$ZN;GU!(I(*]1fn"D?M@/BIu*hp#FSf\jToQ"[L?1#cY81mr<"5Y@5@
%<:9CKiO,*Tk1K.KoRT,^2pWFN#+%MQFgbka;,9Gg"!*$@G_)YZ.@YKu!'d.0JZuM>aqB@/1m<\5QQXKh-'tklE:k?RQ-0*b@WcSS
%n+,:,DtnNX'[#Qf=q"*L#uHdF6u,`=!/+\METTdP-&'-U9Y$2mIMR\-Y!TKZ1[%G"M%0mqXsDl2V-`SHO4j_tiT)icjoi`1L$PX&
%)&2C2$@qDAd(JiUm3`<g^W)DR!"2%#RpL@K&B&ck?d`4E(ltS4gN]ccLii#/WH,T"r>%i_9&qCh^oF5SmfVgYgo#n"><qUg>6Cu@
%?g,2?>Mn)W"r\3Mi$jCk10bFS)JQ*]AKFg.@qp;-fihI'B[A%qMqr3Fp7#9aNE"2[Q&^4J%4"6>7Y;O:"e&Zs8(q/XEH[Tu^noU9
%;]+NR$%TBe?Hd1X,I^f)GM[sC%VYhRKi$2boaT\i'Mq\.o2>opTt\qc`8-1#lJ/k]L4,0CJeO@"L(>bpS7TO>bE9+^=Nq>;p?.@e
%!Ei*89[DNR.Nmb1%9pu$;*kqP11*kUef$RiJV71n<Z?"LYT<]e]iesD%n_uE@IAOLV_!c)Rc=atp7$fm0`Bgg\^!;2QZ]X:]j;+5
%.?a"V["TD/.t^[S;1R<=/S6sLoUP+0V/b@*U#eeo(_&'/$KaJF*^f'NHj:cPX*2]&5b2c)dKdbZ(-3<;Hlt.3ijn=<N+&RX:!*&`
%4uF3S0aU/23ml<Z5lX\^s/LL5Bn*KaQ+1O*3$"-T2hkbAG]/Vq'^a!DC$f(+D>$VGgm]F6g)V[3<s#d7'.tng^n&4FrD8`J4'sMA
%2'VJWM]B"$B8(BH*6gt+c(-bWNV$c%&Y!j:cu,@*S#s<[9a(UM"c94\kWF[i+rI$.;a#qS:fIV+Hq?K[b+-r5BbJT^=(7G'.9c!=
%j;V0n^Im>nZJ%dl^$DAPliG7o=2Br:Z8"GElf6./"#AO=MF&0B$tPRR?4$&%2B`8eaJ"JC>_33SiXIJ#$qHlnk=<&ro01_D#S&]I
%6U(^(ZoF2VFX<J+CEa'aUiT5_cmVLR$&D1#rA[S,_i0P[-3>$ZRK_1OAN(-OGU!8TWa5^(*=3%5CY(N<h)r!gQEFIYSsRg,LZh7!
%[OF"L3C)sId4doBP@<kd`"<UUn\(dSK<C576#`7=e\G$mTnUPJ2"kFf$8iF>%b+U]^HrLc<MF7BqpA@c^0A+IFr5,&=o+e-ZW54R
%1c7[2kt:YoU-]f_>hp<l9_MjH.@Dr(`5'2IAa3H@<Zo,GGt+nXbe<r"H)3/K+1[1uU7EDIk0r*FgW?k70W9dbYqq<J_1Z"Ld#'bo
%UQ[%.4k(?1-``1.)p%nck_\>;:Nhd6rmo,i0o'1%UsrOoWAfgaTfu6l-fi?7!6@,qd:eT*!+acc1A:0_.$!R9QZ;V<>W>5Y>lf%b
%ANN?eTE7&1]8b;mZuk<Tcbo8GN5A^+8d&_ECKWn*4?Ua_+09E_R6:Rnirn4<qk5%A.Jk6A"2;Veb'DAO_LS=9L9h(aaq0-fN,m8U
%NR=+4,:?YEc#.67I`Webql5oGN'<28Y#Z&74W6#ZC`f5@J[.>&ed&%g=Ac$*po5)0loLmNc/WO)TP8q"r9th<#d'<gin]7[Y#`H:
%H;dQ:?+2UYP.<Jk]E#/X>H31u,B37[Lo,p@6#=(`I(d2?PEc-:]#%g]*2Y8qmoIB(d?+r@Ant7-6`::"U)fKT2h8n?=X.@t"fpHP
%c.P@C&oD"B+abq_]gV2,@XgrM6k>#[FhD9]Cg9`(,oSR/V[Bk'KFC7W3Y\:]KjdPuU**khX'I1,rn>&bg^@e+ZkYJ\TeX7_.,2:R
%/nsZ<-)Qj8*d/UAnPV6FK?)>+Q-GA?,d\p"6J)a)W+>@&^7)Z_IsQ)kin8;+1A:QVO+JSD"3&e*:]V9P#q8*%Bd]Z12G6?g.&$<P
%6I;T6/A(ca%iTYu>=.Y=="^d7TgIDON3>_=!d<GALj0b&M-f$YBu>Q7Pc>5fmjb\<orcH&IOMd9RZ+GVn$mmm't2Z7'Q!f#>@NfO
%p^u3DR*a9pWbk8Q)Ff\7Jfnp$!K[T/_NTOW5X];E.#ff#fMr-n-G2LW.YN"=33"RYW)0G#C6aP#R):nVfZn;tN&t.sR1:[7k:2V+
%6S5R>Dc.;rg>/)9qq-V,!o`/n+5*G>GS%>EnM6#K39(r?q![cZUXtap'Q`qj6>3SClYf7pQ;/jLM&A$5OXL\r+EVh:8'FCEKIsJ+
%d>_1`kTq27$gcS<GJJ&:+D`R[\&kkFfaOaT#%/UOYc;@`!'0'0k_d&Q1]FU.J@_50Jreu!HrREqWL*$LXdV-#!_7>)g;oL="CQq:
%KM@XCNs!?9JS8)a#ke+pf=P+2QS9,=kP]`4;8QWu/,`:A$+W.BX7hR:W7kl(>a5Y,.sn!V48f#+XM%o?,tjCIp>/XG+^Y@.TY(s;
%m4LQHU`T7a+>KVV8Mk'F1u'kh9m;0f]je*Tk&,1a^==f7<)Jpk1;^r<J!c_[a"fpTJL$<#PeR^uj3r+CnDJouc4Gg51-'N1p'rZ^
%Up4!p&*!UpJlqL:LT?X>fr61`lgl6$[\gci>*,Zr&&(YU:6KEd!@j=uetQ/(M[(4=6f;YWIM+gt&YRcJA@^MX#"KuHVS1rOO#j"O
%f'rW!iKdbM;Dr>l**;atVM:+&P5"QMZ`70+Z)No8kG*F2>3V3jQ4@R@ftX63JGiT%9aiZX5uWI>8qj;=c3HbhWj_Pgp2*b9nd!:?
%"\>.\fYAd)<TWacHb*<%&()]G+(H&fA1'(7:2lF&-ttg1>sG?iDN_1NRWU+e*s#Fc,/6lkYZgr-hn@$iRj^.@IN,cg.O,?'GAf'[
%&<%eO]61CNEDsh76KIYa=4+FLY4=aj8ZCF8ArWP:'8>S8p69k2[XDL@"g""eB]=Tm@V$fVPcF"%XKaAe$G3Ramp$\X-J;88]DhYa
%P$j*-W,uJ*L#;qT[QSS??=c'?9sW`<-$_d)=/2&Jm=$?J?-M+'Y#(bTf+[g'!N8r;faDH'2Y1$Z5T+RJ=!B9N`Rh]P.rIf!O7Kug
%EDKs@TQU;nGAhJj5R=/$G14K1?J*9prN-cZH6^7?=\Jg+d11U4AM#:sGcOG<6!$KmHqFUq`PIZp)C)LlIZQ20[#lSGC:ZMeBg6jE
%IH5]q#V'5MU]"K2$Tbi?\8gs^H4um`<&f]t]i_i'fE,ThTi[l[H['DI+*u<c'mYk9_^q!mh:<@U.2$Zqn;..>eP$MgF[153'd15;
%)5lRcTh$S:!DnN)"j9KV;ULB@3<Hk^FuGtoMZAH`7'Z[/)9g_<_Xdm'@_R1cPWD&Z_4(88djU.-&Q)7iCUr_B2,$HoH+6Cd:fa9C
%Ju&VjVJ"t8b3V&GMTZY-lknn/AnS^YTn&ZU/!(RRaqd`52WM(_P%fG!Wd>ATX-4f/FMJjT]3_9o4G[YRl:J&^!ch0)$/GW[Z.%Cu
%//I1)fr3>i!/KVg!dKJ8MEdk)Nd.\,_HI',p^2UhW=kJ6>[>VVFMX3+BiTu!(jgEq\O"q*fWL`TN\,]nrN8T#2k7'RUDP-AI6l3u
%/*ik(&g3Y[;\AbVX9dSIh#RRPm+Nm3J+rc=$GO=LmOC5I_1bF_.)0pObpemg"0A7W#;GD"Kr256Gp\UU(6B7uZ$gKHA5G+K,nCS3
%Wigq%@2+HV:tMhm?Sur*VEnm40bj5,P[_PMLu"<tFbtP];!RrCQ>._AP'FR7am]D>1WkC1pqg-6&"E_'7j8-%QHhW>lgGG"2C?2R
%(!49t&NAU[7@g1@,?j.biKEfT).^G1)?F9IAd1O]g`+4A01^FPB(CAHK"+'-c80R_Gg/P3O$S`O&:9n'9LhCl]Ok:2P[1euF,Mi%
%@7).%F31M<Eur7_VY_[@PTOfJiJe/8q*PRZn9a]'5Xi"I%2q[NBTV%20:8<^o3a(4RZE*'i(c#tj2&UNbLi1t'2aCb#]`luE]BTb
%CbM[,13O7+R_4YGZ9pT?W:-d)7'iDfY6RZE---r=<]7=i;)oHjSLW:T#hmJ>C.4]6]%(Ym$#>XG\QQ1T5SID(I'm+.ESW]!mW)7N
%)N"m%N)++]\ITogF\9E?.'.&QYOb)aZ,1(BhmM9]WM62r=;g5>Xc'Lt^I0D0mSZ$CpiEo>[\ZS;MAVXkeRc.HkVg#j#*.(7?a>n-
%[us])"#,GU<t.bZRYV6m.pkc(*u(g@oUC2U+WPcC++&D^,>`ilYCN2`>&</&dJ0]P;(/%oh)d[0Q&?P1+;VP9W3S\Ogu^<S]_F3_
%DDc+IKP6'q)K]!??4X%oTe1Yj/O[\FUAMRO'c,6l^E+eh@qt^O=TdFt>>ML,XEU(i.n_<J;ah$+U&_Gl)kj>8FP4X"f0QLk%h7H-
%Z"]p]:JMuf@X+\DSeo<3#ZI!nII^nsS`b_C;&4Lud,-eRa32&2>"DS6-C.d!_pjKnRl2&Acj^@XUpP?(&(\:`&Zu%:kX[$]h:sjI
%?<sF_oBJOh'q'>YD;k\O&CO9]6Qb<>2<Or1@+DNcIY7X+13H^q=?D,0lq8dGgCTonb+oLShVeGdO\bSn#^/a36:l:fIZ0UVr%#p0
%m&4XZdK@YsOD5?.VA0i-TWfE_obFj!Gh%"l"ULrK<*7MVg3Q_#DFaqrO2:smf<'13Ka"`ITNXPe$S"hNf3n5<]a4'o?O6sP;UO+R
%h]9&,^ZGguRIKXMXEuGYT25*NB9YT]oGOAG@AAf'Ac@qnd9-6@L]1'PU1`L"^tg*s>pr(boF#-!RK<k'NZKph%]-=jBKA7Z'ie`\
%H^(Ns[Y,CK7Xq-R@if+e<oM&j#WuG$*q3fO0t^t62dS6OA52[?ZTkD4;D7>_msVAmnDruod>XMD7(I%91D.qSf#@BLNnER65lZap
%%p5GTW/$PHYi_qnkr7-.]nS7J"(Eebk<nL[`4?/`8d"Rl.hdXk^TBB^PJa&<^0`Bt@FVVo6)=+W8pT!OFgX"C&/G&CfY)a!S/78C
%/;!t><O'mcMseQ?P['!J3W/:B)`7e,/Bts2S]RIe?psfmbrdZiZ<g"rQbVrW4!/F-P3T81P&q<,$)Aj.dhb`&r;#sg!M[mNiU)q#
%l'N5n<uCPhd:Q%D(i#mfN@Rd^o2_`4Tl-f@-cTqAh'\t!YIi9f[M$K/%]3Mj^sASnO0\I^[3(#QKl,%q!_s9nm!?5+/6$'LdJ39\
%;57WY7URds!*Ruq]tDaH&s5VTBe0C<[5G.NeX8jMd:.)f]a@PhaBu6cCTJO;WP1%#nDLc%V,<u0AbFHJ)2bF2Ma1?mq;.'u*8RRI
%5p;\al'KKB;K\#bonkGZ0"BVkRF"<pLG$F;<B,`+"b+b;F6\;SquXdbJ]!'`O>e(]jO;U6a@6VKQrZP=U$V;_F$b$i_@hBTZR`c?
%/q:E'OjIF2OZKbU][,[jZTbXfZGHOO_&2Gt9NWRkBGF]RKa#/#^pl)0d"#D'XT;@qT^N\&c?[oS?>Ab&V;eBcRlDQ_a1@lj5,FU"
%RD]-G4(J562]%o4/sKT#iJE6G1*oU!\?[e6B*i?"di*dbfYL;"WW;%]1sDjhGHppV;fILG(1W@lC=;]6dZ"W3C@MCDP1F&:H2-rf
%IV'[W!\K8cC9mLnUdLfI[BeQk+K!QVOL=-(YWYi5k7A[\Vh?0n"m$k<41^m9#sM4FS&Z%Kc/?X`(HL4+c,L],_,#:hR'=YA(Uf<!
%U!21NLHYoZ=QNsQbb8sL!d75uSG;\RR'?bW0d9^J5k[Q:q&B5nUG3lb8+G3._EWOqCsa!a#$GoB*uqn*JEF2EI+MF5J!_<?dq]@L
%(>>eQnN&Kum+MG^3VojH.j0hWoX(IR1?.R'K.ffZikrl!f6e7"Ju&:SW1EsAeT?VU#i$'e3^PY5=0s2sDn/^":\c`ijsQk&W%3%C
%0r99(0iO(H8R]b<aDLLZ.Ehf"]#=d5!!=An#?I0Hs5=s'NkjHnf0<,u[V[Eh2DDCd9N+Sr3-[]1IJ^WE/$?Th'd+aTXf+4*6]J<*
%h@\d?Ne1k5%.0$jZ2Z/Sc,+Qh`M!%0R4P2,)gCS`b6-%uRVW7aB=@tS<\#R4/piV*&iZ.W9if_bbr66M[sC##?V`N%&7qfL^n^a;
%I9(k&k+3I6bGp@0P(l6^ZCh"Fi59J?^I_AB+0=$T5WblG6b-s2R:a?m\+2eqbRW3q:n5WA]WW^JZ"d6%[+`0e,VP@_:OU2"\L]n3
%RPQV/M\QH.al*U@%/r06_iZK](BeJ9dr%W$@4ilN;9Oph)IAHC)JK]O>ng?^cNfqb#66%Sd\6khd]O)c#WrfB%eY*BM!4*D07Ou/
%239>3-ReO(J!dT?H+V61?U.aY/mI`=#=P2E^MCl0fFJ#MWpkE>*V[ImlCd7)a8LNq,-?-/Lq0p7h[gG.O>#P*+YYar2i]d!,@ag-
%&/\rs=i:b87mFDZ\01nl2FM4eD[;e/G_+Ne!X62MQT?&e&LV@R0,nAjD&7?u@U+0&E*X=.8!SgA=C!(#!tt=F7PR^5JtHfGTZuc3
%i!Zt1?m1)G5s!i0>`Ir>-t3Ee\*2%HAQWS#BTVZdGp-mjW\LhR&jT<2OW[AK5FI#0lr)"H%3FP/np*L.Am[\krhN3ZpU>Iadp`6^
%B=e?6o+[&`P!j,YgNeQ/@Bc(3HaS^XmT,]hlMsJGUC7Nf_BAO"3"I_bo[1s/*;4isNli'+k?3:"`17/pD^2utRU22CY^D2i-R5[L
%9d*S%@T[K=LM!/#:,;#<lN0C\lXa"n)R+b#TV;n<hA$,%<_fB25hr1"MoG78"*EF]7Gi("LN!N4#8K_jQ^L>eiP:p<\id]_#)8l'
%(.H-nG@D?t#[uQ+@Z(HOK(Y_0BL(QDamlUR\9%I1AAa5TQn96Y)Iu3K@ESj%_Q4G_6U+f3AHPt>e'T1H6U+aBO:@!W^Quu%-56Qe
%6b:*'h&]CS%ND6d=CNn@BTZANONK`RBh&lKg#BmF!*W9]$OMCK%)tBP%8l>7bV/8pWS,sY#1kMlTO]\I7Gc4r+PL`.G]%WkS)<+@
%IRscl8*<!O:,"JR5#F`%@n5S"BPl2+AHTbY*k161]]4esRnG.3(4J#kSo,<)j"ZhC?KLk-+hkRiT]:<:>h^ahc&F7/de@sjQ=LNZ
%r>TW#4MN(*p2fWWK.9iQbuM)>afNgA\R^GmR9TBUI%OYHW%@Heg:Oj`-g[fLU@<L=ZE[l'7=5Z$qUQ_4Fjg[=ho0t:($"rs53>a-
%j88I4muTb"+4=g!E[k$f>:oHiWIR*2454#/K0Nm9K5k\CJ8M1c=@#IcYTJHIY)M!EL]H`8HLF2;@J,Q@4r4:3%u0S&3#KGjYjYWH
%1Mp=@_qnKh62"6)Da5"tm/EMu.]ZUQ)>A31lK[7$5d/t<KKp."VNWaX^9nPT<L-i^!h+4PI6CEfWpp;)^O]Ze6*,#dKCr!>+)=`e
%"tJcIrS+\/=N/MiJMq(M?1Zm_3<;9@(IMA>9E[b5Cj5INT[ld-\N<H&*tA=r]7O@*_5tcPX4QQIWn#Wu'hs+'0Y8/^_r\0u</Xm2
%Rp3tOiNTRt5n*gi/$iXRe:M<+*.-,;?G3`iRq+naqW)^-3*Tjd)LA'A'mf#G)J[b!MWe1Q.,R,@A'H-'F6'N_/'G+2=(/PuRBT`>
%m.dUJZt.egZhT`oBu1@rk+<U`;^D^,IB%Z2*aa$7Hu<I\]&[__#f7nF;N?mD7j]?VTr+JW,1PZN'tj[(<:*0^rJC:\qMe6+-!Q)p
%LM-\nN[`o@s+U$_D45J/<ko)MQ7BgmKS:fsI@K>IJnW9/co@reX%%,>[_X;9d*L^3#(1q6RdVH^gLXtH9]?(_XT&]elK_oC,.,$a
%AQZ?FR[B=b-!DK:Q5),Oi-kic1CA&9H9;K,`G8XQQn.[4_M6QV!/<N0J(A*2l5h+u7@t/KV#Vh;K))REd!bBA`^cJ2>,[Rk+mM#\
%aY4F]\m1N*8*+qo7a2_q=qOXY=HEWQD7V,JSF7L<8J6%):R$7OQO2Dno?houQ.JZVXrM$"8h<=71BP^\a-i#8a)qu0*6;_NpX(&n
%f'j:!`Kd3=-RGbF,'=Sc-J)Ct6?*It"Cj.sPPbcj,`ehu7Mn'pX-D9l')\:8Hr0mQRddbAMBZf+Vr&&VAnD$?V%$D%-/E3"M$h9e
%$Z:'$r8Lijcu9bR(;a3Nr1;';?npR?S5Rn5\"`9+@@*fRKsMnSFb7VoGT&\@bp`cjc?;U?0&hU;kJMR1QE=]?E9/B'&+PU74u\TR
%A4$W.p2.99C^NW;]UieXRPWP*l-@#-'5`/phk?+e)b&7sM^lIY*2_2$ijWl(Dfj;MjSB(jjm8ui\X=&L3:0J'RY]X%?;DlCIQU'r
%PcsBH[fSdIJB$]`PX"s=6kQZ&fJ?4rY[(PB=fYIni]aDj$bnaM?Y3lhYmkhYYN1>T^YdBdmK(k!](^.!DE1%2pXl2;_90X?lQKXg
%?atpXFn]09DQ\_iVKMXgDdi$):C*(P/t3i73Zr?%8k"eLAkNn660FU:^bnGm@'XM9H;%2kPU3ca0m=B!&_N369+0k6%tahbR@.+G
%Fp5-MQ^`5`67e2UTIj8g\r1%"$!#O5cF-Yr.dYV>gPlcCX;'Vqc1%Nf+)dIga1n(BSOeNm4q**M:'JrFm:9K?f`m<2@^No,VtGII
%Jq!h5\Z5p+2iVJN-j^muikC<0KG)CV@5n>BYWmqEj)o[B#i-?@>%jp*:6b&=/Wl:a!,.I;!Z`,6i;t:e4?tb_j!-po,]nKWIR*r[
%1++`-R.<h7]VKaikV>3@RZ2G#kcHd=;V$[9OAI5.j4mopkX,c',Ym.Q9;'A3:1jojW:\OC6CSI:=WKsBZb]7>C$asb)H.`mg9KN>
%8D!!%F1;"!+`16^h:enGYO=DR]dGQAK7XY;+=$q4<<f+)gkSEgK457*+t!U,N<fNGa.LL0p-1g<7-9u^35A"Yh,%o+!R5&G:(+Fe
%C)u5"CC+g5HV%$>a`9lW57Zb5H0BGhoH?7io#?ChYtA[G36ab[PMor"p-VN9jDe*7Ymar72#J?#^^Bf4V\>W@X*M^@iKO3pNd2N.
%6l>>#%<al]jg(tA0QYT5>Q6b'-qhmIT!\Reep=Kd"51ifi=bF6nF]&O%m)bt!-PDVZ6p4A2=7Xf11P/Gb$b>(A</.5V&!2t\Ifu/
%!B!>>!TI26@M-:8;5RPPg5_\+lj_&%#a+P1)c!sb@`#L2TEO(+RK0ZXJ:J@8LhJU69.f<6i%:7\^^9`qTNa@Ng%R7F=[;&"fg='B
%Xd%iVEL2fINI0D]oTI:Q@MBE09HiFl=lQn;g3a*Lp]2!`(F;'(4^UZD\4-@O]mD@1aGQM+mU,E.i8M#2JSHh*rAp;62>WXT),I:s
%)Yu3Mae:$>Y?/)U4[+IMa/7"*oC;O9H=!+-(oV"BP>8+'0-JqB]$k!saE5e9!,:.-[ei;]U1hVuEXBFtrF]oWipqsm#,;W+JcOb3
%-8R&ai>b.1%HaLqiaYtM<!_LNa\]SH)2fG/0L0<)J3mrR,X,g**D-st@L#kj%Im_[&'Aa\aC(i\Ud`M9o5OunZaM,0aF]@<WPPu^
%9h>eb[B3S;-A[ui^7)Z*Ucd6/n_Io\^#?e=*+<MujY]Su-mE$@V.!ng?sC88it0qmNKc(6T-Aq>VtVJQa&K*2mX\SNC.B1(U$=eh
%ijmp-O"6udc@bm7UY^,)>`E9qU->4eGKr;*a"OQhV>:KtGo#f/UlOp2!>X#K\8Gj@V)o$R,LPR#6[\?uH^+lSZ#++R\AtGLP\OhI
%XN@:2]!o(#"]jCq!TL`4-;VqmpZR0qI?::C06#\q;qY)i?h/q4ZPFuCI:LZ$Ej["HpYSK6?u#QqX@]+PT+A:;Ksb;OV+D2?BtB[?
%+c68H6T0@@?1maGV(=P_='CUq^73:m#<q@"1eWFPHubMA!tq_meY%qc:0:/41crV[a^4aeDGTM2D<ho8<LXfT3!#J1L]8>F.MQg@
%n)HRaD=T!o'E@Y):(]aD@Z`Zo=OKmo+gIeV(IlQ(Y(9:q,u_.k9:<kXp=N!5lBM8hG8Eh-\RbDdI2ImlTU\Aj,b8rjNUcpoGMajZ
%7hldMe0H$0)O\ahS_B:9Tu?hG&4G284`Ge3&J"um]?0V]m#(l<,3\p^qLZ;3$k3UQhAO>X9LP=jSOuj)&#/\:(03,LH+7Z`2>N&5
%4)c5f`jXhbA%uMYf@H*j!e>Y\cP7P&\qq#m[0b2._djPW!FK\5'2AQjpsD')Us"eF<(*h$l_m6r!6S"T!O53mRR+ZQFOi"XFciJ;
%(cl&-!2nhH]Jr.jEgmQe=rP<Z.pGA@&fR'1UnD*T`Q^PJ&Vq]tB3W42if(b1BW??,j20)QAV)k_Bc8,H22@$DJ:_3rCDShiQ]#?a
%ZZ0SO]n<:6mlmL_P@Q-Vi:,dFL'l&GlR56!8qh?-7Tg_BiB\"_As;>XL&fLu]A8dQHOJ^79/@ARTd,IG'TYj^\@Yk9]E;o[;g+9.
%'/:dHWgjYtP.)\EgiTq_3Z_*6S_/5<;=Zg.CnS';BP%\q@g\^QBO<+`3Bf>([Sq1>6Wb@0<O_G6P;P=GVTTqL+[44o>s1B;?q'd1
%"+`G-]XBc2I*acaX)jijk)06b/#h#_GRN//J>TCKp9(1[nrX%L1,]A&bBq)/@iY:j4"E*d;@3G(%+BsTg*;9\Q76f2:9Z_%>$Wtc
%8-R<P`:T4J=#ZBO4s9FH_JuVT_sXRQ(NIE\BriS"$"lY+%b16JjE]U<GLM6P=uK!lg8K;Tq?^XCTHodERU@ET-XpksBp&9TVZX/j
%cu7%)1]7Z?XCcEDY@JWY>N,Gj<Tpihg[J_s8`XGFYW.,71'"D8VLgm_GNY8?kJ==UAZuC^FL(Z^^Er&`Cjlg?drZCO-HkRCp9LOs
%!X\T55g>Ya_?.eGY$*:o+[8aXpGrjIGE==gKTC1)GVrSq%LVU$G9`ETDH1tT0LSeAqgKf:0!%iJ>`:ou])Ms$kD[,PYn@Rmj#1X&
%'?2A$(<Am)LWQ5pVC5+7f)57;JQTuW%HZOU8CX=I]SO7]^V,3S@=B(Ae6m"5OH6@9__oZ$MS<uk^,+hqFSE*M?lsn[ai2,MBL&!7
%aE/kXQ1\O%S^Beu.g8NgK(G3*F!(W+QXPTB9M79R.f<D[:Vrun7*l#meZh2\M7lu5k3t0+i*t]Ehfa]c2-S:L@(Q%\jd)#sNbC1[
%dZ%]<?aJCuJ[$c]k"4/9*BtVY#:^:kBB:F=%+86RfhO#Mi3<7f(E"X;?dF287;EVkp(nDn.dP,NQ3Y=q+]fa/>uHE+Q4:mkGI!uP
%E;MDHN`f4(%l:/)mFp?s?4GGECba>gPU`4N85@bKk)`0I+j9A#&.t#[7"oFYB4N/5\s"@g'u,6cL[.s;E'Z`8TnL2loX\%'^:['D
%X:9KZeGI"ZKm>10/&r:+D(m:K<?fnG16Lu,"pH,eYRFBZFdXLJTY%'7Ca1pWiChfV%U9N^mHk_To[usJ1$Q/NJRqeQ2'4uf=-.]t
%(_MHq,#I[#\m'5O*0n"F28n4iAVYA#*!LP%]ng\!B7gf&bIRn(^;cZe<Y8<"/VF6(!;D[bJX$K\Qk`(+AFMA<FV$BA71m`q=BSd!
%M#uhd^VQ4[EI&9ENMi/<??cJ%@3PIQ<[)N&"t&SEB:*s;Pp>j4D&*NjDl^PHNdR=fO2"_1'PHq6CZiICW%-JK]5a1R,E#A>&/HIT
%8C82Uf@C0nP/Zos$1sVkS?O[QkXcE[O2&l/\)4cPB2TM^UPO83PD^@L(6_uB\?[4m0HaA1;0]?`^E2s%BRm4@\j[G@=eZ`YjTmW0
%(mML:r:OYI?@U/77OSS$NR3lH0\oNVAE$L;1RX[A!\0L0`*[?OM16Xrh\kSmL)bQ==Ri2>5ikj&YeBgiX)9?>"]:]-&]a6JHAK1J
%K*>YEoe=&0`@alMq)?hHAYB32j+j&r+sI-)Idbn#U%k+;oO"SfrVs8S(V*#jH4-+[iLj9&Ho@!.jZ5-3'9e'TFRlfZJqAom%&si6
%puW'Zk7CUu)p)]73%m#h5&8[!%Vd.aJQQZa\X_q=V_cO.Qg.T*Po$l8;<B!3\nLLS?1AIWLG324$AI,l@0]9o(P7\co'F0jQ5HbL
%LomUH>SsngCl]_\$W[9U'@JOkBIWKL+InE(k#5g7UE=3/$["=8:iD'Y7mMgg"2]scC41R56-DDoHMV2rAX]t?j@D=sqL`phRK8N9
%-p<])$Aa/0;+-/ZAE#d)A]lIQ#;o/q1hN<t\'g?r9u[fpFGRO2=AeHkeI"et`:=HH.$t:Va+m.STT?(q-A$:i1s?e&:c(TADQ%cO
%I-SWq@0jm9)u0:ng2PU9#XU'nA\VK-MLhUYiIH_P=L][98/iU2l"g1q9qY-M4EGoY^`1:OhqfYd\'hHVle$WJ%GL"lG(2IT8IO/X
%(_9$n#HE`^%5MJ6VW)9"AIWWB7HJ.q.Uk,a&'fEE->DtU8gOqTQn#l*pTM?g(hR:PWN/Z+OP&iKku,&PC*YVk+jW`;$iF't;)=0H
%A`n#VK!FYb\4Y\fIU3.E7a^F$O5jjI<]0<<_$Xrl"o%tMU**eg.Y'MmCQ#nWk,@scMe&SR<)u<O.BadKTX"k+`nEghi5%?+EEkMU
%A85G*%*3oPh_'Z_YW?B-mjGb:%(F6S:$4t(YbLQ0BT1'KX%BsHKb$?Y\eOsLEUdGk&/L]!$mT$'&dDCb(jA<&`o.%?&J=&j^Sa6N
%3ceDkT[7OKZfg,l,u<FI?-El4dqEX8[o&*%+PkBB+9U-!-r-)mdAA8RPnZk$AX-^2>m)W"/$UK8oqL&8H][BTZ_k)7jnR\*&'Q<A
%BA:W$gF<]Fn4`KdA`bB'5o6%#ZKdiMBU`oNSeD:26:oL4/7BNPWuK7lL-;*@_(qj"%]ZsHq%4-`?W2(!*DR9r1eT4"b.E<<`3BS2
%+,+745I/FhimIiJYhP:$E.pC[D%[#MZbHceS8n5"AA!GS?klQm0nRo`1<oH<m&EKrjCC*0#3@<Ns(UO081[9*:G)L]%X#3^/DOS#
%4#[25M(km,jN"'T7af\sA?o$64[SXOK1_HU9cANmY#.3m.X;$_*eM+nF_SBOEF6PARCP7Ya!?>iJnKs]m7Z&:?(EV0OMb,Me6`t.
%X*.1ROFZ^CL+<8VSr_p^@fU0rou?W+dP6)P69:dK7-]Y:&*6&G(lVU@Ym3%g]?p_&A`3)1.N]eHDq`\C4A@(o`_t)+M."k'WiO4*
%RFR&L6DrR7"qkZ]bgaLIppOhBT.W4UHG+.VOg4XZW\Y;1MTKTR<T;]L;:Qg?FJtI_iN7o1/_Nl`R80_82AtfmA]&Tjn4$l^^#"26
%'hbKnlt[$en%AJXb=OIHQ"mVnd?B;0R&8RR(VN]X)aj5PR&Dcum$KuW97i2hjZI&15Q*9^>X,A5J,eEoR<@O[1k`O=pDjA3?iDC<
%OUV3oVBGVA*(HQ@S'[JuZ\*r%RamrX66#_+/A)+"m>MDMMIt4;*L'U\@a?d>k(,AQ?bah[.kkfqpBOf_fb-MW1&\@)#,+1.&?P93
%d?d\oQKNB[03gA`j8lMAetSqjn(1W?^FsuQ#9i`ZTO2`Y(WFM91#1upesZ+:iH*4GhUBH:-_(r+Soc6X/$=kZjTNZ$K3HXp@LfG+
%q!_bbG!rm-Mui:<)0@`g)4gO*go>:Y:(RR72,0m#n$l-.f$4Wm6QtRll".3:aSRY:RT/Ur!cJn(l0kH#WZ6c8d,NRHA2F:J>B4?c
%&W=:";L!eg=bh_S)U;I'lgE&js2<9_CX.`>^m"np40-d?'ifCTl0eG8kC^dYPiuj(m.HUSqIV"%I0fs*<ZIc`3s504(h\HdeH86f
%"tR.<:`#NmKX15G`b0*%'*o)qd+hH#Mssk:bQU]kq0?^fM=%/M'YbM^n(_ess+9](25k#i7n-P%o)fdZ.Ys,Ea39IRBGuS3K]56:
%[-G^@bs=R*r'9J262X#Q]fZfTX=:TdOZ4$oo\Q.Ip2Ba*@t22&KH\rGN$q%Z(L.kT:`+\#@.I-MT8gi<X$5oIU-Xr^>T8>*KB6<5
%@gIC3H65?9O@9s8h>'1cG7r#8mQfa;!VGfNf).ISql.?%YuokZ0%H?l;8n+"5t!pd<j]^>1:[!9'RCJ/.NA>#$s+NIb(Ym;oV#Q?
%s4e;1KHA-0J^[eQ_Dl@Np[5D3I`&YPqJKjQKEO*%R0qr8J;&7tnQ9lIc?N"?J<gHJm0MYfod[uec1:YMjt<&jj*(qfs#_s"iPA*S
%a;16Q;#"onG6^obqe(<R]lAIRImmtokWTnWDV-A4JljG,6-X?H$,t:O-q#4o-_KP4_PlI<%C4APD*B"/C]]79:3-GnUN+Z:_:.3=
%);fo3YJ7)=rlt,UiJBe'#YqM9Lf0;556-NVLt*M$'o)l+0hD8k]8"2g]4@.`.-"$pMKFQ+r%(N%R.s3."_^8""0rYD3@L/hr"VZI
%\4@b97j;KW@>c)tT"gkqrBuC[@s7Q*"N8<<m9S_r,/5lhn6]PM3A8(Ji+]DJBCGq`"ICBs)kuV]/-K@U01e5MTHNoJ;j_5C_7g8T
%n0CQEMc@g]AV!=pdh#57LlAt*Mpit=jeYU(j52L)YV?FPJu)V')idhR6h.Gr;*`+Qh;O@3IQnBL=Rr@PdJIgq><M+S=Y8>t;ITg7
%cl#2qgT['c%@UM8Zc;K`([Pd?WIFht#K353P&L;lm.K[qm[n^;Ym97[`M$XgZMM&@Ii1Tj6Y2D8YHojlWq=LK,$U:M*G6'ea6M4-
%aAN4ueVn<q,h6=!%&Mi3ksP?1+[(nZ`I6(KhC'L8L$_>,KXf`c]p0kHBMec)bM^*c_I*^I7f;K#!r@59aJ*G"$j4+qpLn7!h^gu^
%_q62\@=aI?J%1S:N/`bEs5JMN.-lror$Nad?*m$8qOm]S]21#fe<X^#A6r%G[/-(fK5;siN6oG1(6rpeDOFGL(-q^Rl8KEA`g4KK
%4,0cWbsJ&:GPCjpK`ufreUA?r>SOMMiGrE[%YP079-/`SK>cbF'PGdO/\KrKqrP^$(8,4Kobkk&rMb.LJqW[CR*5qD:8t=F8E2%J
%2^7mf><DN*n/s?T<=jcJBH#M7DKT@Wrid?ATnmMNkgF1jIkC8%<!1aG%r&0t%2g7(b$_mNr2:hqH+?ij!$ETuJ*?&F+20S9=)1)P
%JV%);g,XQ+9\*WQ#p=P5fbrM/2e9CL=aQ/><WmfT]G5goYh_f_WY.&Dh'ho#9S5)uGVXCP-cQ2*apa;XkSgdBIQk5j"WX/d:hC!t
%-jW\mr-Gsf^+:#KWgEKIH3fnO5G'>fNbE"B`&(gaF]se9GM[o;/t'8_pN'#g:g6V53P`U9O:PW%1oWh[_7YS*+5%"5Dpm"ehsBX-
%$I7gsh/QOP7X[Q$$U<X)C$h%q^f=[rW8K(;%X>h)/-(:`>8aZfRClRN5'/k67pL;aMo;j-bgm8GSYV3s[V:IM9KBG]+m2BnbKm2G
%L-mlcMh\;(i;"*iM:9n)^AQcIpNIt4iaC7*])!;\qa]"Epj.J0lA=O`A84>X5O2#U;RHstWHN2nZpI5J4$:!Bm<SIKCU^IM?rb:#
%^,'.r69YH24O;H.pE<ClNCssDQo,oq_AT1rd?m.c*[>c`XdSWQo*98h'oP2h`aa#J]2nhTY1KA9"nB-<)CK,Kor7#1EbPj/Bt\o(
%<&\9]Y:"'@om/QF^W.;OGm.3XZ8VU_-$:CT(%9/:)0RIQh%pc2+P*sdda86C-!B5"X#Z]q%"GIU#Dhi3k\\<E0f]Yla%'mI%u@l1
%40mb[/8bp(2RA&fA3,2D>_"UQO*N^GS^g]X$5S),8%F>fYIc\B8=W%JgDRTJo\T*AU+Z-)mE#>,50qEKr?Z%l9CuDO-2+nbUgfQH
%eR/_&#/HsT`]Sc?26.)RH-4qrPjJm9"hhZ#[s'?^Bi3,Ug)+jEQpTUt@hY(4&.GH4:a3uUG)\.I"Gk(=3-cQ5RFc_L\Es?>WDJPA
%$4PaKm#9'C::P2AhKI[tpj()s%1eKVm!PFk*-DhA*,Prap.I"F+:<kV6@mL&Lbnbjm6&Bo31VmiCS>=mZ@S0]L.f9^)dM6L.+Y`D
%f?9#_+WK2sb2YMF-U_ao$YH<JL<MjYlYU:k/^4+7Eij0LJge$&>lg35(o;HWK4YQ2R*oe)[haG>W3Ms1U37X*E"b50Jt-$).r)cr
%rJuQ/=[!WNNO!#E,i5VU5[.:jKrXX5QdC(PV18V&HSHYABS^P&@K[hg5X:ECLHBe7].0Z2/L*Rnb,b&/nqm^m93Z*b<NqcR<YSCU
%KGE:(Vn4$c?=^'K99oY%!s+MSf#Th'A0_9l2^@ImJ6omHeYH<9`I%[)(c##jCgX+tV0`MF7ER10S)%pJFhNP"=>OS(O@WKpiO,c>
%)\USe7g$?$+\+KKc6D*HY9!J!$]F"k$),r)ri.2ZYBbZDH*/+&9kBGhbRjpk`<Ef:l-FR/A\O:4&f,*Ur^RnK["I>SSZ`;;'YAbC
%K)J80<YC99@Ti/u"[m#m"KZ*6ngpFn=F/CCRTd=&-\4!NPdLeK\5u]01.a0N64MrTaDO?<DNn>B4bp"t)mYU0Poi!s](mAk0iS7:
%LJT5if#f2s#.B\;O;8Nsfh33FV_pdMoHsH8JIFu]CrQuX<qF>?AR@a)b8P+k7fag-][Rs>I^L&!0euP)kB@Nc2T<),.NK\5`gr*>
%kTG[VI^HU,lH1RWJH=$K\aQH%8Lq!o,(0OEe$@eLd(1GFfmmNeK.Q!;Y0XV5OV_;%f_lQAW:Eq0+GI@j*Zmb.Shp8E/_CsUV\/"k
%!lK(;?7M8)HTfdG>=&_of`\@<[@H1VrtD@uc6-.'s&i\u)t@M2H;%!!G%K<I#GdFD$mSnP0iYjuaIGdBd_/fcABW-9.Q_'Qb6fn]
%-mEpiogI[[@:%rl>$%rt.JBl0j"J:[!AjQI?._ZRp$hj0:h?ohYCW^ti4YDK1Rs,;[%Cb3eEi?GV?gl*9bU?n/lk5#["(3,$?P;I
%+dE[:*kWHs"u?:r%m9/p6X8rDAR(c2pYI.uL)OqVVWndd9#/6r<s^[+##l3La5gq7`;='ZD?cM:<0m?*&EG%(3W*@]@;ql>M,-NB
%>ZT5aee,24<B>_Vnps>q2L`j`W'#(V(9<"0JIp7)c":c'N'^4:[S*%j-9]U!k04/T?W.d:Lfu2b6Qi;$`PL*?'5>!s)DQGl0B'NN
%<@Kst0-!$<r$Xsp.[q(`jm4e5n"+r/&Ju1a+M_H?4i*K@>_)On+$;Yj$l_qK_,L]P[\XdO8*G/s7ajI8J&ek=-1SjI@V&B"%/P4K
%<(.#Whqonec^8I+cE\ILdR]QkdjIc^"<eOC@a7Ne#-"gcZ^'pV@4l0$j:^&r5S`".V8D"kkWP2en!tdd.RoI%j%Uh5$t=Ph9[*+u
%+M<0KcH<.i4J0$\!Ejq0GB6YR""8FZYV+%5AH9XLil?/lY%+d\.U?W=!b]I3aqc5G6t`+M?K*:Jjk4ZS\)A$jXBR6-B3PB"a"/9N
%AI)Z8"a(lm/06],'.VfoagtT#!)m`Od&U"^->CC<ojJb$PJ+'M1:2Yp#9JLqae)1J&/:&HG"%Im*Q\N=Gh/!HHk8K1eQl%LMN,.*
%iQ;1f1#L5Vl&Tr!Ll)=G_9"6J<5o#,G`)mGJ=6t$9X<tfVI-X=4X.>8MF+%FQCYaoL)#i;G7dsJBXsFkokP.)^aMolL.)(tEme`V
%#CZ58rsrUg=PF\]/+"2d)%HR5QJK'O/eo"EZi,K`<!>1F;O/V)59K)o15W8TACeeUR)ZX+<)h9WRm2i$hp9\reZ:Ld*#o)'9r8C?
%Y_`5@-'2`fdsLA\e)R+3pD?.J-`fZTT7*)t#PXJNk3uTY1;\6`?BUX!8o9S1EN!h?chZVGke/^b8hKV.;UiuUKo4fNRU";bc\6/'
%;h^=D[gmX^do\mh`"dWZE-"F.;&ZD+Gb&*Z!>sQ`7ME?tb#d&1Id>e3j2QtS6c>>Y5"RRM!uTG&&#0Kp)FqbW%F/tY9TA":cGcE^
%496/&b#+0bn6`16KS0k]DO='G!C\V[<EbT**jPc8#]-SR^LoE/=en\n2$#;?(YT,4PFQ)@Yl8s87I>1uX&@:.2b=sniR!X`g6h8D
%8%t>\0,\P_HPM95pJac$anZih,7:a8%@oD"DRNf6c]4bfCc[;s"/[-nn!/"tk^>8;R^-`JLtbU:)'pY>lAZPsTSOZi[OSJs';]E'
%&=II(f2GQ>)Gml`rp&2L,&sHpc:d9]#\>Gh<PeMD6Fhm-(B\N/?VbXEKO`omlfDe>EE0grQ/_=i>2Q1-`tD[tE#.%\O6>U8@a1ZV
%`?Oc1_*+Dkgd*#Xq4Q"+qcfca<3))fPH0U-=0%o@eLEn^et?%U154ef<Bru\):Y[P0;EXFC)'Y1]`sUu9+BE@`t_T+1l0<0=p!m'
%XhVJSeIl>5\gpIO=+N;\Z#6^G!DjNhX[I_WT[fuTn\rZWF1,8+=&go&X&\qncc"53>4Us/>Hbn^=EB3Cd88T.?2YmnF4r514LW2a
%[.PmopPBe6l;^*Gq+&+*_nK%=e9gF[B_"c0"MG/5=]GVY9O0uG7t,,J2P+DASjQY:j<dX%<@e0EeAS"\Ja#IC!4Q-c7]I`!X&T`m
%C/mYrX\r/U.il#ih!D"'eZ-XQU8V(#dTd%19;%a"-u)cV=o[6b%bPhdFBb^O.m#.ZQjtY"i(@#);l3O-fmH)b_WQt4kt4r@?)b^-
%?$4Db/9-<(+u3n5Qp"LlpOhs`[h@2j!!U%cU.;ITMoono^Au0`CHGI#_W\Q^4aIi$HS$]LYohbBH<M7sdZ/&W6)i#0<lMm1[Hc$3
%]i1us:6C,?I#6A\BM5MQcq9@+>M[#4eiL,Nguo8sWK@e*"U$sm\Ph*=3'Pp&=l%g^DHVdu!MF#4&N]\"lH^gQn;/28:rObs-lJD.
%,-`*.<D@rf^J?(C[bDF]O`US'ku6q6ZM=Ju@AV/WH^QL7kt5S"GJH%m^@36lUjMPYbIX&&@3p2%8Qtg!!$-[cap-pn7T*)'i)1c(
%^#ul]$V#RFMWSFQ48:JZLOF$/;I.]'<ef99-L-(jM#9/lkaK*"r30X^^Dfuj&=!c410B[!W*t(3hk0$cPW+?HFV>E/"EI&UX&a=7
%g05d`Zm:SAS!bV`Sj.sDctP&K"qc&J+AK3;:DH)%/%;<c#K8N(2m#`W.hY!tAO\jNrIDYkm`&n]E_bk'D9%/l]4Fp*&M2016kXTA
%M8EOcq>,PgAW-JC=db)3f/X`S7jSiT-13#=lgF+8QWD1j?dIoN=/,9f@::%UJ_<@"*O)%_!XLlV/"Jo#5R@U9KHq([K:khsR56(F
%3"Hu>+TIqU6rgt$6+*39Pg,^)PVMN0X43XG<P+4FQb</_>bVC@_'n/hS@3[lG5DUB-oG"$WHj7t2C13G:$1<%\aQ,05kA`.lRUf&
%RuDr`HPH4l7NPgd9!O$u7>ocT,Y-b4;rSQ-9E"gk*"EjbEKcgJmdl99H.?9U<:3?5PFmg$Od/Hs7YQu[;rc,3Bst,p!>r:U`3iM$
%X_\2"<Xb&9PUk2=^!)99,0(;I3jg`e+;T)<#;@UBbk(>R0sFr@_gXBCmnU3<=mRS`7M5;2;)H<#9o[PF`MSC+"is!ph.r+63Y.c+
%_3B;DR;:S]h$TrnJ^*ZZ6!%T/rY7#+%FL3e'M1O).aZG\#%"cJq^B&%-5+O06CTVTQ?M<CWK_?-`WhWIDlc70j0Fu:M`1d3P0X^'
%<b^hW+?`">qTfA)`)"EM\iU.Q.F*Sn3*?O?9eRqhS6_RmjOR(Y%AeV@ZPBg*1M*o#Zu66TEDBaIL'NW>]t)[4IUegGGCii[ZWnR]
%m`&7d04OX%oDkF:9<%"XFBfmmjgngcEsm@0P&FGD<h=MBZI-Fi#^KC:^O(YV5o654=IC1$`^U5i`Wo^<(-^([oA?RuRuj^>#mNYl
%-T73O[h\,k=1jFIJ)pIqRfq_uD_Vit,Vt1Y_=!Qr=ka;.M11RW*)E`K>uT53rG?Eefh==83:/E/b/b2E;!!Y$dLKXe>b.6Q&)F@.
%&(-sV-V\BJ!_qEJT=-"An?Ug=eu*mXHrd^^"=(]d#,k^j=[XtM+c/:u1R@95-umTrBVWdcm;:R[#MP.\F15O*BtUAkj@1SLXpql!
%0!<sCY9[%$+Z9g?Rt#(+!nE<ND9/R"D(nDH@M%Ek_9-U*-;VsLUS2Wjl?'V&CG2(JgFQs(Dq#B7aXC^*)7P<tg4hl,=g-tk3h#F5
%`dS[8"pd'u-H;X!1H":;md?aUn'YI'em/N1RTV)T+ORTd0+AU)Z?])U;9s-8+3"#dm)h.]es/%-3aWWT,i;&]qCht27%hKIUFY'u
%c%5FJG*%,&44_<"oKZtQ!]6f0fZAY#G&0f.+:WMu7K_((\OJC'aF;&1_rC)<RYB\1aYfNOfUa+oiOOW7A<Rca+,se!$0J"sXCRij
%NtB!i4?Q%jJNh%bp9Yq7]rBe7e/:a98d!=.$kP&eMtmY&d754Mq1q>BfqVZrOV*;ZRu`<]GKs].]*I,?`,t7k^Y"V*QH\/LlLlIn
%NfU+6#i>:3H8H_[Ts\fh3pDFsh&e+4?TUNk*s?H=\6?NM_b4=&8(kENLe/**Q!2n&qMo.>p7hTkqb]W7I\[P4+3/cYNLA^=5/QZ`
%b:YKS+,qL+HjtV^VRYR@CB22gG*UemqVW@rdU(VSIRMVTnus3i/`l]$ms?_ANt=ZrjGC^%FO4kh)V]JDbsL&+bc?!@O#hYZ.=1G:
%5'B\;qpBthr@">TIajFbhCUqO'#AXn$]Ss+666=V:r:Q0*Y8+CT%:>]0,fq,'c@>_UbGti5l*Zp++GkEPT'<[<@5qr8.@TE!G,+(
%]bKlZg8`8,eh+BjksRC3)CmV<.@OL('6P]hnFSMHjl%sK@7t/W:1b4EYVS"eF7Q<S5S:`!/H[J4YRjbji1-Ia!Rq[T1uPaW&gpSr
%2Eu00A^*T8eO"N$4FI6=ec"'L(,Akl[(s3TW/7/9fjL)KJnV.C8r74N,rGKmo.leC;!NoB_3Zbg!p-Utkt"(hS^0P$,#p=jC0,JL
%/0k:YIU=3)SAh]J`:4DEnV<VN%4=saX_+fnfe#"Qe4asSM(!K![,Q;F8d7GF?)1Mf_*1".p\A#QJ]nWG2RK$W60#qM+,h0("q?bo
%5^>jEM"FW+?s`OHq=P:$&(36X*)jRS<#1+")+mGZ-u@)LOc(e6LsFYeR!+p]:^/MWhl)8T#eplXLDB.cKWg#PCi]7DK@m`6`RYU*
%a#)'>=hZpj\K[KY]*Sq#"]#H@/'HIljac!dQue4::,j(mVAMNWiKAb/Vi)017`Y,VAR5d?$$$A#;OZja`rmbh,/8n#"I/X9YXFcf
%$%\".q&,=%HM9r<E3H\tA-+"^FnD\TCGB>"0L$\1/@.Dd+B7,DZ^t#Cr/$<n8"[BWq%+LF,)XZEUef]ZVUj^SbH*XcHqT$?aYrdE
%/Kno[YlsLU%#E@NUI3i=_M-+]#NG+;D1<TX<pU:?h0TE(<XfR+fhtn%.V_IZ"pH1nq@[l(Epc26#7V<r+EV9d$;`*BgC!!oPAgQ-
%`iatI_X^$3+@FA+bAQp+%[?m@=Ki.F,fGu$'i)4M^,c,s)i,)sX=9E;5@u6;7c@>`rG\lL?H)=lkV,F<VH:a)Obeb1GodUPY"/eh
%ZE7N:W4$gq6"\D,cLU3kFd'SDZ8]4ha\(/9i63=e95F'Kp2s"n6546,#gUC#GUEbs$TXh-W!sP#d8<:G2o/B^f*OL^44?S$7V4]!
%M*,42cC2V]j"52?6%5'n?o.Nc+n,uc>fDOKB\9SZEH.E'+rKo`cK7k*6sU6u6"K#,phhuV%1GDG+>h-'Cp#m$!PrtKfZIc<-9ZIt
%[adY-\,-lXcVU;WXG_F#m`@oV>>;7fHl'_H%s5\a6[jR0/3#2e@]<i70'`r"kgOq&cP?]M@.8<\b/<A/k[iU>*9B"8YWn$bMe"BP
%Ze%p8m#V`nja`m,PLX<A#(_$dqnTQu')[i<,ocS-l^"T0WIZ6N_(Jf+<:>fJ*tW0r23Y]Y:%X.D0qCJKJd"RN^:KIq05`(Yq.(s1
%S)P01&"'mS]rLIRJFk<DQPLCSZ9$P!_)$<Iq=bWc7p+cQn*H%Ub0aJUTTb&..Vp^kF2<t8Af&JI,#==Bo4RY+qg>'\-NbkI9+pQ#
%S`-a,-k(<=`+G([Ic7PJl8m\22=(T''=nl"7Rs;J^=8_]Zg?OYCrp9bLdChR>7jbOL^gXb<dm0@kO^S9,*Ua,B0U24B_h^rE.l/l
%b-L<F)8(0&OJd30DU93qq*^o6h0k__:uor@Up@hoZ\b5/^p'9loYlD/Kkn"m#8HR4:JN\/WqEcpg4>,J)^s,TBA8T/"f_btKo7E\
%8fkK7";WdS5cI6uEdlGs`m<X2JYR7ki+SP4W5[X_3>-YOJ5U0SV!d>r`f5rO'548.KBWs)m5!eD#Fe0.Ydk6D%/e&lb98!5SN81O
%>f:G!5tD`H46/:F6^TS.Ue,d#B4?G77t7]lUa7QUBU9i0J_p5+]>pRe6MLCl6'7nS3=8(Xr%rEl!\3,`^_jHWDRBl6U`u5o]27$b
%:U'1B%A9dYI%tk0^[uMEOHDL,BCN!,/")pr)bE6AL/>f>=2Xqj:]W9Rj0VgtEE2Ignl;K@eF]Si!CaS\!X3'AnJ"7h=S:'l@1JAI
%Y;p24ROh!(>"_$_1(^5@;CSJ]ef,e,V</IE5!nsGYgN1CRh^#IZr-8n,]+EUYdi3bng1cR\WuC.20-g!"@sF/)29-XSIirt-=+0E
%p27;:'F/HLSI00.NY]b4h.X95D<N58$e*lu6_[g7^-hj-\Lf!ZoQ"J5pPYfcZ^NnQ]";FTG-(tfP5o&kAQU(*>Sb5h0$++cih;+7
%lJI[S/pk'k,9`VCPjCCK6!k/,.g+8POhKZ5GI>7"7rTg,8b9p(@g](=$s)3,<Wc.,BbZX3CS/rOg-W_T]!iqQRSHOYgq/E.lp#bE
%W&D_J2FON/lb3d[r#QXWb/.DcrG4sGaU0'A/./0/RieBTB@tai,D2b__8O8i*Y3ES<&H31a!7u1hK%A]:BA-^USdG-@1l?hbI)h@
%bXF[i);!_BK0PtV>oYi7N\UbQDsA.da/]C0W[sYfad7!ZpZp\^(ibGD\/<iMB8UJ6rYVfWQi6=^,p8]k8?gpE\-<&jI2Her.ZYO0
%9R+8?%?e-i\:h_RY2klN@R#HNJFcl9IPDq2b$AFHm&&LsXCP<_K-#P6OuSh@#'i#imhD"k[7d%DGS,!Q[YY&T3gI">+J6<XfaGop
%5@L810",EuSB)\6b39HuN8%KZqjos<bu,UOj1Supcgk'=jgqS!QshG<=[$Ld]n*!?321a.q7@d0@.OUjY-&=@eth6/l#;=aWIX'R
%5GhEL?V!96[j]\lkT4j5S5#Z6H'5iV"s),8l"\q;!?*,+gf8/JT\ufXfW'a>q6@h-\=0(GS_hkqqj76olSc;\@:MJc%f-</lkom2
%Ti1S,'Jj/`7B)8ff=F0pMtPp)OuDBJ#5>*5L;kgZ%gY+LU(cSaB%q[c";J<ep;&rLJl:=G%C(-dQD'`5:ggN\VjA-BaYcWX#>5!u
%Tg#PDL2RWdP[L5$fe(o\_Qn'*ojWIfR$M8b#uF]JT>)l*Vtp!RpNfpW;%m!To#'^s]U!-1KlsoLT,1Poo"ur[lD;?_@I]DR]_`H^
%8Hg`l?M\oh$eom?^Qg"h9S0hK`PS`9T20ROl9ADOYM5)Ls)@uhpsuJP"mSqJ#>%sNh^e-HmcV/9QlkA)gnpl\AH8RN(b%Y)X;N&'
%PY\g\0r)%()*1fI(j<Al#WnPu+r/5ZMIlrgO6'u+38-X@0Ln8&BuZO]kqgemm<eOCAn(0)WX+:b"aWj(q`uKYTA#dARd/B8F)EM&
%5DBlDhWtUjeEN0W\7M$!D8:k[CaA?9!i&Y`/u32I!WP?en_cq0WVd@LQA0nVo8/pA0M.AbV@0\B9L`;7lW"g[L;P!p8tKMs2Qhn`
%(M8(nq&31!iS'ef2X=(!lTBu"8F9Ednf.p*`)?M&7!T`]7h)q^d``*<ZlDiWhA_-Lb:9V5*o,I&$UN+U&R__aIUR#b#Vq[i(T2b<
%MB,0igJ7]2b\p8QFc9R%2+OP[[MUU2X\3hO>\Vql**oLn[>NXf8505C'`t5Xg@&;uqNhV-pU\'\XK#LB"bt*\qf9'G-^Spo^7$WZ
%!eW_b`<H8JAMa.tmuFPd=_Lp7*#&@p\rNn#-l*0)j(]?3L:c2g2ob0fc?3IVm,#3(0C48uj0Zc"Kt'+qqoD9TCL6>tK5:=$g>[7H
%9t.&jNqh7Gk5YVt%4J9XJ3@+$Rr2=F")l8n>HHeL0ifg)K91sXi1ep'er-KaA[g!6gn?C=#GBJW^75`@%GlNLn%uVu"(K#P_0b.O
%_TEGd/du509j-%=Wh?[)_p5hc2i:Mb]m3tF@F:jsfL&e.RWu/hfS(7FDS0?7\'8XQOc5q+Mj4l&H_Ueg>hW;h]e0f%\X7ano@<4W
%`FeW:G!O=27Wc77^g]OQo70Ukp'K&#,U!(#]$h!Vp9]'In2eS:0?!b(lGe*f%SPM4,6+etFRr[h5">2BT%HB^gk`-c&Hq*ZA,)hp
%nH060N'9NWTRauM8NSaC:dCmeKo73Q"hFbh9:5Z3JV5;2Jt31Y)]&mp9_$XX)s<5>J/js2PY[--ad(Z$"R]!;Ud;"/*.h8^HUg:3
%"s9<'.9jM`/u3`$Qk[1qp)pF`G%HoAK>55V:O$59^9EnOjHr\_-9pnR\!IA2B'N`h&on6#",-`h`UdRgYu6`h1A4TQ-\?L2pUB>(
%l`UK#UoOo&Q5Rt+XW#H8)/k65!K.&m9T0/@`kR!R^_VmEWm/Q$H\$WKe3KBu7"1s?5,1PE&nL73SG@m8;9T5bLi92"k*PRJ+u._H
%M\K>;]),2*WKF0)9.s0B?'j+:AiC\"4`5)'=%>qSI!oKdn6<(<3(mJc0pLd+(.La3nc!i7fL\bQ6"[jeWKEUm\AoP@bb!,ZKg=;f
%QeO/T(gkTN)#ZQ(YEDeSVNk3CYj:djIZ(3"S09ED#'u\q7?57gK8-se_9VA9WUMAl*L7c;cS'5Pf/#M/g8bX8*H6J_5@X$nMhob/
%FoO?I?\3X&E#>#NN%&EM2ae.8DKHiHaA0)6KL_6K`+`Co*TXTK27_b7ol^We(Ndn6CTCV5-s]7PCoDN.^Fg?8MQ22\09OLkkIdcY
%=c"oi=ff-)Xl)15^iI\''=s&T7i=BZCP"10NG71Z'c`9q3bJ]+*Qe4='cK`Bjjg[PBl)eGLD1'da=pKPM7oDL2d0n+E-7h3QPCpH
%Qms.rQ6D<VZsP*ZU?^>6?HcP'`@qa.p#&("WY"$0KVSu^:s6V^5^?h\4u5+_cj`ba^_dLVh2#Y>'%@ZC94+cBV;JtNLSWO?on1gp
%^f490A5a_t1$=eX)"*%#O(>9_I_@]_%F1W);@teGPo#UB']?u=,%3=0@s\*ZTT/FhW]X?0EhLOoFcBcIj`;RHWAJrb^e<7bf/K(Z
%(W)CAROo$@`o)"^Jnd+8G+_Oc,0\bm`$B>QnY/EF"Zh338+tQr"t+4/!_m,_%)(SLV#<2=%lGJ$'h_]q2L0<5#\R:\*L8Gb\608K
%I#T`_J..RuY?,l_?AG9\Q8]n3a41&s)5H`LA2iW&U.;QdVtIK2#!Dc#@-b)8hSur2,N<LM]dq9UE<,5\b;Ol1ie^6VkFC&iCEfgp
%V5@#ij5f-,VVqmq[QgAXnQW?pjU%-Y<>`VoYb$+''([sbpP.'W';dC@/8^uS_?T=TV/E$5>2%n1A;e>@jC<,n7!agKd5!=CfR/Gl
%6lF]icD6K9h,=S<en<Z#F;T5UX`4.*]NG&bAafQ+O38Z3^tF>K@WK<o/CPRRnVLBmC03L7/ARZ-8O\lP#i]B(Q9iq5361]c-*$<$
%UM7I#gmt#M26nn4!5k1De\0&:OXgCjbC>(aUbOK"4$ls,Ok\9:%AeeW*u\`=OQ>VsP])u,:K5kLY%fhDV)?mjNBKj]],?4Y^s?JY
%-+C0]_e"S7M,L/MP9S%\YCWk$73G=#SVb\@S:_[9R,/nDVg^b>PQdb&hFo44<uWH+0t-rL,:r)"c,@+ili>P/Lm=>_O4j!bk<ndV
%;7,q2Qbr/7H7;aCkL1D?RVFl(I%S:j(UmW>FDB9&O,&0MaNj+/d,WcL<U*G.4Id*6)]l+/f`d4XV8^?/g-]"Mc_a@UN6>gQdS_%D
%SqZok->f9]THI'dGklL'IuS9DiPDCsj892CS2ansBL8>!/=dmTMRnE5dBqoZfG]UlRn7k*$-d:ql()V]q#uMCk;!+I3Fe.V.qiH@
%[.V#Z(YK%KV8lD"kE(8>cR:+OGY+k;hQuXGWk:aVR*dW.N3*SbS9R/"2O-]Hq<X)XrKCsPQVA\6k^F7OP8_S'ln^Oj`"XjB#EH"i
%-:pFqP6WhH>q/pBooial)Y_k9alr))YtO9.XRZTj97<P4)3@SbL@k'+ZfjN]/813i0C^T^>8+OoPG*@ZC`P(W@.Cd(fHcd@5-`./
%H'8+7Fbt+%i>OfUG4N<9N\)$lUTc!o_42\3SFeurFqPnCQ9KH/?,;`SFV4Ok6d=rt<2lPt5Hoal"BuodhX"9XEF'td=ND*3p-%8U
%H@fa7jL0tlb$@qkY0\Lg=j)7mqJEJF_dcpLq<0gC&2;GfZaTqKm\WV%Of&p==+u([>EERUdL*_Weq`#ap"=BbYA3l4!Ns^NcTS.=
%8mN?*[`r?LVm]O(3NJ%9N/sPE-s?sm`;'#4[r$dW,<kis\fs][#@)hF4#NT3/h]I`QY6=5=rAFTfoAdM$a/8ls6q0dB#+j-X7>5n
%kV6u=h2&e1U<C!r;'S'i/;uJ]kA$[*GWG,Gm/7_oa)YZ#0F"'R;sF.d=]KA3kSt85C2Xcr0uJ%^=mP=lO<Q30<_MtqZ).oW_:35-
%@N4jbU=;eY#mq=hBr\Nt=m!a6)bW)uhUQj5K3tF3Ic"h#",>2CQg`]0>L)?r$f&/9Kh]<W2pcm_F/.BN::***FYd)-QECBL`$p7i
%[nrTrUVU<r1/I"If[X-D9ef7`E<k)pZLO/\L!Xd%CAIQI9j@".!X@:jh]2>ZZF]_7/r8+'g#76E$%?Km81ks7bNY$b3jor=5Ot8T
%T:6rS/H0C^r\Z8l<Za5g9YssBm&"dn4^ch/Fk#0M&J3aAThALc26tA*oeGRqH0u.8(k%e&>.(gmR1kZ5cXb(;$I3KtI8'SZRi?.H
%&n&;]?3iI\(*+pGl5S)p9A;/^nY0JVh%YJN5&$8pNBt$:J,.ItncdKXBcFA:OI?mO=jsK`c[-G[MhefBp-!3fWX0KDH&eeId@/(K
%s5fsii-<WVNPpb+r=^e>8a`&`$W9+T=^_(YfD9g>>'Z08]P&n3qJuYWhC#HXnRn)_]iV@K[m.lj4G4R]S,$m7\Y\hhh1t`4kN??s
%-&>6]>1m%D.!7[cG<Z@U`3X:Em!U8OT*I_UaPIJpR+p:X#nQWmE6B,;gC8A%JNR[F8g"I4.;\".&64h@F13NmmBnhn&#R%D:4''+
%d))^Rp18g1];%$3mHJE.HV#&d9SPO4&L28,iP#JZ.NoA'#*<fd7ZR7r*4Hk?@)\7aR1K%'@(1YDaWs@_0Y*r:VUp`[%E1iD'mjCC
%TcGMb8kg,"fpLP#M[<*5C%:5V>-P%J9m70fRq+^Wbpj0t4mc5>"_AC692;H9NHL]8M2jZWGIC]p##4XLS)rQ_'A$iL$SXF=<ldlc
%CM!61i7ADi1[p<4/plKR%3$a2ODW+]<B2Z!4&&,Pk]V`/b*6HX*c,&gKcYt;khOAXZKU->Z\)Ror,.0llUK^j"@chd.!@0LOg$)q
%\b'-unEK:[E`Cq%c3#6;eZ/R%7:4KgJijhJrh;0j@975HEcSlcqTU^AcJ`=S!Z^H8VNShI^qD_1q04Z[:$5Trj2/Lc9legUPXHrs
%2e<7DLPa,=_eJ8i$IIKuj^6r"0O8,@n?.KXZhrYq]E3oj2q'1%<A]Z%e#B?fH[shT^B\l-Nr<X/C.97O?=L3"*VTpt7iX/CRG;P/
%CCnHscIoA*fl,Vq7?,5[4h(gWI^YSgAkNi-M>'n%bJtF8D=2r3hokUVs7Y*@K;!mh?Vo3`?af]./sA0t>Xu3qB(?92>#/FOAqZIa
%gXp1\(9b@QQ7ZR'/oD)E\]PRAV8?S`GfnJNp&^3VP%3N2A(q]lGHnqbNR+H]Y+&>hhMfFc92d=\GdKA7r!b$Gk%fguSQIS(JE3,c
%OjHM@0p*R(Vd;dn'=)Tqk<uNN\-u<#p,7'_oo/C.ChF1$H3oF`B(`W3MjV%0*[_hM5t*XN*egmFV:X7B'X"@3_)cl;lbs.-\KJ.\
%;VE18](NQaEjdC>D>V`8bV?Jm+EJJVR=cFlVJ@r'B"M-,6t*ju2'qtHA>?g#\(Wd@nEqt!3K]uc]Ca@gE$+%\9]B>\H/E%CY#ci;
%j(=1R_o7G_XDANSYo.^G,/8$^3/0A[),](q7*eCi)CUYbJR"*B=n@4s`=MtNVO\)9d7^hN2W.nKUOo\"R.@W*j^STT@:>[&!%sqQ
%R?A-d78/ut8KkOfngiYA'A"2OO)OCAg.="@?+DIoos-&>g8ii64:0^o4&PS\pU`IY<t_agLJnj0CIZrfgsMF''L.8%gJc<:jnr6^
%?H1I"@;]__*7/m1gClKZ4!^hn;Edclph`WeoJ3dJ]4-&q+47A'1],l<]DEA@A2`=e6p^CROq"K1YjM_,A(@N:[kJN-2^TE<L^diH
%SiY(DO"Oo\T$"!S1$+@R`_XP3'D]iac6PS[?\CBePDr\nT0m_>oWM)r$c>YXdO^(4NRWE*\bNP1Y&9RmK\`IICm0k,Va.=$+4t`c
%!*+(-_khlUjLU'dQU4#^<ScaZBmDu.qK:%&0Xb/C"lmNkSLNm7'G@_E/@Hb4'N!li<9KB:iP&f*HLu2+!-9)kE%(c>jsG)7!jL3-
%oD-J(J?LJ[lJYW+8&Z!c>RL6liYpZ3&eqTP8oJf#Uq6#akJ:j5ZcAnm@DAfo1\W9tF:BG('[gDg%5%gMO7sJ&GneUML9^q@!GA./
%!:9gDIWTqB+H<KcDouWA9$s>oaE!hf=j*RZ?fru%p378q(-Dp/4rskcfpt$^*X-rH&!>dI^eF%K59:!PUm(PaRfL49VtSZ'S*H#b
%$]j"D*f%Vc!"XhdVT9+^D26!]JB+AQB!4[Z6;hM_2sIqAiP<L-O=CNe]fqgr"B_@T9Rf#90WXW%h2dkCF`N8S_&a)?-bLH,J>\e?
%h>33&cK4"Ii-8H`Lu;'"9YPWf6@[GH3jo;G,F.b<T<7?Rb+8#A41Q$]N9A6rb1?j'SjM>M+HKKu3ut8iI=iNFbBSVr<Fm7W5N(4H
%ad=,M6<=B'f<VIRL-EQDV8FfG==k-M1cL?@&,'Z3C,S+UG-NMJ.&(\:[a!U(ko3<\PFaLB>J>j=$mnQmG"KLT6j43bXJ:HSICpHr
%2aBEaahpTNa8pjJj\L]8ZU(:7I^;p=7tmgFN>emu\P#6'!@f4.eQ!ied*QMbI^N_SKRoNMiBJu`irLQd]+3>&A?<XUrIfMY#+W9;
%OH+o4'cEeP3&C5s];"N9+?Zle!IpibKM"/2!u^b6N2*.irBc6@%OBiW;i4r']R,#1WIArah"Rl,.KWu),#U=uNSeA4.l0:R+-.e\
%#7bI@Ff[R884TG!r\4pKl-;@(`e7bXkL5:qR+slFqKoOsM6fm;IU'mMM[>e54YAe03_\:W/C8p%`I&R0gC69<PT"1ai0WrIG'6a/
%Q@JGWDBMO/Xl)=_6K7lJ2@%ACqHP*=%:Pr?II1K/_p8W@K`-Y8<8)l>&37(G(s'n%OcKN=k/mrCP:SOM9OBOWh/f0Ojo'i9OmIZ3
%QHb0DIQJsV[.\;V['3e]p]faKf;u55\>#Gk(4(r?6[R+-)X`k-f.[=fDO*Fd\<he%3fGI0R**:m,6Uj^FI4Am[//nk-lD5cI@UQR
%S%.X,R;!'Xo+UqhX!@CffT"$BgQ69<bUZ/-YZi_`BPi:%VM3@eh.c-c3Y(W7+9uJ_;&IAQKbP.!bFgj^61Y2["AL9Wo40p%#b$h`
%K2-V.=lX)9mJuELbPQMq*sJ+H0E9%2g!&$mBgp*a3"/(!Q(7i;(U_;e614.ZO.QlmEN1^*E00cd<TPrm,g5>T\0%NMQHNetG>@As
%h/f%*M%8`I6&+"ON48K?8%a;r?=trmIp%d#<&)\nZ#&A_?Ra%gNU.4^)t-KdipW2IC_kA1Q_*3>6=CHH=2+>/13P-?5iZj(d(Sno
%2n!ffSV^h:FF)-"o@(-I3b&_sf,:V@jj&["=W"NHE*`ZAbQR;$DtUFiH07^$i[o5EkY%(U32!3WK%D>chIIA:cQ`)e3-^5EF0o2$
%i72?b.N\T9pZ=)K#&'YR&h"B^*K13]>paimoQW&oJR8<UkTo)3UlScUe7G3Q=)$sAk6Em"5nPPsabsq+&OE@-2D3JgJn&Xknt*u?
%3+.T^'U%$GqB@I6X)J!`>-"?](Z:8eg[Y?Bh1^5NfWs`Yh%0f@>A`Tq?tr`EE.EfTMWf`&5c4^a:>$MCq7/?S/G!q>\BcN8UngKK
%pLS6["c=k3V@3s^Z@>'cWp7cXPch%f6Ad<HdCHM`Q\nA==-m4h0l.TeO\$oH2-Wlsnm*)Z7u7dI'#\2>nQ^'jLL7d:dX7]7-?-]1
%;+,f,(bb,9Mea79c(Nc(ik&;13Q25#PjPKbIg6d9ZF_<q0[j@mIX/I<Bc]c_0aQse.)5:29O:3C#i"uMW:*&l2_Uq-\r==%MV&P1
%eS*b^#U4:b1"7H5F^UII7;@(ORq4c?="T,>J!]V)ZdhIW%]Fc"fQL4%!QkAaEOeu-&2)%eFqFlGP>ccJ2!YDJQ(qH2YhE8PioOtp
%<C>EsA[NQ)F"l?(m0Slc#;=6L#LX2IfPmheNe4L&1camMJSQF.6mFOjaA534BJ0-)#DER,6S+AL#c\1EI.c3nWGPJZ0[>(RJ--Rt
%BFHg=UuTXT7$pL$o1EO\d$WB@Wmr&74je<X`"pY+!@&p!m+1dUml'o7Ju^6Q[IC`>i$2ut70e"abZ[\QH0).s`T9PEip4i9U7gtr
%`d;u7W4uI>$[GRP%:\eB'4f.?*L((Z4h!704+R%i=&Tms!]9+`jOCuG#=u*#JB3+Imk.X;LMXIH@2@7mc3eC32!4smr]2s:Vk_<o
%(/]<EXge58VM`soX;7'<#3[,[ln,YNX&)tJa;dh<1a$-$0iW><Aj&Ho_)[qL%cWtD2aCuB!)u8_7:0-fV_2Iu,kpV.6E/\QSg`ei
%N.WUe0Vp\\YGRGI7irq$5\7M^V&K7oY`NlOZ6U%.9GbY"=8QgJ0EnobA6-a3/BKl_i0fj8b[I\QeCa/JHMsXjKF9FX8saXKeT/Se
%oH@6u`RKYJ5pO.G3BB5NNiS^r>Af\el:s7VRZruY:A`Iu\^6G4`)_5+K8^rf(M+Lg8i5$/dcd#G`pp$B#?"&#&0^2j%%\A6])o?k
%FP/($`DHC;na]Z(n]T7Ipb-[&J*>Ap?)@6.(gW4Z[ImXjG:)YS9u$LnJd/Spf695KYamD]qs2knYgfi[jKfL0em!SgQN$mW\G`-:
%KDNWQ"VX@t6EAcJ_g.2OV\J531/mf91kr&?IrL<=ef^n%EChASnIV$d9Zm,S0'fdI"`YF,+>-"h7pJsSDiiJRfM_;a/m6G9Hki!H
%F\q6g>d?t+HAKbUpM(D/jC"MhE=']3R>]5g"`YF,+>*aG&]-3U2;KmAm'=p!-nW9G-G=+d92mEL5fJkO[9MG;6X'?R-:geZaeQ3(
%8B\TpUF7]K3>+8:=<90;b4'kAQ2!3UQ*@?:CMmS6p/r2c,uW36pC=Kl"gbL+U3_q\3Em177$71hJ3\@,)K^)#hX0W[_N(*VVjs#"
%G@hng*H$Ye9*@DB*GDW&coKZ>j,-4'!kLN:9,!`QAF_iu\CjmY/G']0p!j?3_Nq[5oD;`X+A%,*q3cj`O(OWI#>GOoj_lt;8TJO,
%h6qu(DgBruKtb?3_-I;NTd"H+$BKVrC:4igXsYXJrUJN>G4oXNDKRdb'K\S&_<r=eJD!Nl2[%3NXR-!Tdo*96RWC!EmS<\_)kUgD
%iOd0>A=&K%O``a75j!%1*e(18*%,9PocB`8rCgN[GAA&U2Z&ie2G`'krB!rdJ&V/mIGWYm&*O)&aAhg][#]#n>c$dVK%\9n")2]c
%,A;)'[BEfcGA=R(k9>W@?p'4G/,1P9G''e7X`QB5-D5^MTlV/XK'=AnL6/A'7$oehM!q'km!LpN,`[:N;>g``BQJ5Wb:rKe]A)$;
%K059&rfnfSMN!#P(oXZ?pUc=[J_%V/muo;8aY*,=IY:BU"I\(!pUlc1QO0VHo-f9XAKa05$h"cj<I9Na^,!cX6'%>V[.SA$^:BsA
%h%0FRYcimsJk@'mN.C3$m-%g`<^<[4"K5Rl;:7,X0cSF4!_?<mGt]>+2uIhuVfnI>cmJYaF.@8NbUeO;R;%`t[VRU@>N,-\@BX)[
%\<W>[V&",bFA?"?)anrKfK-X[E?Uaedg7)+Pg#<6N6AFpECGC>ORG*HR[Xn6)=M8qXpT=aP7/iu*PY%j*e4k`q$&Jc<m;h9B51:I
%MqtIV&KQ=UF;0(%fcGcGg=J/j;4E,I"T,:O2eSMDQV_b>+aU5.d+t1XWli$sh>@?h]L&Iu"k9%^KPE6.-TrH&9FXG[JT9s`OS78#
%T"r`2?Yrij#p?&mE6i^6i@p+r]1mq@7u(fdfTqj.eW2`DTFVM!4ZC[lV\+fk3LnK0BQ:l(b5$94JA3N%lV^pBe#[uED:V1d_730P
%bH).kr5bafDn@puOa;>0=caemDIQZ@VW0XsG&?;2RuP3*"A`dHm+rks2JP4Ylg)ZCatY^*!77kXi`V#"*Q*&RNb(;HB%juf(04)m
%R'oKq=5n)N*rBu`:"s0gf6^`'k>>E7BcE;3Z5B2=Vo;FQdl&ZXRpdM.[MMisS([gPg('>2VX<jD)bo(gs!pY\9\TSjdl-LS2*,lg
%BcE;$[JO9Pdl'06c,8V>D&/gaGp/A/G\C0<&4^cP::_Me_[&>aD*(#![XHM>gE+F$EPnCkbX2&CKPfJXqj^/oNsD`ICE2(eL;<6%
%_7#=AK[Y.&CtiCnbdRIuR,?Q)(P;=V!r.c8;lK8tBrat>2%Z&<O)_]@]-$@K$Xg,+J0?)!Q?%h(9g6',h5HT]NI2&W/?Xl^&OB+Y
%:"d<j@mM,.&i,nP2X!LRPZcVKoAFfQ'cS]#SuS5;53m5$W6GUN8iZhOff"IG)p9?j("L$u^[(*o:^,?%<.J6FZPsXo.m5*3W/-b_
%`$M3"&4K0/O!K3GWa@AXMtQJ$U"$Le_b@Z]?`m^ojja5\G,#+PIdpg(Np+mJ@KXXd]i_<6&MZa%el3^!B]PnWM_l8P^o"D@H9>:]
%pAPn1:bP[-2B#ZJT)!&)$"u#qKGKSf"^e8K`*P`<p#J"E>tg@pOPEsEjZP@)L-(-4eRe]kjO;-W0b\]E?CVU&=lp(WJ^CK1a-1?d
%5f'lAcsU&aW10OOAb3aK.=1CN[:if2nm,&"_e!(=aoeVTO)Y?BZ^VhH[r#\n4_<AKem9KR[Y!kQk%9ip>=!S<Kl[CW8jJ#O-+"5b
%/$&I`^9&mo8p*?O[1Eu&[cU=jPFL?j)R*UU+_i`X8!>0IE%CpOTU_2>2S6dF0"<$mk_7-mZW)!6B6.sTC9:1qcGTlq0uqh*lY1PM
%#Z'RPKEm:[lOcHQg)HaanOLEgs)OK%+n)TV(T_#rh0Bjp-A$h([B*Mk>8Y8aENd[?2AZ[YDn5T9s*tO@+92.40\@d;\=aU"Z6cRj
%MC=_s$f,o-.[UqIZ]ld]2,*J]1FT4%<plaDf:W$pTLaYa?MFhlJ?VTQmR!tt,gE[ZB-FAZ(*3N"8QW>Do<YFE_0I^ZVAcJ]Bb&^>
%hP9dgfpdtqBHS'(h%a>#LJb&cZbsY00>h;9bo0[38a]Mn.ZM^O4Bb/L"hd)'Yosq$&2&g(TCoK4Zj>Jn^"0>RC+-BMX*NQIc2UpT
%:E!1)0h(>*Et^F*I5_g4OpS)$C+2KK.+O:u4OniBiP,*H!LX$m[]aV%ga.(70d*>;XFuHe9JX9UD<R=F6K4DSn0Nur@d`r8)jV[f
%a6mk.+S=c^)<1j'YPj'V%-7BQ(d?(6WBCIA1KY_dKttsQjQA\'j)PnJU`[C<)'DW#Yf_%g2+frXQdS"?q"JXsMd+cTNAf7<$8S:5
%p0kMZCfP=2MIil1Zf#RdO%t5.F7hWYYZc7E\R)*=L[R:Bm5&<T$P+G_JOYdNgk"I/"6pmhc0_.nrV%?67UICX="5^KML8J`8`l!o
%qN>\qN*Woo\=;j,I@)9MrITK6=4bkK1&iamjH%(UDh%Vq*i/#mj1kNlPFX8jW\3+cQf@G^";Q,>bcBA)5St&]6R]6?'MFO-j1(ek
%F%dDm5^'49,m.-:B!SoI,8)-)8CbXOJML4M3YYH:&-Ui1CE]CU>1<H2?JA):FNLPYOTOrAKKA$6DgF?6o@MtHI8IHg%r+b#+`d>P
%Rmt1+U.T%D<bh'KJ,27GJ4Q1Jq@]g^M;`S&].q4\^[mdVagJ4$3#ro\eILCVAdWn_51JCf!pC[2*jJe'_\JguY!?\j3tnj)qXu2n
%Zc_itP6pW--!eft1OG;<Q[<QlAjtK%^4tFX/t)t=@:loFTq^\^`=@$4%94_(FZ=jFR$,)g`K27d_r/G,#bCk=RQHue7s?d^:QO+o
%(%^)8q26;i,rKjZkoLkWrG@Td.f<*Bf73RVs7FY;gHU/bo0<58s8EQ/o`+ja?\&):-=i1fs8A#Yn:1B-5Q0Vls1a']]DqMqro;&>
%^O6%Ls5TaO!RLcB+9+-gr*StY;CQ95\lV^pEUHc(0fL5fTWfd+/YWpQ(5<9Bo=pZ+ZdWI-CGKV9o9IH`/O5Kt=Hb&/m9j"+3S#I=
%Fnq[;X'eZMqb@BC-/V(pX?_!T.i/Q85PS&Mn,V%8m&NQ8hHZ5u&k?k);>(\9$e7e?C'@$jlb2*ukL)^d-%5-\2"KKOI.LXY<[f\(
%]AuEh4iY>Z<q?_aNL($S?(CijrLMXEr9q]Vd6LQHJCHedV<5AB78^PqC,s=?,]o\(Kd2fq"S4U>j#-sZ-E5nXVn<urB?F(4*-^[4
%lTofA2Ti?ObBt%37j`_Ght`0OV!f]'-gSnmH_&DCq##Ej68QM=ChC%;=N/at++mb@3=nZp=K.E:8&]jZccIa#WX,q;b[MKVL9&%L
%2+3[F-[Vu#l.Y-S4FMZ0>r/\&24g@&nEbfZCY+n)K5=_gO.X+N'bh@++D.R+SSG>T(0,ZsBq'/#qgX&F&RKr[M=X0BM"`[gYkfpl
%<F?t*5G]fed&:H:m2ua<-LkWAhq3Mh6q5j&p<7R6RCKgh,%n*i,71=nohp!;":LSaB=gBmFD7G35ES*9eS9*%7Ugeq+dDfS\EVAO
%E'qb,W_td(^,'f9Fkn@LrqZQ=U99+Q;*BOap<J<:1,YAaPO%.0o2H6&)aM7<ZWl]!oOf$$oGo_26kfhQb>eU<,/\(T@c`OiO2:&4
%+s!KmClg8VD>0^EdJQo2\VGMNifYOB@>&0=U=9#B*V!C`$5c($.-q^"G:HOFiG89a8/*\_Gj)@=)YR]us$W>^UH@>t(+<7rP%",C
%K^?G>R`07"NpqsEKk3Q#bh,)&2"qm7JTD\*[<".Y2)h1tVshl&[3uE'jU?=lP2G7tka-G]')HI]]NJ:mf&*[?h_BW/^MK6'G%+NL
%<Kq3_g6d3pYZ[pCQpr1Fi(0Ll)a!6?TjPn2=a!m#kY$2jEi<jiksYs3j$uS.b]>YM@<BMP@*h7UK0ZCmr%g)i/aFFk(3kN7[(mWR
%gZ_"BI=I_3,&27[#"b)jK*HqdQunfL3r;)^gd6]i-PB\@UT1ghr%sO6or3V<1B`_G.e[O9psM-#<SeikfMuhY@0LEkA3](?r,r=i
%7ZDN:4Ub,N^+"@kMKsJ,W`=M?0.Z!+gp>?'#3S/_4[8s[ec0D(,jp)RoE5%rjMW""!pN-Dr\r>;g3`H8l2DEsQr&o?2lVEffPPtQ
%Dbt%V0f"N6VhIJLM*O@k!hK:V]so.0C<`_?!+/f2RjVp((:+[,3qUV9F2(qoMQHR9T$l44fg6J_2"QG[N?ASRY$qBt'MQ7FVH69U
%9RZ5C:0WBDmC4+.][i>44-1.2\Q;XS:skUEl-iI5='Dc7^k&(Ze*B7uiFr*O+=]K+<m8-D-5BnJZCr43ljOBOWfFG]?==hE,b/._
%2\pr8aTreliFIKF?<QO_:9o5u6.="j8j*"t6[W>XaST"e^C-SK%%^$17,SI>&V77iA'\3sD:g(6i?Y'Q_HGh[,AAYtab:<DFLSW?
%,Vab9H]b3Od#r'`n&>P6"P\ULFl'D_KNF:"6Csj0^)e\_^M<bjJ6(ea/slrEHA>p!-n5M;+=g!##d_]VWZ7YKaY).bD_*%);0;<#
%frb=Y#KeTVqkuWL?rbE5@ojX:=&;kfCg['"KFDi$D<TQ2J_ka)TBNTB&R*KEa=NB:CKT:;GD6)$,!#`K0Q@&aGciMMc?L^6g?mHd
%EmM`?:&Z%fL`"K5.SU5WRT1X]M&.cs!AR27r3c^%XRQ0b2$QKcAa!cFKRbVYp\!Iq7p)+O=N.aFX\*m:2Ti@>\j6W:?JY67TOLTJ
%_7QsMlE$_O]gQ1Wp_E=f>V+i"GCI#2)^%:HE8FZY;'q@E\</e2eV+gZ?i$MI9>ED-8UsMjJ5(S1i8Kfo%A"@s.frZbb420,*Aq;(
%#)A"T&D:`RJM^#s`f9nZ'XFq9&2Sj<0=&3AZ`$clA7H`t$mmg9G)Hu"=fSZBC-rRN\h$*cbH*opgNElS?Z4i;l6$2I*\U=UW\72X
%ZHWCRW<6*2Ld;VO+q`^[Ya#A#*T>q,0TQR;JaCO`KBBh)q32$7+#m*`aTGP0V]lu<&"@a=n,`<\$Ah^nii!F$ik%OU>PT)L5h;3V
%>+ZVjGA.`a+1@PkhUZ15#^60&4X^jr`bi-@`L:HdINUnL-Vot4-</u@"0uAd@8J#KqOdu\/2`[(Ua5a\e<_l:U6r'eej2Eu&f,ga
%Ui)OF\=]KX$6'>GP)RT=kfVhb+\Ap,fa+.n*Dnmi@WNmQhT.trOPhFL=VN$A8qXef@$K97#=KqPFh0"PYR;!P\kVG`%NSHULe`l/
%;o'raLCDj=r)DA5[r/m\]@B#5A9`_<rJ[]#.LdkCMd>ET_#6IDDU.T567^[i8+U)m(tmB"oE(G?o13kn39"Z'NDPi1&[ROVRlK+A
%I6CGWICNA:Ht4McA+SQM`Il1%IikNU?Enq+*e".Q.9*Il1NI#%!9#ArVQLds]/bA80`-:?bYG388Vqq87R3`L1h]r^,$ZSTi?;6$
%PkV"M(K)4QV&b3)BhWpY<)NLL&EPGcn=FoP$4*T3)C1d_;%e*U]f5D.l-3N:),S/I)+Ij?WC+8u_9Q(4CI$D&eVrVLG\lCrd!q.c
%crdBFZI$e.d#m,!lbX*R-"O7!ie>u\p;Cjc#`Q2i/iS)bA4[Y-rLANipF+ro;,SSVG?hb8,#G9Jd8grD3C7Ce!QlZN-<;DGL(RLG
%HT[t>n5hmLePVM3Y'<PLo]<f.WJBu'P>Qlo*#$(I.AQKVOef?pZpTN>Q+Ir&>pW`'@9r?Tjr#/\9QUB*_2cYC'5b`;5";Oa`!k!S
%JP6<i)Dh_R@9_lP:G]%0cu@hmW"r34didA1!?%jqK(tOPOWfGLHOU^6B8akU3f"Q5;LkaK/:VWos4BX9B>+VoDnB6?i!5N?O@^0$
%2#q@/7S:U8r<E=n4R=3S`&fJ4E'iN,!,Vh-].=+iN]@9h!4@sp:$4RR*H8j+d0jf'KlupO3:K98c&5f&_3!9Nf9U`_cW$;@3\@e`
%VQ/Ed&:\e5bV#T4D^@[2D[&cGb.r"-Ms<O"0?t%3Xp??b!Ti.$:tF:WOG%$Lf25+YeuLFJHY?h)W7fabol+(HT?<%Y\]5cB#q@8G
%POW/P\+DD]3d>RehL=tL1+tI\gHagq]GKG7SD=G];?J.#pG[tIR^Z=;%g46pNgkB[e`&aTK=ds8F;)E.M'.?\4\UM+fc17PnfS3e
%Bd&r;6i^Y5H[4<Z,%DH'bm-\-aKWOq#[)(Zn#5r\VahOHTmGFa"M_N?PMD#tCT+P"&tXoC69kpO=rcO!@kF.6"eWY&e&RRoUNFnB
%<mdWhL/nN-?(DODWeBe/Zo$<+Sh7C\\r)PfWo[#&oBiXmE_Vd-/[E0'LWXHTgFbs,gZG902e4>mbOK%@.+!q#,t&nB6$`o+]P7lT
%&G:31KQRN_H8@*l(KEnFJP*TlG#=SV63o",/5*bc=^^p=@f*"XX0f@Ynu)'RE)/8uQX,j>\EpkkXM5^E9BHpT23mTm6Uo8AMF'(;
%!jubj/6mWs?U.Y3+JEOUX87RLTbH[s,`<58c9sn88%&B+[52L$*'&W?I:<.C?fnkk;Q6[lUYW#fnA%6_DME-eC[fP#4c>="^%Ff^
%krmd\nY&_fd8*Y4.TL%k7V8k=gl-E1D*cL%s-t?J%V`a:2.bYS3<I>@9//Z26_1]"29CFr+8*?-\1L[%s%`S]?Q'3=#bgWZh&K'P
%*mQb!bVb8Rk*_?PO"h).NqL'L_-4@g6L'k%16,.$nSZWre[gRUAt:QiboKnh$7g1V.Z;ksjj#5iW.qOb>0T\EUACZ?>?&8mjr)Vm
%'o!a$<i8pE]FP;U1\n%G;)@TC]RIr?fa)@\HaYsYdsIL/i+tr+LZGrcj=K7H"0J/&8A`0/iJ^<]Y'U'4h,aV7WCn>\q7Sls;S*Pa
%$!.2="gBt3&7AtB\mjnsXgPU\7`RXB1hh9?&aq;BHopjg\sEN)?L+%?U,Q^?Po'$o>b`"]gPeT%W=lD8n6#l<Y-I'jCuq)fc`qe`
%1]Zg&3+su.m+0-N*19,^AFC0&1ms4J;AhQpH!`t@]fBXPe2)L^F^C.5=4AH5DZEk9Dddetee4NnF_#FF_L%?#QELEk`_@e7KiH<K
%"?Q:7iHqYBhK-QONn\`%`l_d"$Ok/ZH_c+UFos2]%5]\DK3*K75,mkP0IftKo@nJ;S5s>jbo..BIl&E'"fS<k'D*FCVm:8;o3MU3
%Z28-TE^lKZ9?]olOEG>FJFu8cBaDRr#=.)Wn4%hU?0?`9bE!==1CLAk;&so-MPouTDh'"P*_56>L0';KE5HHa9?:&3:@*./Lij?4
%j?n$([,Wm@Uu[A;Ei?.JVd,`=mAa+K2HrUO2hQ!O`jJsZqeTkT!tXg%%Iuu)mN^nqq](EOp0UrFlCEUZjM-:gjgdY+aTs:%]-el@
%Mb\LBs$I-&,cRfeG]7k\l[6]e&l;Y:OOIrr*M/AG\=DHCcNpYq57AS'Ai,C8Pfi8$R2RUf!(9ff:cLP$h4@u=cF@2\2csR%!h]oC
%!>V++lItp$LmWrYdU!66S>TN=_?@_GE?XMPclOQV>(VI6:f/YS7ls;eI]$&'Gep\iK]k;Eq_u6T<5=&cqH7sknnQ[J7S:-0OW^`]
%`&/0Ak_3EIgk2$9\J`Z[KnYaH`\*%`B2$(`Y#=2D?g0Y:M(H/_=X9s[%2%l,\0JY7:7?cNclOR?cOu6Ob(QcN0((qLd>HJ.)h@@_
%[n4j5*+^n1Q:)SNk5o4ggXXX9HA^6;V"g`t2J:^%`%+:!c-Iq'/iA"20l]ofWoUYP&k:*>,r-[B,VRjd?b-XUA$;(>/J3m3?o#/p
%FP&Nr$eP3c9>K@NI.;A![&3_LZk*?l;h.G>$:*H5=H[6d6d]eEA1-N0#THkeA<Y"O\#b0W9*$k>97!-\IABra2Y>[D6/nXPo<o\V
%+1+$]16HjN0Af@?]8;kR]@7aZ@no%Z:<ArG<PE($*qe\E]I<I?[)1=!dl"/BQ:)[*nWQOA+d(u#ei>2Q]<Dcoc8Jfp+R0U@Usu2?
%hr=Gs]2F?<FHs-\AC>W)nPi`@jM"jYRg#+_hEnO^Urqc_Vhc23<L.dB(0HcM6,h%26j_*f_88*25p!q13)R>GA-!K*VU*DohZ_#f
%b;p;FGDH(5g04F>(fS/OcCG4+iA'5SFoj[6'AHZ,mru=7oS<!3,B$HG;O4(jKIk<&7li95ktRD_RmC,j1;ouT"Z0enRp@=FguNEO
%^@7IJr";0L;EY5V`:[>L\'LN[PYk!HNhJX!."mi6&[6ODQ/d7QWcO/J$7SF:D2EZQRj=oYA=d#,OLULH.g*8Z[Vq=polN1YPmjcr
%@M'PLntC/`WOpAtET/k3LdL-=*u8ba-V;sk4pohsF2[3%g[pO5`"9?Z;@bBGA$87]gL]YOHa[;Igl!.eMW'h/Y?#_r<>^MgPq_,F
%0%t>`R3Fe>*F>nh@9:_u2c5)+>ng"#UnlpPZ$0-3UEB^Dplu_8OtoU06FM]hWimVi25SjD(7btA#"XSI6h4>TBWCfiCnH&`QSqIo
%C3,RMcsubH",#O%Q.U;AaIZ*.H*nF?,dr8JSSe8d$%r2)27ijq(9<WU,u+%ob7h5VU:iCF/$=CPD-qD%OY2ZilGme:,,d"26++!#
%R>;?K1'e%JXu-.sWZ/M_A]j,62I_D#2/4Z`V@_7GWau')Z3/;2(.nr]A.6>Z;]r4>);gBJ3VVKd#Un\K-&os$pc.EaAprLAK?W2,
%MM\Pa(5HS$a'Ip^:Ddhmlq99Uqg_FSUDQn-0sPA84HRKhpn#'W`IkF*j+Ps$g`qC[&s2]'=u$!C.Bm,7^P]C^HpBDr8Sr5^fn?si
%9edSg*EF_$W5cNBK[^#L_Ehl`S:!SH/pot3O+>IDZWLQlU^$+96m%5AOdKW2Xq&d:.gN-$Gr_5i]8_u#3IO=^LO%ILI!<osUdgO&
%&>-jVAJN6,94eV:(>[6P8i<^3_bc?,f'_2\Z]dKXBHDB+X*[!'AR0.(e=WR2@8/2`]TJ\0ra02R6363's89WBDD;Ebnt"GZQ[19=
%jM.'ELRO)6ZWW*gSG/+'Z%<7KGG]YP?>s^fg_kITC2`jqeFEX7A)QBuCsn1=IU\V4XfT"?]6s:fNXNGbI6<aa8TgO'W=/s*Q5K^o
%B)MD*IX9>\M-JrL@r!O^rpjtNT.Vk7D$C8Hmo]r3:hTur9H=\)'@8IT'FH9:5e!\=W)=UPgL`QbDr-YL1EdhpJN"8.L-J1U"&FIb
%G])@6N6aMZcR*h80ZuIi=$e?%DYZ<DAL/E%&Hgp"<kT(DA"GoYc1sU;4)I#%bM8bp#B#AtEqZ?bGGfK,eBA);qSot+)c5E[1&]f@
%-M`_#I='ST8RQ3";.ci+pS54N[Ki3VWcu)?6u%-8+L(_Qk)l:KRrZ;<m%^H&YR4Hr2*Fd8I5mDAH$\L3o""l)6eUM3)1m&-OdEbB
%a7e>2@pampg&iTn8pPaC?JkM#+H`,"p0u^p0D63oMct(RNj_Z30a1Z@^?W5'X1-dp>SiWq0s*d"rS_KC7Q;SeKlD&+\mnAsahaX,
%mHuO:peUh7ksRH*K_!tRr*<rCOib:XVB+[;jL]&YQ?6]k'%5[DoRa+683`&Uh>9&qP!93*M&AH<^L3$,b@Vg]bW;ijSAdbWjh,Y#
%gS@!*ncgl"dhYG7TAQsOID7onaaOo`E;/uX:24UrZDT(tOfe'ph5^CnE52!pm[,BYJqC+7p1M*Q%m[bEC*OXj\[O.T/>hXfN4P*\
%dk'4C;)+OS81QT[H7/Pj`>of&md(F1Xa4l+Juq%8'kc6sabL(`dNq^>N5_JmgDnV/?e%fOcN,&X2QbH:K[Dbq;lZY*X@<FFg4n5h
%M*W]nc=oiLAo@.-o:h>ZY:$P*Zc8*gC%O5Og3U>JC1)9m)HS\WS^+#D/6=,0,:iRjGQULc.Q_h'O<BGS2![hfETiSHrRENXb7leb
%Das-Tp#0F%87i\IjOjU6SVnVq.'fhoJEpoaP>0<#Fj`I"U4/iR3kC,+XM)oBL*%V&pf<FNELea]g%=Y!XO<m0X@KhpT1e%'WXHB)
%[U5+;[d%_\*4g#6)pj#a\PKM'k).\,GXdBoq]>PD+Pg&l=0uVQQ0g=]'I5l"[C=>t5)DPI9%ufe)C&SY)rL%p:7$Uq#J9)$MaN/)
%S9['R)JMj`;Z"jR?./sC/.Pf6a3*QrSfXu4HW1Nm5W%7`)tJG/o`G#&jk9N"p`L8APpoIc!YP4>g\c;t\lCA?o?W=W5_g'3`mYn$
%ql]6?'d`<jWnVI<^VBSmqt#kUs)S#3c^36*IQ2lhJ,K*;j\N'%s8'3kfC-KOr9`P%?_0H1rQ6!aIQ@H$o_J1AgTNiV^-$i@l0!PH
%E6raCLCZWKiHO1/pFkMM<+>~>
%AI9_PrivateDataEnd
